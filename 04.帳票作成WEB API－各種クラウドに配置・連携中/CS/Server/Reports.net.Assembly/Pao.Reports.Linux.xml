<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Pao.Reports.Linux</name>
    </assembly>
    <members>
        <member name="T:Pao.Reports.About">
            <summary>
            Reports.netのバージョン情報ダイアログ
            </summary>
        </member>
        <member name="F:Pao.Reports.About.components">
            <summary>
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Pao.Reports.About.Dispose(System.Boolean)">
            <summary>
            使用されているリソースに後処理を実行します。
            </summary>
        </member>
        <member name="M:Pao.Reports.About.InitializeComponent">
            <summary>
            デザイナ サポートに必要なメソッドです。このメソッドの内容を
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="T:Pao.Reports.Code128Pdf.CodeSet128Pdf">
            <summary>
            CODE128のコードセット(AUTO, A, B, C)
            </summary>
        </member>
        <member name="F:Pao.Reports.Code128Pdf.CodeSet128Pdf.AUTO">
            <summary>
            AUTO
            </summary>
        </member>
        <member name="F:Pao.Reports.Code128Pdf.CodeSet128Pdf.CODE_A">
            <summary>
            CODE-A
            </summary>
        </member>
        <member name="F:Pao.Reports.Code128Pdf.CodeSet128Pdf.CODE_B">
            <summary>
            CODE-A
            </summary>
        </member>
        <member name="F:Pao.Reports.Code128Pdf.CodeSet128Pdf.CODE_C">
            <summary>
            CODE-A
            </summary>
        </member>
        <member name="T:Pao.Reports.QRCodePdf">
            <summary>
            QRコードPDF
            </summary>
        </member>
        <member name="P:Pao.Reports.QRCodePdf.StringEncoding">
            <summary>
            全角文字コード
            Encoding.GetEncoding()の引数は受け付けます。
            規定値："shift-jis"
            例："UTF-8" / "932" ...等...
            </summary>
        </member>
        <member name="P:Pao.Reports.QRCodePdf.ErrorCorrect">
            <summary>
            エラー訂正レベル
            <c> "L"</c>
            <c> "M"</c>
            <c> "Q"</c>
            <c> "H"</c>
            </summary>
        </member>
        <member name="P:Pao.Reports.QRCodePdf.Version">
            <summary>
            バージョン
            <c> 1～40</c>
            </summary>
        </member>
        <member name="P:Pao.Reports.QRCodePdf.EncodeMode">
            <summary>
            エンコードモード
            <c>　"N":数字のみ</c>
            <c>　"A":英数字のみ</c>
            <c>　その他("Z"):8ビットバイトコード(漢字含む)</c>
            </summary>
        </member>
        <member name="M:Pao.Reports.QRCodePdf.SetStructureAppend(System.Int32,System.Int32,System.Int32)">
            <summary>
            連結関連のメソッドです。
            (試験導入です。)
            </summary>
        </member>
        <member name="M:Pao.Reports.QRCodePdf.CalStructureappendParity(System.Byte[])">
            <summary>
            連結に用いるパリティを算出します。
            (試験導入です。)
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf417Pdf">
            <summary>
            PDF417 PDF
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.StringEncoding">
            <summary>
            全角文字コード
            Encoding.GetEncoding()の引数は受け付けます。
            規定値："utf-8"
            例："shift-jis" / "932" ...等...
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.RotateAngle">
            <summary>
            回転角度を数値で指定(左下を軸に右回転して描画を行う)
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.DrawScale">
            <summary>
            表示倍率を指定(Reports.netで使用)
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.OutBits">
            <summary>Gets the raw image bits of the barcode. The image will have to
            be scaled in the Y direction by <CODE>yHeight</CODE>.
            </summary>
            <returns> The raw barcode image
            </returns>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.BitColumns">
            <summary>Gets the number of X pixels of <CODE>outBits</CODE>.</summary>
            <returns> the number of X pixels of <CODE>outBits</CODE>
            </returns>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.SizeKind">
            <summary>
            データ列数・行数決定方法
            <c>AUTO</c> 自動サイズ(アスペクト比より決定)
            <c>COLUMNS</c> 指定列数に従う
            <c>ROWS</c> 指定行数に従う
            <c>COLUMNS_AND_LOWS</c> 指定列数・行数両方に従う(長方形の最小値)
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.CodeRows">
            <summary>
            出力行数指定
            <c>3～90</c>
            SizeKindが出力行数指定の場合＝(自動サイズでない・列数指定でない場合)有効
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.CodeColumns">
            <summary>
            出力データカラム数指定
            <c>1～30</c>
            SizeKindが出力列数指定の場合＝(自動サイズでない・行数指定でない場合)有効
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.Codewords">
            <summary>Gets the codeword array. This array is always 928 elements long.
            It can be writen to if the option <CODE>PDF417_USE_RAW_CODEWORDS</CODE>
            is set.
            </summary>
            <returns> the codeword array
            </returns>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.LenCodewords">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.ErrorLevel">
            <summary>
            エラー訂正レベル
            <c>0～8</c>
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.UseAutoErrorLevel">
            <summary>
            自動でエラー訂正レベルを決定(する・しない)
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.Options">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.AspectRatio">
            <summary>
            縦横アクセプト比
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf417Pdf.YHeight">
            <summary>
            
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf417Pdf.SIZE_KIND">
            <summary>
            データ列数・行数決定方法
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.SIZE_KIND.AUTO">
            <summary>
            自動サイズ(アスペクト比より決定)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.SIZE_KIND.COLUMNS">
            <summary>
            指定列数(dataColumns)に従う
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.SIZE_KIND.ROWS">
            <summary>
            指定行数(dataRows)に従う
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.SIZE_KIND.COLUMNS_AND_ROWS">
            <summary>
            指定列数・行数両方に従う(長方形の最小値)
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf417Pdf.paintCode">
            <summary>Paints the barcode. If no exception was thrown a valid barcode is available. </summary>
        </member>
        <member name="M:Pao.Reports.Pdf417Pdf.getText">
            <summary>Gets the bytes that form the barcode. This bytes should
            be interpreted in the codepage Cp437.
            </summary>
            <returns> the bytes that form the barcode
            </returns>
        </member>
        <member name="M:Pao.Reports.Pdf417Pdf.setText(System.Byte[])">
            <summary>Sets the bytes that form the barcode. This bytes should
            be interpreted in the codepage Cp437.
            </summary>
            <param name="text">the bytes that form the barcode
            </param>
        </member>
        <member name="M:Pao.Reports.Pdf417Pdf.setText(System.String)">
            <summary>Sets the text that will form the barcode. This text is converted
            to bytes using the encoding Cp437.
            </summary>
            <param name="s">the text that will form the barcode
            @throws UnsupportedEncodingException if the encoding Cp437 is not supported
            </param>
        </member>
        <member name="M:Pao.Reports.Pdf417Pdf.Filter(System.String)">
            <summary>
            
            </summary>
            <param name="sValue"></param>
            <returns></returns>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.outBits">
            <summary>Holds value of property outBits. </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.bitColumns">
            <summary>Holds value of property bitColumns. </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.codeRows">
            <summary>Holds value of property codeRows. </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.codeColumns">
            <summary>Holds value of property codeColumns. </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.codewords">
            <summary>Holds value of property codewords. </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.lenCodewords">
            <summary>Holds value of property lenCodewords. </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.errorLevel">
            <summary>Holds value of property errorLevel. </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.text">
            <summary>Holds value of property text. </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.options">
            <summary>Holds value of property options. </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.aspectRatio">
            <summary>Holds value of property aspectRatio. </summary>
        </member>
        <member name="F:Pao.Reports.Pdf417Pdf.yHeight">
            <summary>Holds value of property yHeight. </summary>
        </member>
        <member name="T:Pao.Reports.DataMatrixPdf">
            <summary>
            DataMatrix PDF
            </summary>
        </member>
        <member name="T:Pao.Reports.DataMatrixPdf.DxCodeSizePdf">
            <summary>
            シンボルコードサイズ
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSzRectAuto">
            <summary>
            Rect Auto (-3)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSzAuto">
            <summary>
            Auto (-2) : 既定値
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSzShapeAuto">
            <summary>
            Shape Auto (-1)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz10x10">
            <summary>
            10 x 10 (0)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz12x12">
            <summary>
            12 x 12 (1)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz14x14">
            <summary>
            14 x 14 (2)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz16x16">
            <summary>
            16 x 16 (3)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz18x18">
            <summary>
            18 x 18 (4)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz20x20">
            <summary>
            20 x 20 (5)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz22x22">
            <summary>
            22 x 22 (6)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz24x24">
            <summary>
            24 x 24 (7)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz26x26">
            <summary>
            26 x 26 (8)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz32x32">
            <summary>
            32 x 32 (9)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz36x36">
            <summary>
            36 x 36 (10)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz40x40">
            <summary>
            40 x 40 (11)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz44x44">
            <summary>
            44 x 44 (12)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz48x48">
            <summary>
            48 x 48 (13)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz52x52">
            <summary>
            52 x 52 (14)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz64x64">
            <summary>
            64 x 64 (15)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz72x72">
            <summary>
            72 x 72 (16)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz80x80">
            <summary>
            80 x 80 (17)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz88x88">
            <summary>
            88 x 88 (18)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz96x96">
            <summary>
            96 x 96 (19)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz104x104">
            <summary>
            104 x 104 (20)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz120x120">
            <summary>
            120 x 120 (21)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz132x132">
            <summary>
            132 x 132 (22)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz144x144">
            <summary>
            144 x 144 (23)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz8x18">
            <summary>
            8 x 18 (24)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz8x32">
            <summary>
            8 x 32 (25)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz12x26">
            <summary>
            12 x 26 (26)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz12x36">
            <summary>
            12 x 36 (27)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz16x36">
            <summary>
            16 x 36 (28)
            </summary>
        </member>
        <member name="F:Pao.Reports.DataMatrixPdf.DxCodeSizePdf.DxSz16x48">
            <summary>
            16 x 48 (29)
            </summary>
        </member>
        <member name="P:Pao.Reports.DataMatrixPdf.StringEncoding">
            <summary>
            全角文字コード
            Encoding.GetEncoding()の引数は受け付けます。
            規定値："utf-8"
            例："shift-jis" / "932" ...等...
            </summary>
        </member>
        <member name="P:Pao.Reports.DataMatrixPdf.CodeSize">
            <summary>
            シンボル コード サイズ
            </summary>
        </member>
        <member name="P:Pao.Reports.DataMatrixPdf.RotateAngle">
            <summary>
            回転角度を数値で指定(左下を軸に右回転して描画を行う)
            </summary>
        </member>
        <member name="P:Pao.Reports.DataMatrixPdf.DrawScale">
            <summary>
            表示倍率を指定(Reports.netで使用)
            </summary>
        </member>
        <member name="T:Pao.Reports.GS1_DataBar_14_Pdf">
            <summary>
            GS1 Databar 標準型 (GS1 RSS-14)を生成するのに用いられるクラスです。
            </summary>
        </member>
        <member name="F:Pao.Reports.GS1_DataBar_14_Pdf.SymbolType">
            <summary>
            GS1 Databa RSS 14 のタイプ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_14_Pdf.TextWrite">
            <summary>
            TextWrite 添字の描画プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_14_Pdf.TextKintou">
            <summary>
            描画位置設定(バーコード全体の幅に均等割付)プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_14_Pdf.TextFont">
            <summary>
            添字のフォントプロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_14_Pdf.RotateAngle">
            <summary>
            回転角度を数値で指定(左下を軸に右回転して描画を行う)
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_14_Pdf.DrawScale">
            <summary>
            表示倍率を指定(Reports.netで使用)
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_14_Pdf.DispStartStopCode">
            <summary>
            スタート／ストップコードの描画プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_14_Pdf.KuroBarChousei">
            <summary>
            描画する黒バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。
            例えば、このプロパティに-1 を指定すると、バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            プリンタにより、調整が必要な場合にこの機能を使用してください。
            ※この機能は。DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効ですのでご注意ください。
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_14_Pdf.ShiroBarChousei">
            <summary>
            描画する白バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。
            例えば、このプロパティに-1 を指定すると、バーコード内全ての白バーの幅が1ドットずつ細くなります。
            プリンタにより、調整が必要な場合にこの機能を使用してください。
            →インクジェットプリンタで黒バーがにじんで太くなる時などに有効
            例：コンビニバーコード、EPSON PX-502A(360DPI)のプリンタには、
            　　白バーを＋１してあげると丁度良い。
            ※この機能は。DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効ですのでご注意ください。
            </summary>
        </member>
        <member name="T:Pao.Reports.GS1_DataBar_Limited_Pdf">
            <summary>
            GS1 Databar 限定型 (GS1 RSS Limited)を生成するのに用いられるクラスです。
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Limited_Pdf.TextWrite">
            <summary>
            TextWrite 添字の描画プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Limited_Pdf.TextKintou">
            <summary>
            描画位置設定(バーコード全体の幅に均等割付)プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Limited_Pdf.TextFont">
            <summary>
            添字のフォントプロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Limited_Pdf.RotateAngle">
            <summary>
            回転角度を数値で指定(左下を軸に右回転して描画を行う)
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Limited_Pdf.DrawScale">
            <summary>
            表示倍率を指定(Reports.netで使用)
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Limited_Pdf.DispStartStopCode">
            <summary>
            スタート／ストップコードの描画プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Limited_Pdf.KuroBarChousei">
            <summary>
            描画する黒バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。
            例えば、このプロパティに-1 を指定すると、バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            プリンタにより、調整が必要な場合にこの機能を使用してください。
            ※この機能は。DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効ですのでご注意ください。
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Limited_Pdf.ShiroBarChousei">
            <summary>
            描画する白バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。
            例えば、このプロパティに-1 を指定すると、バーコード内全ての白バーの幅が1ドットずつ細くなります。
            プリンタにより、調整が必要な場合にこの機能を使用してください。
            →インクジェットプリンタで黒バーがにじんで太くなる時などに有効
            例：コンビニバーコード、EPSON PX-502A(360DPI)のプリンタには、
            　　白バーを＋１してあげると丁度良い。
            ※この機能は。DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効ですのでご注意ください。
            </summary>
        </member>
        <member name="T:Pao.Reports.GS1_DataBar_Expanded_Pdf">
            <summary>
            GS1 Databar 標準型 (GS1 RSS 14)を生成するのに用いられるクラスです。
            </summary>
        </member>
        <member name="F:Pao.Reports.GS1_DataBar_Expanded_Pdf.SymbolType">
            <summary>
            GS1 Databa RSS 14 のタイプ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Expanded_Pdf.TextWrite">
            <summary>
            TextWrite 添字の描画プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Expanded_Pdf.TextKintou">
            <summary>
            描画位置設定(バーコード全体の幅に均等割付)プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Expanded_Pdf.TextFont">
            <summary>
            添字のフォントプロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Expanded_Pdf.RotateAngle">
            <summary>
            回転角度を数値で指定(左下を軸に右回転して描画を行う)
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Expanded_Pdf.DrawScale">
            <summary>
            表示倍率を指定(Reports.netで使用)
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Expanded_Pdf.DispStartStopCode">
            <summary>
            スタート／ストップコードの描画プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Expanded_Pdf.KuroBarChousei">
            <summary>
            描画する黒バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。
            例えば、このプロパティに-1 を指定すると、バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            プリンタにより、調整が必要な場合にこの機能を使用してください。
            ※この機能は。DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効ですのでご注意ください。
            </summary>
        </member>
        <member name="P:Pao.Reports.GS1_DataBar_Expanded_Pdf.ShiroBarChousei">
            <summary>
            描画する白バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。
            例えば、このプロパティに-1 を指定すると、バーコード内全ての白バーの幅が1ドットずつ細くなります。
            プリンタにより、調整が必要な場合にこの機能を使用してください。
            →インクジェットプリンタで黒バーがにじんで太くなる時などに有効
            例：コンビニバーコード、EPSON PX-502A(360DPI)のプリンタには、
            　　白バーを＋１してあげると丁度良い。
            ※この機能は。DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効ですのでご注意ください。
            </summary>
        </member>
        <member name="M:Pao.Reports.GS1_DataBar_Expanded_Pdf.setNoOfColumns(System.Int32)">
            Set the width of a stacked symbol by selecting the number
            of "columns" or symbol segments in each row of data.
            @param columns Number of segments in each row
        </member>
        <member name="T:Pao.Reports.QRCodeSvg">
            <summary>
            QRCode の概要の説明です。
            </summary>
        </member>
        <member name="P:Pao.Reports.QRCodeSvg.ErrorCorrect">
            <summary>
            エラー訂正レベル
            <c> "L"</c>
            <c> "M"</c>
            <c> "Q"</c>
            <c> "H"</c>
            </summary>
        </member>
        <member name="P:Pao.Reports.QRCodeSvg.Version">
            <summary>
            バージョン
            <c> 1～40</c>
            </summary>
        </member>
        <member name="P:Pao.Reports.QRCodeSvg.EncodeMode">
            <summary>
            エンコードモード
            <c>　"N":数字のみ</c>
            <c>　"A":英数字のみ</c>
            <c>　その他("Z"):8ビットバイトコード(漢字含む)</c>
            </summary>
        </member>
        <member name="P:Pao.Reports.QRCodeSvg.StringEncoding">
            <summary>
            全角文字コード
            Encoding.GetEncoding()の引数は受け付けます。
            規定値："UTF-8"
            例："shift-jis" / "932" ...等...
            </summary>
        </member>
        <member name="P:Pao.Reports.QRCodeSvg.RotateAngle">
            <summary>
            回転角度
            </summary>
        </member>
        <member name="M:Pao.Reports.QRCodeSvg.SetStructureAppend(System.Int32,System.Int32,System.Int32)">
            <summary>
            連結関連のメソッドです。
            (試験導入です。)
            </summary>
        </member>
        <member name="M:Pao.Reports.QRCodeSvg.CalStructureappendParity(System.Byte[])">
            <summary>
            連結に用いるパリティを算出します。
            (試験導入です。)
            </summary>
        </member>
        <member name="T:Pao.Reports.Checksums.Adler32">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Checksums.Adler32.BASE">
            <summary>
            largest prime smaller than 65536
            </summary>
        </member>
        <member name="P:Pao.Reports.Checksums.Adler32.Value">
            <summary>
            Returns the Adler32 data checksum computed so far.
            </summary>
        </member>
        <member name="M:Pao.Reports.Checksums.Adler32.#ctor">
            <summary>
            Creates a new instance of the Adler32 class.
            The checksum starts off with a value of 1.
            </summary>
        </member>
        <member name="M:Pao.Reports.Checksums.Adler32.Reset">
            <summary>
            Resets the Adler32 checksum to the initial value.
            </summary>
        </member>
        <member name="M:Pao.Reports.Checksums.Adler32.Update(System.Int32)">
            <summary>
            Updates the checksum with a byte value.
            </summary>
            <param name="value">
            The data value to add. The high byte of the int is ignored.
            </param>
        </member>
        <member name="M:Pao.Reports.Checksums.Adler32.Update(System.Byte[])">
            <summary>
            Updates the checksum with an array of bytes.
            </summary>
            <param name="buffer">
            The source of the data to update with.
            </param>
        </member>
        <member name="M:Pao.Reports.Checksums.Adler32.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Updates the checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            an array of bytes
            </param>
            <param name="offset">
            the start of the data used for this update
            </param>
            <param name="count">
            the number of bytes to use for this update
            </param>
        </member>
        <member name="T:Pao.Reports.Checksums.Crc32">
             <summary>
             Generate a table for a byte-wise 32-bit CRC calculation on the polynomial:
             x^32+x^26+x^23+x^22+x^16+x^12+x^11+x^10+x^8+x^7+x^5+x^4+x^2+x+1.
            
             Polynomials over GF(2) are represented in binary, one bit per coefficient,
             with the lowest powers in the most significant bit.  Then adding polynomials
             is just exclusive-or, and multiplying a polynomial by x is a right shift by
             one.  If we call the above polynomial p, and represent a byte as the
             polynomial q, also with the lowest power in the most significant bit (so the
             byte 0xb1 is the polynomial x^7+x^3+x+1), then the CRC is (q*x^32) mod p,
             where a mod b means the remainder after dividing a by b.
            
             This calculation is done using the shift-register method of multiplying and
             taking the remainder.  The register is initialized to zero, and for each
             incoming bit, x^32 is added mod p to the register if the bit is a one (where
             x^32 mod p is p+x^32 = x^26+...+1), and the register is multiplied mod p by
             x (which is shifting right by one and adding x^32 mod p if the bit shifted
             out is a one).  We start with the highest power (least significant bit) of
             q and repeat for all eight bits of q.
            
             The table is simply the CRC of all possible eight bit values.  This is all
             the information needed to generate CRC's on data a byte at a time for all
             combinations of CRC register values and incoming bytes.
             </summary>
        </member>
        <member name="F:Pao.Reports.Checksums.Crc32.crc">
            <summary>
            The crc data checksum so far.
            </summary>
        </member>
        <member name="P:Pao.Reports.Checksums.Crc32.Value">
            <summary>
            Returns the CRC32 data checksum computed so far.
            </summary>
        </member>
        <member name="M:Pao.Reports.Checksums.Crc32.Reset">
            <summary>
            Resets the CRC32 data checksum as if no update was ever called.
            </summary>
        </member>
        <member name="M:Pao.Reports.Checksums.Crc32.Update(System.Int32)">
            <summary>
            Updates the checksum with the int bval.
            </summary>
            <param name = "value">
            the byte is taken as the lower 8 bits of value
            </param>
        </member>
        <member name="M:Pao.Reports.Checksums.Crc32.Update(System.Byte[])">
            <summary>
            Updates the checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            buffer an array of bytes
            </param>
        </member>
        <member name="M:Pao.Reports.Checksums.Crc32.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Adds the byte array to the data checksum.
            </summary>
            <param name = "buffer">
            The buffer which contains the data
            </param>
            <param name = "offset">
            The offset in the buffer where the data starts
            </param>
            <param name = "count">
            The number of data bytes to update the CRC with.
            </param>
        </member>
        <member name="T:Pao.Reports.Checksums.IChecksum">
            <summary>
            Interface to compute a data checksum used by checked input/output streams.
            A data checksum can be updated by one byte or with a byte array. After each
            update the value of the current checksum can be returned by calling
            <code>getValue</code>. The complete checksum object can also be reset
            so it can be used again with new data.
            </summary>
        </member>
        <member name="P:Pao.Reports.Checksums.IChecksum.Value">
            <summary>
            Returns the data checksum computed so far.
            </summary>
        </member>
        <member name="M:Pao.Reports.Checksums.IChecksum.Reset">
            <summary>
            Resets the data checksum as if no update was ever called.
            </summary>
        </member>
        <member name="M:Pao.Reports.Checksums.IChecksum.Update(System.Int32)">
            <summary>
            Adds one byte to the data checksum.
            </summary>
            <param name = "value">
            the data value to add. The high byte of the int is ignored.
            </param>
        </member>
        <member name="M:Pao.Reports.Checksums.IChecksum.Update(System.Byte[])">
            <summary>
            Updates the data checksum with the bytes taken from the array.
            </summary>
            <param name="buffer">
            buffer an array of bytes
            </param>
        </member>
        <member name="M:Pao.Reports.Checksums.IChecksum.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Adds the byte array to the data checksum.
            </summary>
            <param name = "buffer">
            The buffer which contains the data
            </param>
            <param name = "offset">
            The offset in the buffer where the data starts
            </param>
            <param name = "count">
            the number of data bytes to add.
            </param>
        </member>
        <member name="T:Pao.Reports.Checksums.StrangeCRC">
            <summary>
            Bzip2 checksum algorithm
            </summary>
        </member>
        <member name="M:Pao.Reports.Checksums.StrangeCRC.#ctor">
            <summary>
            Initialise a default instance of <see cref="T:Pao.Reports.Checksums.StrangeCRC"></see>
            </summary>	
        </member>
        <member name="M:Pao.Reports.Checksums.StrangeCRC.Reset">
            <summary>
            Reset the state of Crc.
            </summary>
        </member>
        <member name="P:Pao.Reports.Checksums.StrangeCRC.Value">
            <summary>
            Get the current Crc value.
            </summary>
        </member>
        <member name="M:Pao.Reports.Checksums.StrangeCRC.Update(System.Int32)">
            <summary>
            Update the Crc value.
            </summary>
            <param name="value">data update is based on</param>
        </member>
        <member name="M:Pao.Reports.Checksums.StrangeCRC.Update(System.Byte[])">
            <summary>
            Update Crc based on a block of data
            </summary>
            <param name="buffer">The buffer containing data to update the crc with.</param>
        </member>
        <member name="M:Pao.Reports.Checksums.StrangeCRC.Update(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Update Crc based on a portion of a block of data
            </summary>
            <param name="buffer">block of data</param>
            <param name="offset">index of first byte to use</param>
            <param name="count">number of bytes to use</param>
        </member>
        <member name="T:Pao.Reports.ClosedButton">
            <summary>
            閉じるボタンクラス
            Textプロパティ、Imageプロパティは無視する。
            サイズを24x24以外に設定した場合、Xの表示がおかしくなる。
            </summary>
        </member>
        <member name="F:Pao.Reports.ClosedButton.onMouse_">
            <summary>
            マウスがコントロール内に入っている場合にtrue
            </summary>
        </member>
        <member name="F:Pao.Reports.ClosedButton.onClick_">
            <summary>
            マウスのボタン押下をコントロール内で行った場合にtrue
            </summary>
        </member>
        <member name="M:Pao.Reports.ClosedButton.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="T:Pao.Reports.Core.ScanEventArgs">
            <summary>
            Event arguments for scanning.
            </summary>
        </member>
        <member name="M:Pao.Reports.Core.ScanEventArgs.#ctor(System.String)">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Core.ScanEventArgs"/>
            </summary>
            <param name="name">The file or directory name.</param>
        </member>
        <member name="P:Pao.Reports.Core.ScanEventArgs.Name">
            <summary>
            The file or directory name for this event.
            </summary>
        </member>
        <member name="P:Pao.Reports.Core.ScanEventArgs.ContinueRunning">
            <summary>
            Get set a value indicating if scanning should continue or not.
            </summary>
        </member>
        <member name="T:Pao.Reports.Core.ProgressEventArgs">
            <summary>
            Event arguments during processing of a single file or directory.
            </summary>
        </member>
        <member name="M:Pao.Reports.Core.ProgressEventArgs.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Core.ScanEventArgs"/>
            </summary>
            <param name="name">The file or directory name if known.</param>
            <param name="processed">The number of bytes processed so far</param>
            <param name="target">The total number of bytes to process, 0 if not known</param>
        </member>
        <member name="P:Pao.Reports.Core.ProgressEventArgs.Name">
            <summary>
            The name for this event if known.
            </summary>
        </member>
        <member name="P:Pao.Reports.Core.ProgressEventArgs.ContinueRunning">
            <summary>
            Get set a value indicating wether scanning should continue or not.
            </summary>
        </member>
        <member name="P:Pao.Reports.Core.ProgressEventArgs.PercentComplete">
            <summary>
            Get a percentage representing how much of the <see cref="P:Pao.Reports.Core.ProgressEventArgs.Target"></see> has been processed
            </summary>
            <value>0.0 to 100.0 percent; 0 if target is not known.</value>
        </member>
        <member name="P:Pao.Reports.Core.ProgressEventArgs.Processed">
            <summary>
            The number of bytes processed so far
            </summary>
        </member>
        <member name="P:Pao.Reports.Core.ProgressEventArgs.Target">
            <summary>
            The number of bytes to process.
            </summary>
            <remarks>Target may be 0 or negative if the value isnt known.</remarks>
        </member>
        <member name="T:Pao.Reports.Core.DirectoryEventArgs">
            <summary>
            Event arguments for directories.
            </summary>
        </member>
        <member name="M:Pao.Reports.Core.DirectoryEventArgs.#ctor(System.String,System.Boolean)">
            <summary>
            Initialize an instance of <see cref="T:Pao.Reports.Core.DirectoryEventArgs"></see>.
            </summary>
            <param name="name">The name for this directory.</param>
            <param name="hasMatchingFiles">Flag value indicating if any matching files are contained in this directory.</param>
        </member>
        <member name="P:Pao.Reports.Core.DirectoryEventArgs.HasMatchingFiles">
            <summary>
            Get a value indicating if the directory contains any matching files or not.
            </summary>
        </member>
        <member name="T:Pao.Reports.Core.ScanFailureEventArgs">
            <summary>
            Arguments passed when scan failures are detected.
            </summary>
        </member>
        <member name="M:Pao.Reports.Core.ScanFailureEventArgs.#ctor(System.String,System.Exception)">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Core.ScanFailureEventArgs"></see>
            </summary>
            <param name="name">The name to apply.</param>
            <param name="e">The exception to use.</param>
        </member>
        <member name="P:Pao.Reports.Core.ScanFailureEventArgs.Name">
            <summary>
            The applicable name.
            </summary>
        </member>
        <member name="P:Pao.Reports.Core.ScanFailureEventArgs.Exception">
            <summary>
            The applicable exception.
            </summary>
        </member>
        <member name="P:Pao.Reports.Core.ScanFailureEventArgs.ContinueRunning">
            <summary>
            Get / set a value indicating wether scanning should continue.
            </summary>
        </member>
        <member name="T:Pao.Reports.Core.ProcessDirectoryHandler">
            <summary>
            Delegate invoked before starting to process a directory.
            </summary>
        </member>
        <member name="T:Pao.Reports.Core.ProcessFileHandler">
            <summary>
            Delegate invoked before starting to process a file.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Pao.Reports.Core.ProgressHandler">
            <summary>
            Delegate invoked during processing of a file or directory
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Pao.Reports.Core.CompletedFileHandler">
            <summary>
            Delegate invoked when a file has been completely processed.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Pao.Reports.Core.DirectoryFailureHandler">
            <summary>
            Delegate invoked when a directory failure is detected.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Pao.Reports.Core.FileFailureHandler">
            <summary>
            Delegate invoked when a file failure is detected.
            </summary>
            <param name="sender">The source of the event</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="T:Pao.Reports.Core.FileSystemScanner">
            <summary>
            FileSystemScanner provides facilities scanning of files and directories.
            </summary>
        </member>
        <member name="M:Pao.Reports.Core.FileSystemScanner.#ctor(System.String)">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Core.FileSystemScanner"></see>
            </summary>
            <param name="filter">The <see cref="T:Pao.Reports.Core.PathFilter">file filter</see> to apply when scanning.</param>
        </member>
        <member name="M:Pao.Reports.Core.FileSystemScanner.#ctor(System.String,System.String)">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Core.FileSystemScanner"></see>
            </summary>
            <param name="fileFilter">The <see cref="T:Pao.Reports.Core.PathFilter">file filter</see> to apply.</param>
            <param name="directoryFilter">The <see cref="T:Pao.Reports.Core.PathFilter"> directory filter</see> to apply.</param>
        </member>
        <member name="M:Pao.Reports.Core.FileSystemScanner.#ctor(Pao.Reports.Core.IScanFilter)">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Core.FileSystemScanner"></see>
            </summary>
            <param name="fileFilter">The file <see cref="T:Pao.Reports.Core.IScanFilter">filter</see> to apply.</param>
        </member>
        <member name="M:Pao.Reports.Core.FileSystemScanner.#ctor(Pao.Reports.Core.IScanFilter,Pao.Reports.Core.IScanFilter)">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Core.FileSystemScanner"></see>
            </summary>
            <param name="fileFilter">The file <see cref="T:Pao.Reports.Core.IScanFilter">filter</see>  to apply.</param>
            <param name="directoryFilter">The directory <see cref="T:Pao.Reports.Core.IScanFilter">filter</see>  to apply.</param>
        </member>
        <member name="F:Pao.Reports.Core.FileSystemScanner.ProcessDirectory">
            <summary>
            Delegate to invoke when a directory is processed.
            </summary>
        </member>
        <member name="F:Pao.Reports.Core.FileSystemScanner.ProcessFile">
            <summary>
            Delegate to invoke when a file is processed.
            </summary>
        </member>
        <member name="F:Pao.Reports.Core.FileSystemScanner.CompletedFile">
            <summary>
            Delegate to invoke when processing for a file has finished.
            </summary>
        </member>
        <member name="F:Pao.Reports.Core.FileSystemScanner.DirectoryFailure">
            <summary>
            Delegate to invoke when a directory failure is detected.
            </summary>
        </member>
        <member name="F:Pao.Reports.Core.FileSystemScanner.FileFailure">
            <summary>
            Delegate to invoke when a file failure is detected.
            </summary>
        </member>
        <member name="M:Pao.Reports.Core.FileSystemScanner.OnDirectoryFailure(System.String,System.Exception)">
            <summary>
            Raise the DirectoryFailure event.
            </summary>
            <param name="directory">The directory name.</param>
            <param name="e">The exception detected.</param>
        </member>
        <member name="M:Pao.Reports.Core.FileSystemScanner.OnFileFailure(System.String,System.Exception)">
            <summary>
            Raise the FileFailure event.
            </summary>
            <param name="file">The file name.</param>
            <param name="e">The exception detected.</param>
        </member>
        <member name="M:Pao.Reports.Core.FileSystemScanner.OnProcessFile(System.String)">
            <summary>
            Raise the ProcessFile event.
            </summary>
            <param name="file">The file name.</param>
        </member>
        <member name="M:Pao.Reports.Core.FileSystemScanner.OnCompleteFile(System.String)">
            <summary>
            Raise the complete file event
            </summary>
            <param name="file">The file name</param>
        </member>
        <member name="M:Pao.Reports.Core.FileSystemScanner.OnProcessDirectory(System.String,System.Boolean)">
            <summary>
            Raise the ProcessDirectory event.
            </summary>
            <param name="directory">The directory name.</param>
            <param name="hasMatchingFiles">Flag indicating if the directory has matching files.</param>
        </member>
        <member name="M:Pao.Reports.Core.FileSystemScanner.Scan(System.String,System.Boolean)">
            <summary>
            Scan a directory.
            </summary>
            <param name="directory">The base directory to scan.</param>
            <param name="recurse">True to recurse subdirectories, false to scan a single directory.</param>
        </member>
        <member name="F:Pao.Reports.Core.FileSystemScanner.fileFilter_">
            <summary>
            The file filter currently in use.
            </summary>
        </member>
        <member name="F:Pao.Reports.Core.FileSystemScanner.directoryFilter_">
            <summary>
            The directory filter currently in use.
            </summary>
        </member>
        <member name="F:Pao.Reports.Core.FileSystemScanner.alive_">
            <summary>
            Flag indicating if scanning should continue running.
            </summary>
        </member>
        <member name="T:Pao.Reports.Core.INameTransform">
            <summary>
            INameTransform defines how file system names are transformed for use with archives, or vice versa.
            </summary>
        </member>
        <member name="M:Pao.Reports.Core.INameTransform.TransformFile(System.String)">
            <summary>
            Given a file name determine the transformed value.
            </summary>
            <param name="name">The name to transform.</param>
            <returns>The transformed file name.</returns>
        </member>
        <member name="M:Pao.Reports.Core.INameTransform.TransformDirectory(System.String)">
            <summary>
            Given a directory name determine the transformed value.
            </summary>
            <param name="name">The name to transform.</param>
            <returns>The transformed directory name</returns>
        </member>
        <member name="T:Pao.Reports.Core.IScanFilter">
            <summary>
            Scanning filters support filtering of names.
            </summary>
        </member>
        <member name="M:Pao.Reports.Core.IScanFilter.IsMatch(System.String)">
            <summary>
            Test a name to see if it 'matches' the filter.
            </summary>
            <param name="name">The name to test.</param>
            <returns>Returns true if the name matches the filter, false if it does not match.</returns>
        </member>
        <member name="T:Pao.Reports.Core.NameFilter">
            <summary>
            NameFilter is a string matching class which allows for both positive and negative
            matching.
            A filter is a sequence of independant <see cref="T:System.Text.RegularExpressions.Regex">regular expressions</see> separated by semi-colons ';'.
            To include a semi-colon it may be quoted as in \;. Each expression can be prefixed by a plus '+' sign or
            a minus '-' sign to denote the expression is intended to include or exclude names.
            If neither a plus or minus sign is found include is the default.
            A given name is tested for inclusion before checking exclusions.  Only names matching an include spec 
            and not matching an exclude spec are deemed to match the filter.
            An empty filter matches any name.
            </summary>
            <example>The following expression includes all name ending in '.dat' with the exception of 'dummy.dat'
            "+\.dat$;-^dummy\.dat$"
            </example>
        </member>
        <member name="M:Pao.Reports.Core.NameFilter.#ctor(System.String)">
            <summary>
            Construct an instance based on the filter expression passed
            </summary>
            <param name="filter">The filter expression.</param>
        </member>
        <member name="M:Pao.Reports.Core.NameFilter.IsValidExpression(System.String)">
            <summary>
            Test a string to see if it is a valid regular expression.
            </summary>
            <param name="expression">The expression to test.</param>
            <returns>True if expression is a valid <see cref="T:System.Text.RegularExpressions.Regex"/> false otherwise.</returns>
        </member>
        <member name="M:Pao.Reports.Core.NameFilter.IsValidFilterExpression(System.String)">
            <summary>
            Test an expression to see if it is valid as a filter.
            </summary>
            <param name="toTest">The filter expression to test.</param>
            <returns>True if the expression is valid, false otherwise.</returns>
        </member>
        <member name="M:Pao.Reports.Core.NameFilter.SplitQuoted(System.String)">
            <summary>
            Split a string into its component pieces
            </summary>
            <param name="original">The original string</param>
            <returns>Returns a <see cref="T:System.String[]"/> containing the individual filter elements.</returns>
        </member>
        <member name="M:Pao.Reports.Core.NameFilter.ToString">
            <summary>
            Convert this filter to its string equivalent.
            </summary>
            <returns>The string equivalent for this filter.</returns>
        </member>
        <member name="M:Pao.Reports.Core.NameFilter.IsIncluded(System.String)">
            <summary>
            Test a value to see if it is included by the filter.
            </summary>
            <param name="name">The value to test.</param>
            <returns>True if the value is included, false otherwise.</returns>
        </member>
        <member name="M:Pao.Reports.Core.NameFilter.IsExcluded(System.String)">
            <summary>
            Test a value to see if it is excluded by the filter.
            </summary>
            <param name="name">The value to test.</param>
            <returns>True if the value is excluded, false otherwise.</returns>
        </member>
        <member name="M:Pao.Reports.Core.NameFilter.IsMatch(System.String)">
            <summary>
            Test a value to see if it matches the filter.
            </summary>
            <param name="name">The value to test.</param>
            <returns>True if the value matches, false otherwise.</returns>
        </member>
        <member name="M:Pao.Reports.Core.NameFilter.Compile">
            <summary>
            Compile this filter.
            </summary>
        </member>
        <member name="T:Pao.Reports.Core.PathFilter">
            <summary>
            PathFilter filters directories and files using a form of <see cref="T:System.Text.RegularExpressions.Regex">regular expressions</see>
            by full path name.
            See <see cref="T:Pao.Reports.Core.NameFilter">NameFilter</see> for more detail on filtering.
            </summary>
        </member>
        <member name="M:Pao.Reports.Core.PathFilter.#ctor(System.String)">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Core.PathFilter"></see>.
            </summary>
            <param name="filter">The <see cref="T:Pao.Reports.Core.NameFilter">filter</see> expression to apply.</param>
        </member>
        <member name="M:Pao.Reports.Core.PathFilter.IsMatch(System.String)">
            <summary>
            Test a name to see if it matches the filter.
            </summary>
            <param name="name">The name to test.</param>
            <returns>True if the name matches, false otherwise.</returns>
            <remarks><see cref="M:System.IO.Path.GetFullPath(System.String)"/> is used to get the full path before matching.</remarks>
        </member>
        <member name="T:Pao.Reports.Core.ExtendedPathFilter">
            <summary>
            ExtendedPathFilter filters based on name, file size, and the last write time of the file.
            </summary>
            <remarks>Provides an example of how to customise filtering.</remarks>
        </member>
        <member name="M:Pao.Reports.Core.ExtendedPathFilter.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initialise a new instance of ExtendedPathFilter.
            </summary>
            <param name="filter">The filter to apply.</param>
            <param name="minSize">The minimum file size to include.</param>
            <param name="maxSize">The maximum file size to include.</param>
        </member>
        <member name="M:Pao.Reports.Core.ExtendedPathFilter.#ctor(System.String,System.DateTime,System.DateTime)">
            <summary>
            Initialise a new instance of ExtendedPathFilter.
            </summary>
            <param name="filter">The filter to apply.</param>
            <param name="minDate">The minimum <see cref="T:System.DateTime"/> to include.</param>
            <param name="maxDate">The maximum <see cref="T:System.DateTime"/> to include.</param>
        </member>
        <member name="M:Pao.Reports.Core.ExtendedPathFilter.#ctor(System.String,System.Int64,System.Int64,System.DateTime,System.DateTime)">
            <summary>
            Initialise a new instance of ExtendedPathFilter.
            </summary>
            <param name="filter">The filter to apply.</param>
            <param name="minSize">The minimum file size to include.</param>
            <param name="maxSize">The maximum file size to include.</param>
            <param name="minDate">The minimum <see cref="T:System.DateTime"/> to include.</param>
            <param name="maxDate">The maximum <see cref="T:System.DateTime"/> to include.</param>
        </member>
        <member name="M:Pao.Reports.Core.ExtendedPathFilter.IsMatch(System.String)">
            <summary>
            Test a filename to see if it matches the filter.
            </summary>
            <param name="name">The filename to test.</param>
            <returns>True if the filter matches, false otherwise.</returns>
            <exception cref="T:System.IO.FileNotFoundException">The <see paramref="fileName"/> doesnt exist</exception>
        </member>
        <member name="P:Pao.Reports.Core.ExtendedPathFilter.MinSize">
            <summary>
            Get/set the minimum size/length for a file that will match this filter.
            </summary>
            <remarks>The default value is zero.</remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">value is less than zero; greater than <see cref="P:Pao.Reports.Core.ExtendedPathFilter.MaxSize"/></exception>
        </member>
        <member name="P:Pao.Reports.Core.ExtendedPathFilter.MaxSize">
            <summary>
            Get/set the maximum size/length for a file that will match this filter.
            </summary>
            <remarks>The default value is <see cref="T:long.MaxValue"/></remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">value is less than zero or less than <see cref="P:Pao.Reports.Core.ExtendedPathFilter.MinSize"/></exception>
        </member>
        <member name="P:Pao.Reports.Core.ExtendedPathFilter.MinDate">
            <summary>
            Get/set the minimum <see cref="T:System.DateTime"/> value that will match for this filter.
            </summary>
            <remarks>Files with a LastWrite time less than this value are excluded by the filter.</remarks>
        </member>
        <member name="P:Pao.Reports.Core.ExtendedPathFilter.MaxDate">
            <summary>
            Get/set the maximum <see cref="T:System.DateTime"/> value that will match for this filter.
            </summary>
            <remarks>Files with a LastWrite time greater than this value are excluded by the filter.</remarks>
        </member>
        <member name="T:Pao.Reports.Core.NameAndSizeFilter">
            <summary>
            NameAndSizeFilter filters based on name and file size.
            </summary>
            <remarks>A sample showing how filters might be extended.</remarks>
        </member>
        <member name="M:Pao.Reports.Core.NameAndSizeFilter.#ctor(System.String,System.Int64,System.Int64)">
            <summary>
            Initialise a new instance of NameAndSizeFilter.
            </summary>
            <param name="filter">The filter to apply.</param>
            <param name="minSize">The minimum file size to include.</param>
            <param name="maxSize">The maximum file size to include.</param>
        </member>
        <member name="M:Pao.Reports.Core.NameAndSizeFilter.IsMatch(System.String)">
            <summary>
            Test a filename to see if it matches the filter.
            </summary>
            <param name="name">The filename to test.</param>
            <returns>True if the filter matches, false otherwise.</returns>
        </member>
        <member name="P:Pao.Reports.Core.NameAndSizeFilter.MinSize">
            <summary>
            Get/set the minimum size for a file that will match this filter.
            </summary>
        </member>
        <member name="P:Pao.Reports.Core.NameAndSizeFilter.MaxSize">
            <summary>
            Get/set the maximum size for a file that will match this filter.
            </summary>
        </member>
        <member name="T:Pao.Reports.Core.StreamUtils">
            <summary>
            Provides simple <see cref="T:System.IO.Stream"/>" utilities.
            </summary>
        </member>
        <member name="M:Pao.Reports.Core.StreamUtils.ReadFully(System.IO.Stream,System.Byte[])">
            <summary>
            Read from a <see cref="T:System.IO.Stream"/> ensuring all the required data is read.
            </summary>
            <param name="stream">The stream to read.</param>
            <param name="buffer">The buffer to fill.</param>
            <seealso cref="M:Pao.Reports.Core.StreamUtils.ReadFully(System.IO.Stream,System.Byte[],System.Int32,System.Int32)"/>
        </member>
        <member name="M:Pao.Reports.Core.StreamUtils.ReadFully(System.IO.Stream,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read from a <see cref="T:System.IO.Stream"/>" ensuring all the required data is read.
            </summary>
            <param name="stream">The stream to read data from.</param>
            <param name="buffer">The buffer to store data in.</param>
            <param name="offset">The offset at which to begin storing data.</param>
            <param name="count">The number of bytes of data to store.</param>
            <exception cref="T:System.ArgumentNullException">Required parameter is null</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset"/> and or <paramref name="count"/> are invalid.</exception>
            <exception cref="T:System.IO.EndOfStreamException">End of stream is encountered before all the data has been read.</exception>
        </member>
        <member name="M:Pao.Reports.Core.StreamUtils.Copy(System.IO.Stream,System.IO.Stream,System.Byte[])">
            <summary>
            Copy the contents of one <see cref="T:System.IO.Stream"/> to another.
            </summary>
            <param name="source">The stream to source data from.</param>
            <param name="destination">The stream to write data to.</param>
            <param name="buffer">The buffer to use during copying.</param>
        </member>
        <member name="M:Pao.Reports.Core.StreamUtils.Copy(System.IO.Stream,System.IO.Stream,System.Byte[],Pao.Reports.Core.ProgressHandler,System.TimeSpan,System.Object,System.String)">
            <summary>
            Copy the contents of one <see cref="T:System.IO.Stream"/> to another.
            </summary>
            <param name="source">The stream to source data from.</param>
            <param name="destination">The stream to write data to.</param>
            <param name="buffer">The buffer to use during copying.</param>
            <param name="progressHandler">The <see cref="T:Pao.Reports.Core.ProgressHandler">progress handler delegate</see> to use.</param>
            <param name="updateInterval">The minimum <see cref="T:System.TimeSpan"/> between progress updates.</param>
            <param name="sender">The source for this event.</param>
            <param name="name">The name to use with the event.</param>
            <remarks>This form is specialised for use within #Zip to support events during archive operations.</remarks>
        </member>
        <member name="M:Pao.Reports.Core.StreamUtils.Copy(System.IO.Stream,System.IO.Stream,System.Byte[],Pao.Reports.Core.ProgressHandler,System.TimeSpan,System.Object,System.String,System.Int64)">
            <summary>
            Copy the contents of one <see cref="T:System.IO.Stream"/> to another.
            </summary>
            <param name="source">The stream to source data from.</param>
            <param name="destination">The stream to write data to.</param>
            <param name="buffer">The buffer to use during copying.</param>
            <param name="progressHandler">The <see cref="T:Pao.Reports.Core.ProgressHandler">progress handler delegate</see> to use.</param>
            <param name="updateInterval">The minimum <see cref="T:System.TimeSpan"/> between progress updates.</param>
            <param name="sender">The source for this event.</param>
            <param name="name">The name to use with the event.</param>
            <param name="fixedTarget">A predetermined fixed target value to use with progress updates.
            If the value is negative the target is calculated by looking at the stream.</param>
            <remarks>This form is specialised for use within #Zip to support events during archive operations.</remarks>
        </member>
        <member name="M:Pao.Reports.Core.StreamUtils.#ctor">
            <summary>
            Initialise an instance of <see cref="T:Pao.Reports.Core.StreamUtils"></see>
            </summary>
        </member>
        <member name="T:Pao.Reports.Core.WindowsPathUtils">
            <summary>
            WindowsPathUtils provides simple utilities for handling windows paths.
            </summary>
        </member>
        <member name="M:Pao.Reports.Core.WindowsPathUtils.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Pao.Reports.Core.WindowsPathUtils"/> class.
            </summary>
        </member>
        <member name="M:Pao.Reports.Core.WindowsPathUtils.DropPathRoot(System.String)">
            <summary>
            Remove any path root present in the path
            </summary>
            <param name="path">A <see cref="T:System.String"/> containing path information.</param>
            <returns>The path with the root removed if it was present; path otherwise.</returns>
            <remarks>Unlike the <see cref="T:System.IO.Path"/> class the path isnt otherwise checked for validity.</remarks>
        </member>
        <member name="T:Pao.Reports.DocumentGroup">
            <summary>
            印刷データに関するグループ情報を保持するクラス
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentGroup.name_">
            <summary>
            グループ名
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentGroup.docList_">
            <summary>
            ドキュメントリスト
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentGroup.#ctor(System.String)">
            <summary>
            指定された名前のDocumentGroupオブジェクトを構築する
            </summary>
            <param name="name">グループ名</param>
        </member>
        <member name="P:Pao.Reports.DocumentGroup.Name">
            <summary>
            グループ名
            </summary>
        </member>
        <member name="P:Pao.Reports.DocumentGroup.Count">
            <summary>
            印刷データ情報の数を取得する
            </summary>
        </member>
        <member name="P:Pao.Reports.DocumentGroup.Item(System.Int32)">
            <summary>
            印刷データ情報を取得するためのインデクサ
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentGroup.Add(Pao.Reports.DocumentInfo)">
            <summary>
            指定された印刷データ情報を追加する
            </summary>
            <param name="doc">追加する印刷データ情報</param>
        </member>
        <member name="M:Pao.Reports.DocumentGroup.Remove(Pao.Reports.DocumentInfo)">
            <summary>
            指定された印刷データ情報を削除する
            </summary>
            <param name="doc">削除する印刷データ情報</param>
        </member>
        <member name="T:Pao.Reports.DocumentInfo">
            <summary>
            印刷データに関する情報を保持するクラス
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentInfo.name_">
            <summary>
            印刷データ名
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentInfo.fileName_">
            <summary>
            印刷データのファイル名
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentInfo.#ctor(System.String,System.String)">
            <summary>
            指定されたデータ名とファイルを持つDocumentオブジェクトを構築する
            </summary>
            <param name="name">印刷データ名</param>
            <param name="fileName">ファイル名</param>
        </member>
        <member name="P:Pao.Reports.DocumentInfo.Name">
            <summary>
            印刷データ名
            </summary>
        </member>
        <member name="P:Pao.Reports.DocumentInfo.FileName">
            <summary>
            印刷データのファイル名
            </summary>
        </member>
        <member name="T:Pao.Reports.DocumentManager">
            <summary>
            印刷データ情報を管理する
            </summary>
            <remarks>Singletonパターン</remarks>
        </member>
        <member name="F:Pao.Reports.DocumentManager.me_">
            <summary>
            自分自身のオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentManager.NODE_ROOT">
            <summary>
            ルート要素
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentManager.NODE_GROUP">
            <summary>
            グループ要素
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentManager.NODE_DOC">
            <summary>
            ドキュメント要素
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentManager.NODE_DIR">
            <summary>
            ディレクトリ要素
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentManager.ATTR_NAME">
            <summary>
            名前属性
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentManager.ATTR_FILE">
            <summary>
            ファイル属性
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentManager.ATTR_DATE">
            <summary>
            日付属性
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentManager.ATTR_TIME">
            <summary>
            時間属性
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentManager.groupList_">
            <summary>
            印刷データグループ
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentManager.docList_">
            <summary>
            印刷データ情報
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentManager.docDir_">
            <summary>
            印刷データの出力先ディレクトリ
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentManager.setupFile_">
            <summary>
            設定情報ファイル名
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentManager.#ctor">
            <summary>
            新しいDocumentManagerオブジェクトを構築する
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentManager.GetInstance">
            <summary>
            DocumentManagerのオブジェクトを取得する
            </summary>
            <returns></returns>
        </member>
        <member name="P:Pao.Reports.DocumentManager.GroupCount">
            <summary>
            保持している印刷データグループ数を取得する
            </summary>
        </member>
        <member name="P:Pao.Reports.DocumentManager.DocCount">
            <summary>
            保持しているグループ指定のない印刷データ情報数を取得する
            </summary>
        </member>
        <member name="P:Pao.Reports.DocumentManager.DocDir">
            <summary>
            印刷データの出力先ディレクトリ
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentManager.Add(Pao.Reports.DocumentGroup)">
            <summary>
            指定された印刷データグループを追加する
            </summary>
            <param name="group">追加する印刷データグループ</param>
            
        </member>
        <member name="M:Pao.Reports.DocumentManager.Add(Pao.Reports.DocumentInfo)">
            <summary>
            指定された印刷データオブジェクトを追加する
            </summary>
            <param name="doc">追加するDocumentInfoオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.DocumentManager.Add(System.String,Pao.Reports.DocumentInfo)">
            <summary>
            指定された名前のグループに指定された印刷データオブジェクトを追加する
            </summary>
            <param name="group"></param>
            <param name="doc"></param>
        </member>
        <member name="M:Pao.Reports.DocumentManager.AddRange(Pao.Reports.DocumentGroup[])">
            <summary>
            指定された印刷データグループを追加する
            </summary>
            <param name="groups">追加する印刷データグループ</param>
        </member>
        <member name="M:Pao.Reports.DocumentManager.AddRange(Pao.Reports.DocumentInfo[])">
            <summary>
            指定された印刷データオブジェクトを追加する
            </summary>
            <param name="docs">追加するDocumentInfoオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.DocumentManager.Remove(Pao.Reports.DocumentGroup)">
            <summary>
            指定された印刷データグループと同一オブジェクトを削除する
            </summary>
            <param name="group">削除するDocumentGroupオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.DocumentManager.Remove(Pao.Reports.DocumentInfo)">
            <summary>
            指定された印刷データオブジェクトと同一オブジェクトを削除する
            </summary>
            <param name="doc">削除するDocumentInfoオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.DocumentManager.RemoveAll">
            <summary>
            全ての印刷データ情報を削除する
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentManager.GetGroup(System.Int32)">
            <summary>
            指定された番号の印刷データグループを取得する
            </summary>
            <param name="index">インデックス</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.DocumentManager.GetDocument(System.Int32)">
            <summary>
            指定された番号の印刷データ情報を取得する
            </summary>
            <param name="index">インデックス</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.DocumentManager.Load">
            <summary>
            ファイルから情報を読込む
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentManager.Save">
            <summary>
            現在の情報をファイルに保存する
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentManager._SetCurrentSetting(System.Xml.XmlElement)">
            <summary>
            XML要素から設定値を取得する
            </summary>
            <param name="element">ルート要素</param>
        </member>
        <member name="M:Pao.Reports.DocumentManager._CreateGroup(System.Xml.XmlElement)">
            <summary>
            指定された要素からDocumentGroupオブジェクトを作成する
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.DocumentManager._CreateDocument(System.Xml.XmlElement)">
            <summary>
            指定された要素からDocumentInfoオブジェクトを作成する
            </summary>
            <param name="element"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.DocumentManager._GetCurrentSetting(System.Xml.XmlDocument,System.Xml.XmlElement)">
            <summary>
            現在の設定内容のXML要素を取得する
            </summary>
            <param name="doc">XML要素が所属するXMLドキュメント</param>
            <param name="root">ルート要素</param>
        </member>
        <member name="M:Pao.Reports.DocumentManager._CreateGroupElement(System.Xml.XmlDocument,Pao.Reports.DocumentGroup)">
            <summary>
            指定されたDocumentGroupオブジェクトのXML要素を作成する
            </summary>
            <param name="doc"></param>
            <param name="group"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.DocumentManager._CreateDocumentElement(System.Xml.XmlDocument,Pao.Reports.DocumentInfo)">
            <summary>
            指定されたDocumentInfoオブジェクトのXml要素を作成する
            </summary>
            <param name="doc"></param>
            <param name="document"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.DocumentPanel">
            <summary>
            出力データ表示パネル
            </summary>
        </member>
        <member name="T:Pao.Reports.DocumentPanel.SORT_TYPE">
            <summary>
            ドキュメントの並び順の列挙型
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentPanel.titlePanel_">
            <summary>
            タイトルとボタンを表示するパネル
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentPanel.closedButton_">
            <summary>
            閉じるボタン
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentPanel.imgList_">
            <summary>
            イメージリスト
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentPanel.tree_">
            <summary>
            文書表示のTreeView
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentPanel.docManager_">
            <summary>
            DocumentManager
            </summary>
        </member>
        <member name="F:Pao.Reports.DocumentPanel.sortType_">
            <summary>
            ドキュメントのツリー構成
            </summary>
        </member>
        <member name="T:Pao.Reports.DocumentPanel.SelectDocumentEventHandler">
            <summary>
            ドキュメントが選択されたときのデリゲート
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentPanel.#ctor">
            <summary>
            新しいDocumentPanelオブジェクトを構築する
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentPanel._InitComponent">
            <summary>
            各コンポーネントの初期設定
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentPanel._Initialize">
            <summary>
            初期処理を行う
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentPanel.DocumentPanel_Resize(System.Object,System.EventArgs)">
            <summary>
            リサイズイベント
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pao.Reports.DocumentPanel.TitlePanel_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            ペイントイベント
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pao.Reports.DocumentPanel.clsedButton_Click(System.Object,System.EventArgs)">
            <summary>
            閉じるボタンクリックイベント
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pao.Reports.DocumentPanel.mnuGroup_Popup(System.Object,System.EventArgs)">
            <summary>
            種類順メニュー
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:Pao.Reports.DocumentPanel.Doc">
            <summary>
            DocumentManagerの取得・設定
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentPanel.Reload">
            <summary>
            現在のDocumentManagerからドキュメントツリーを作成する
            </summary>
        </member>
        <member name="M:Pao.Reports.DocumentPanel._CreateGroupNode(Pao.Reports.DocumentGroup)">
            <summary>
            指定されたDocumentGroupオブジェクトに対応するTreeNodeオブジェクトを構築する
            </summary>
            <param name="group">TreeNodeを作るDocumentGroupオブジェクト</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.DocumentPanel._CreateDocumentNode(Pao.Reports.DocumentInfo)">
            <summary>
            指定されたDocumentInfoオブジェクトに対応するTreeNodeオブジェクトを構築する
            </summary>
            <param name="doc">TreeNodeを作るDocumentInfoオブジェクト</param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.Encryption.PkzipClassic">
            <summary>
            PkzipClassic embodies the classic or original encryption facilities used in Pkzip archives.
            While it has been superceded by more recent and more powerful algorithms, its still in use and 
            is viable for preventing casual snooping
            </summary>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassic.GenerateKeys(System.Byte[])">
            <summary>
            Generates new encryption keys based on given seed
            </summary>
            <param name="seed">The seed value to initialise keys with.</param>
            <returns>A new key value.</returns>
        </member>
        <member name="T:Pao.Reports.Encryption.PkzipClassicCryptoBase">
            <summary>
            PkzipClassicCryptoBase provides the low level facilities for encryption
            and decryption using the PkzipClassic algorithm.
            </summary>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicCryptoBase.TransformByte">
            <summary>
            Transform a single byte 
            </summary>
            <returns>
            The transformed value
            </returns>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicCryptoBase.SetKeys(System.Byte[])">
            <summary>
            Set the key schedule for encryption/decryption.
            </summary>
            <param name="keyData">The data use to set the keys from.</param>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicCryptoBase.UpdateKeys(System.Byte)">
            <summary>
            Update encryption keys 
            </summary>		
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicCryptoBase.Reset">
            <summary>
            Reset the internal state.
            </summary>
        </member>
        <member name="T:Pao.Reports.Encryption.PkzipClassicEncryptCryptoTransform">
            <summary>
            PkzipClassic CryptoTransform for encryption.
            </summary>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicEncryptCryptoTransform.#ctor(System.Byte[])">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Encryption.PkzipClassicEncryptCryptoTransform"></see>
            </summary>
            <param name="keyBlock">The key block to use.</param>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicEncryptCryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Transforms the specified region of the specified byte array.
            </summary>
            <param name="inputBuffer">The input for which to compute the transform.</param>
            <param name="inputOffset">The offset into the byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the byte array to use as data.</param>
            <returns>The computed transform.</returns>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicEncryptCryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Transforms the specified region of the input byte array and copies 
            the resulting transform to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input for which to compute the transform.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write the transform.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>The number of bytes written.</returns>
        </member>
        <member name="P:Pao.Reports.Encryption.PkzipClassicEncryptCryptoTransform.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
        </member>
        <member name="P:Pao.Reports.Encryption.PkzipClassicEncryptCryptoTransform.InputBlockSize">
            <summary>
            Gets the size of the input data blocks in bytes.
            </summary>
        </member>
        <member name="P:Pao.Reports.Encryption.PkzipClassicEncryptCryptoTransform.OutputBlockSize">
            <summary>
            Gets the size of the output data blocks in bytes.
            </summary>
        </member>
        <member name="P:Pao.Reports.Encryption.PkzipClassicEncryptCryptoTransform.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicEncryptCryptoTransform.Dispose">
            <summary>
            Cleanup internal state.
            </summary>
        </member>
        <member name="T:Pao.Reports.Encryption.PkzipClassicDecryptCryptoTransform">
            <summary>
            PkzipClassic CryptoTransform for decryption.
            </summary>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicDecryptCryptoTransform.#ctor(System.Byte[])">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Encryption.PkzipClassicDecryptCryptoTransform"></see>.
            </summary>
            <param name="keyBlock">The key block to decrypt with.</param>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicDecryptCryptoTransform.TransformFinalBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Transforms the specified region of the specified byte array.
            </summary>
            <param name="inputBuffer">The input for which to compute the transform.</param>
            <param name="inputOffset">The offset into the byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the byte array to use as data.</param>
            <returns>The computed transform.</returns>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicDecryptCryptoTransform.TransformBlock(System.Byte[],System.Int32,System.Int32,System.Byte[],System.Int32)">
            <summary>
            Transforms the specified region of the input byte array and copies 
            the resulting transform to the specified region of the output byte array.
            </summary>
            <param name="inputBuffer">The input for which to compute the transform.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <param name="outputBuffer">The output to which to write the transform.</param>
            <param name="outputOffset">The offset into the output byte array from which to begin writing data.</param>
            <returns>The number of bytes written.</returns>
        </member>
        <member name="P:Pao.Reports.Encryption.PkzipClassicDecryptCryptoTransform.CanReuseTransform">
            <summary>
            Gets a value indicating whether the current transform can be reused.
            </summary>
        </member>
        <member name="P:Pao.Reports.Encryption.PkzipClassicDecryptCryptoTransform.InputBlockSize">
            <summary>
            Gets the size of the input data blocks in bytes.
            </summary>
        </member>
        <member name="P:Pao.Reports.Encryption.PkzipClassicDecryptCryptoTransform.OutputBlockSize">
            <summary>
            Gets the size of the output data blocks in bytes.
            </summary>
        </member>
        <member name="P:Pao.Reports.Encryption.PkzipClassicDecryptCryptoTransform.CanTransformMultipleBlocks">
            <summary>
            Gets a value indicating whether multiple blocks can be transformed.
            </summary>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicDecryptCryptoTransform.Dispose">
            <summary>
            Cleanup internal state.
            </summary>
        </member>
        <member name="T:Pao.Reports.Encryption.PkzipClassicManaged">
            <summary>
            Defines a wrapper object to access the Pkzip algorithm. 
            This class cannot be inherited.
            </summary>
        </member>
        <member name="P:Pao.Reports.Encryption.PkzipClassicManaged.BlockSize">
            <summary>
            Get / set the applicable block size in bits.
            </summary>
            <remarks>The only valid block size is 8.</remarks>
        </member>
        <member name="P:Pao.Reports.Encryption.PkzipClassicManaged.LegalKeySizes">
            <summary>
            Get an array of legal <see cref="T:System.Security.Cryptography.KeySizes">key sizes.</see>
            </summary>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicManaged.GenerateIV">
            <summary>
            Generate an initial vector.
            </summary>
        </member>
        <member name="P:Pao.Reports.Encryption.PkzipClassicManaged.LegalBlockSizes">
            <summary>
            Get an array of legal <see cref="T:System.Security.Cryptography.KeySizes">block sizes</see>.
            </summary>
        </member>
        <member name="P:Pao.Reports.Encryption.PkzipClassicManaged.Key">
            <summary>
            Get / set the key value applicable.
            </summary>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicManaged.GenerateKey">
            <summary>
            Generate a new random key.
            </summary>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicManaged.CreateEncryptor(System.Byte[],System.Byte[])">
            <summary>
            Create an encryptor.
            </summary>
            <param name="rgbKey">The key to use for this encryptor.</param>
            <param name="rgbIV">Initialisation vector for the new encryptor.</param>
            <returns>Returns a new PkzipClassic encryptor</returns>
        </member>
        <member name="M:Pao.Reports.Encryption.PkzipClassicManaged.CreateDecryptor(System.Byte[],System.Byte[])">
            <summary>
            Create a decryptor.
            </summary>
            <param name="rgbKey">Keys to use for this new decryptor.</param>
            <param name="rgbIV">Initialisation vector for the new decryptor.</param>
            <returns>Returns a new decryptor.</returns>
        </member>
        <member name="T:Pao.Reports.FindForm">
            <summary>
            検索フォーム
            </summary>
        </member>
        <member name="F:Pao.Reports.FindForm.components">
            <summary>
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Pao.Reports.FindForm.Dispose(System.Boolean)">
            <summary>
            使用されているリソースに後処理を実行します。
            </summary>
        </member>
        <member name="M:Pao.Reports.FindForm.InitializeComponent">
            <summary>
            デザイナ サポートに必要なメソッドです。このメソッドの内容を
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="T:Pao.Reports.FindResult">
            <summary>
            FindResult の概要の説明です。
            </summary>
        </member>
        <member name="F:Pao.Reports.FindResult.components">
            <summary>
            必要なデザイナ変数です。
            </summary>
        </member>
        <member name="M:Pao.Reports.FindResult.Dispose(System.Boolean)">
            <summary>
            使用されているリソースに後処理を実行します。
            </summary>
        </member>
        <member name="M:Pao.Reports.FindResult.InitializeComponent">
            <summary>
            デザイナ サポートに必要なメソッドです。このメソッドの内容を
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="T:Pao.Reports.GZip.GZipConstants">
            <summary>
            This class contains constants used for gzip.
            </summary>
        </member>
        <member name="F:Pao.Reports.GZip.GZipConstants.GZIP_MAGIC">
            <summary>
            Magic number found at start of GZIP header
            </summary>
        </member>
        <member name="F:Pao.Reports.GZip.GZipConstants.FTEXT">
            <summary>
            Flag bit mask for text
            </summary>
        </member>
        <member name="F:Pao.Reports.GZip.GZipConstants.FHCRC">
            <summary>
            Flag bitmask for Crc
            </summary>
        </member>
        <member name="F:Pao.Reports.GZip.GZipConstants.FEXTRA">
            <summary>
            Flag bit mask for extra
            </summary>
        </member>
        <member name="F:Pao.Reports.GZip.GZipConstants.FNAME">
            <summary>
            flag bitmask for name
            </summary>
        </member>
        <member name="F:Pao.Reports.GZip.GZipConstants.FCOMMENT">
            <summary>
            flag bit mask indicating comment is present
            </summary>
        </member>
        <member name="M:Pao.Reports.GZip.GZipConstants.#ctor">
            <summary>
            Initialise default instance.
            </summary>
            <remarks>Constructor is private to prevent instances being created.</remarks>
        </member>
        <member name="T:Pao.Reports.GZip.GZipException">
            <summary>
            GZipException represents a Gzip specific exception	
            </summary>
        </member>
        <member name="M:Pao.Reports.GZip.GZipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor 
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/> for this constructor</param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/> for this constructor</param>
        </member>
        <member name="M:Pao.Reports.GZip.GZipException.#ctor">
            <summary>
            Initialise a new instance of GZipException
            </summary>
        </member>
        <member name="M:Pao.Reports.GZip.GZipException.#ctor(System.String)">
            <summary>
            Initialise a new instance of GZipException with its message string.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
        </member>
        <member name="M:Pao.Reports.GZip.GZipException.#ctor(System.String,System.Exception)">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.GZip.GZipException"></see>.
            </summary>
            <param name="message">A <see cref="T:System.String"/> that describes the error.</param>
            <param name="innerException">The <see cref="T:System.Exception"/> that caused this exception.</param>
        </member>
        <member name="T:Pao.Reports.GZip.GZipInputStream">
            <summary>
            This filter stream is used to decompress a "GZIP" format stream.
            The "GZIP" format is described baseInputStream RFC 1952.
            
            author of the original java version : John Leuner
            </summary>
            <example> This sample shows how to unzip a gzipped file
            <code>
            using System;
            using System.IO;
            
            using Pao.Reports.Core;
            using Pao.Reports.GZip;
            
            class MainClass
            {
            	public static void Main(string[] args)
            	{
            		using (Stream inStream = new GZipInputStream(File.OpenRead(args[0])))
            		using (FileStream outStream = File.Create(Path.GetFileNameWithoutExtension(args[0]))) {
            			byte[] buffer = new byte[4096];
            			StreamUtils.Copy(inStream, outStream, buffer);
            		}
            	}
            }	
            </code>
            </example>
        </member>
        <member name="F:Pao.Reports.GZip.GZipInputStream.crc">
            <summary>
            CRC-32 value for uncompressed data
            </summary>
        </member>
        <member name="F:Pao.Reports.GZip.GZipInputStream.eos">
            <summary>
            Indicates end of stream
            </summary>
        </member>
        <member name="M:Pao.Reports.GZip.GZipInputStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a GZipInputStream with the default buffer size
            </summary>
            <param name="baseInputStream">
            The stream to read compressed data from (baseInputStream GZIP format)
            </param>
        </member>
        <member name="M:Pao.Reports.GZip.GZipInputStream.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Creates a GZIPInputStream with the specified buffer size
            </summary>
            <param name="baseInputStream">
            The stream to read compressed data from (baseInputStream GZIP format)
            </param>
            <param name="size">
            Size of the buffer to use
            </param>
        </member>
        <member name="M:Pao.Reports.GZip.GZipInputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads uncompressed data into an array of bytes
            </summary>
            <param name="buffer">
            The buffer to read uncompressed data into
            </param>
            <param name="offset">
            The offset indicating where the data should be placed
            </param>
            <param name="count">
            The number of uncompressed bytes to be read
            </param>
            <returns>Returns the number of bytes actually read.</returns>
        </member>
        <member name="T:Pao.Reports.GZip.GZipOutputStream">
             <summary>
             This filter stream is used to compress a stream into a "GZIP" stream.
             The "GZIP" format is described in RFC 1952.
            
             author of the original java version : John Leuner
             </summary>
             <example> This sample shows how to gzip a file
             <code>
             using System;
             using System.IO;
             
             using Pao.Reports.GZip;
             using Pao.Reports.Core;
             
             class MainClass
             {
             	public static void Main(string[] args)
             	{
             			using (Stream s = new GZipOutputStream(File.Create(args[0] + ".gz")))
             			using (FileStream fs = File.OpenRead(args[0])) {
             				byte[] writeData = new byte[4096];
             				Streamutils.Copy(s, fs, writeData);
             			}
             		}
             	}
             }	
             </code>
             </example>
        </member>
        <member name="F:Pao.Reports.GZip.GZipOutputStream.crc">
            <summary>
            CRC-32 value for uncompressed data
            </summary>
        </member>
        <member name="M:Pao.Reports.GZip.GZipOutputStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a GzipOutputStream with the default buffer size
            </summary>
            <param name="baseOutputStream">
            The stream to read data (to be compressed) from
            </param>
        </member>
        <member name="M:Pao.Reports.GZip.GZipOutputStream.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Creates a GZipOutputStream with the specified buffer size
            </summary>
            <param name="baseOutputStream">
            The stream to read data (to be compressed) from
            </param>
            <param name="size">
            Size of the buffer to use
            </param>
        </member>
        <member name="M:Pao.Reports.GZip.GZipOutputStream.SetLevel(System.Int32)">
            <summary>
            Sets the active compression level (1-9).  The new level will be activated
            immediately.
            </summary>
            <param name="level">The compression level to set.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Level specified is not supported.
            </exception>
            <see cref="T:Pao.Reports.Zip.Compression.Deflater"/>
        </member>
        <member name="M:Pao.Reports.GZip.GZipOutputStream.GetLevel">
            <summary>
            Get the current compression level.
            </summary>
            <returns>The current compression level.</returns>
        </member>
        <member name="M:Pao.Reports.GZip.GZipOutputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write given buffer to output updating crc
            </summary>
            <param name="buffer">Buffer to write</param>
            <param name="offset">Offset of first byte in buf to write</param>
            <param name="count">Number of bytes to write</param>
        </member>
        <member name="M:Pao.Reports.GZip.GZipOutputStream.Close">
            <summary>
            Writes remaining compressed output data to the output stream
            and closes it.
            </summary>
        </member>
        <member name="M:Pao.Reports.GZip.GZipOutputStream.Finish">
            <summary>
            Finish compression and write any footer information required to stream
            </summary>
        </member>
        <member name="T:Pao.Reports.IDefAttr">
            <summary>
            属性を保持する
            </summary>
        </member>
        <member name="P:Pao.Reports.IDefAttr.AttrName">
            <summary>
            属性名
            </summary>
        </member>
        <member name="T:Pao.Reports.IDrawObject">
            <summary>
            項目描画インターフェース
            </summary>
        </member>
        <member name="T:Pao.Reports.IOCreater">
            <summary>
            印刷オブジェクトを出力するためのオブジェクトを作成するユーティリティクラス
            </summary>
        </member>
        <member name="M:Pao.Reports.IOCreater.CreateXml(System.String)">
            <summary>
            XML出力オブジェクトを作成する
            </summary>
            <param name="filename">出力ファイル名</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.IOCreater.CreateXml(System.IO.Stream)">
            <summary>
            XML出力オブジェクトを作成する
            </summary>
            <param name="stream">出力ストリーム</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.IOCreater.CreateSvg(System.String,System.Boolean)">
            <summary>
            SVG出力オブジェクトを作成する
            </summary>
            <param name="filename">出力ファイル名</param>
            <param name="flgSVG">SVGフラグ</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.IOCreater.CreateSvg(System.IO.StreamWriter)">
            <summary>
            XML出力オブジェクトを作成する
            </summary>
            <param name="stream">出力ストリーム</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.IOCreater.CreateDraw(System.Drawing.Graphics)">
            <summary>
            指定されたGraphicsオブジェクトでデータを描画するPmDrawオブジェクトを作成する
            </summary>
            <param name="g">Graphicsオブジェクト</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.IOCreater.CreateDefineInput">
            <summary>
            帳票定義体入力オブジェクトを作成する
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.IOCreater.CreateDataInput">
            <summary>
            印刷データ入力オブジェクトを作成する
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.IPmVisitor">
            <summary>
            印刷オブジェクトをトラバースするためのインターフェイス
            </summary>
        </member>
        <member name="M:Pao.Reports.IPmVisitor.Accept(Pao.Reports.PmDefObject)">
            <summary>
            印刷オブジェクトを受取る。
            </summary>
            <param name="obj">印刷オブジェクト</param>
        </member>
        <member name="M:Pao.Reports.IPmVisitor.Accept(Pao.Reports.PmDefObject,Pao.Reports.PmDynamicValue)">
            <summary>
            印刷オブジェクトを受取る。
            </summary>
            <param name="obj">印刷オブジェクト</param>
            <param name="value">動的項目</param>
        </member>
        <member name="T:Pao.Reports.IPrintDataInput">
            <summary>
            XML形式の印刷データを読込み、印刷オブジェクトを作成するインタフェース
            </summary>
        </member>
        <member name="P:Pao.Reports.IPrintDataInput.Define">
            <summary>
            PmDefineオブジェクト
            </summary>
        </member>
        <member name="P:Pao.Reports.IPrintDataInput.Pages">
            <summary>
            印刷データ
            </summary>
        </member>
        <member name="M:Pao.Reports.IPrintDataInput.Load(System.String)">
            <summary>
            帳票定義体を読込む。
            </summary>
            <param name="filename">帳票定義体のファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.IPrintDataInput.Load(System.IO.Stream)">
            <summary>
            印刷データを読込む
            </summary>
            <param name="stream">読込むストリーム</param>
            <return></return>
        </member>
        <member name="T:Pao.Reports.IPrintDefine">
            <summary>
            帳票定義体インタフェース
            </summary>
        </member>
        <member name="P:Pao.Reports.IPrintDefine.Setting">
            <summary>
            印刷情報
            </summary>
        </member>
        <member name="M:Pao.Reports.IPrintDefine.Traverse(Pao.Reports.IPmVisitor)">
            <summary>
            トラバースする。
            </summary>
            <param name="visitor">トラバースインターフェイス</param>
        </member>
        <member name="T:Pao.Reports.IPrintDefineInput">
            <summary>
            帳票定義体を読込みPmDefineオブジェクトを構築するインタフェース
            </summary>
        </member>
        <member name="P:Pao.Reports.IPrintDefineInput.Define">
            <summary>
            PmDefineオブジェクト
            </summary>
        </member>
        <member name="M:Pao.Reports.IPrintDefineInput.Load(System.String)">
            <summary>
            帳票定義体を読込む。
            </summary>
            <param name="filename">帳票定義体のファイル名</param>
            <return></return>
        </member>
        <member name="T:Pao.Reports.IPrintDraw">
            <summary>
            データ描画インタフェース
            </summary>
        </member>
        <member name="T:Pao.Reports.IPrintOutput">
            <summary>
            印刷オブジェクトを出力するためのインタフェース
            </summary>
        </member>
        <member name="M:Pao.Reports.IPrintOutput.Output(Pao.Reports.IPrintPage[])">
            <summary>
            印刷データを出力する
            </summary>
            <param name="pages">印刷データオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.IPrintOutput.Output(Pao.Reports.IPrintPage)">
            <summary>
            １ページ単位で印刷データを出力する
            </summary>
            <param name="page">印刷データオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.IPrintOutput.Output(Pao.Reports.IPrintDefine)">
            <summary>
            帳票定義体を出力する
            </summary>
            <param name="define">帳票定義体オブジェクト</param>
        </member>
        <member name="T:Pao.Reports.IPrintPage">
            <summary>
            ページデータインタフェース
            </summary>
        </member>
        <member name="P:Pao.Reports.IPrintPage.Define">
            <summary>
            定義
            </summary>
        </member>
        <member name="P:Pao.Reports.IPrintPage.PrintDefine">
            <summary>
            帳票定義体情報
            </summary>
        </member>
        <member name="M:Pao.Reports.IPrintPage.Traverse(Pao.Reports.IPmVisitor)">
            <summary>
            静的項目に対する動的項目を設定した後トラバースする。
            </summary>
            <param name="visitor">出力インタフェース</param>
        </member>
        <member name="M:Pao.Reports.IPrintPage.SetValue(System.String,System.String)">
            <summary>
            動的な値を設定する。
            </summary>
            <param name="name">値を設定するオブジェクト名</param>
            <param name="value">設定する値</param>
        </member>
        <member name="M:Pao.Reports.IPrintPage.SetValue(System.String,System.Int64)">
            <summary>
            動的な値を設定する。
            </summary>
            <param name="name">値を設定するオブジェクト名</param>
            <param name="index">値のインデックス（行番号等）</param>
        </member>
        <member name="M:Pao.Reports.IPrintPage.SetValue(System.String,System.String,System.Int64)">
            <summary>
            動的な値を設定する。
            </summary>
            <param name="name">値を設定するオブジェクト名</param>
            <param name="value">設定する値</param>
            <param name="index">値のインデックス（行番号等）</param>
        </member>
        <member name="M:Pao.Reports.IPrintPage.SetValue(System.String,System.Int64,System.Int64)">
            <summary>
            動的な値を設定する。
            </summary>
            <param name="name">値を設定するオブジェクト名</param>
            <param name="indexX">値のインデックス（列番号）</param>
            <param name="indexY">値のインデックス（行番号）</param>
        </member>
        <member name="M:Pao.Reports.IPrintPage.SetValue(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            動的な値を設定する。
            </summary>
            <param name="name">値を設定するオブジェクト名</param>
            <param name="value">設定する値</param>
            <param name="indexX">値のインデックス（列番号）</param>
            <param name="indexY">値のインデックス（行番号）</param>
        </member>
        <member name="M:Pao.Reports.IPrintPage.SetValue(System.String,System.String,System.Int64,Pao.Reports.ZObjects)">
            <summary>
            動的な値と属性を設定する。
            </summary>
            <param name="name">値を設定するオブジェクト名</param>
            <param name="value">設定する値</param>
            <param name="index">値のインデックス（行番号等）</param>
            <param name="zobj">オブジェクト全体</param>
        </member>
        <member name="M:Pao.Reports.IPrintPage.SetValue(System.String,System.String,System.Int64,System.Int64,Pao.Reports.ZObjects)">
            <summary>
            動的な値と属性を設定する。
            </summary>
            <param name="name">値を設定するオブジェクト名</param>
            <param name="value">設定する値</param>
            <param name="indexX">値のインデックス（列番号）</param>
            <param name="indexY">値のインデックス（行番号）</param>
            <param name="zobj">オブジェクト全体</param>
        </member>
        <member name="T:Pao.Reports.IReport">
            <summary>
            IReportインタフェース
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.EmailOfLicenseHolder">
            <summary>
            ライセンス保持者メールアドレス
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.AccessFile">
            <summary>
            プレビュー画面のメニューから
            ファイルにアクセスする事(ファイルに保存等)を許可するか？
            True : 許可する(規定値) 
            False: 許可しない
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.AcceptDragDrop">
            <summary>
            プレビュー画面にドラッグの許可するか？
            True : 許可する(規定値) 
            False: 許可しない
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.AllPages">
            <summary>
            全ページ数
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.ZoomPreview">
            <summary>
            プレビュー表示倍率(初期値)
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.CutByPage">
            <summary>
            ページでカットする(ラベルプリンタ・レシートプリンタ用)
            既定値：false
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.DisplayDialog">
            <summary>
            印刷ダイアルログの表示
            True : 表示する(規定値) 
            False: 表示しない
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.DisplayPrinting">
            <summary>
            印刷中(ページ数)の表示
            True : 表示する(規定値) 
            False: 表示しない
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.DocumentName">
            <summary>
            印刷ドキュメント名
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.MarginTop">
            <summary>
            上部余白(印刷・プレビュー時のみ有効)
            mm単位で指定
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.MarginLeft">
            <summary>
            左側余白(印刷・プレビュー時のみ有効)
            mm単位で指定
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.PreviewDialog">
            <summary>
            プレビューをダイアログ表示するか？
            既定値：true
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.PreviewInTaskbar">
            <summary>
            プレビューをタスクバーに表示するか？
            既定値：false
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.SwapPdfImage">
            <summary>
            PDF画像をスワップするかどうか？(Out Of Memory 対策)
            既定値：false
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.z_Objects">
            <summary>
            オブジェクトの属性取得・設定用静的クラス
            </summary>
        </member>
        <member name="P:Pao.Reports.IReport.z_PreviewWindow">
            <summary>
            プレビュー情報
            </summary>
        </member>
        <member name="M:Pao.Reports.IReport.LoadDefFile(System.String)">
            <summary>
            帳票定義体をファイルから読込む。
            </summary>
            <param name="name">帳票定義体のファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.IReport.LoadDefFile(System.IO.Stream)">
            <summary>
            帳票定義体をストリームから読込む。
            </summary>
            <param name="stream">帳票定義体のストリーム</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.IReport.LoadDefFile(System.IO.Stream,System.String)">
            <summary>
            帳票定義体をストリームから読込む。
            </summary>
            <param name="stream">帳票定義体のストリーム</param>
            <param name="filename">帳票定義体のファイル名</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.IReport.ChangeDefFile(System.String)">
            <summary>
            帳票定義体を変更する。
            (データの再セット不要)
            </summary>
            <param name="name">帳票定義体のファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.IReport.LoadXMLFile(System.String)">
            <summary>
            印刷データ（XML形式）を読込む
            </summary>
            <param name="name">印刷データ（XML形式）のファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.IReport.LoadData(System.Byte[])">
            <summary>
            印刷データを読み込む
            </summary>
            <param name="data">印刷データ（XML形式）のファイル名</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.IReport.PageStart">
            <summary>
            ページの開始を宣言する。
            </summary>
        </member>
        <member name="M:Pao.Reports.IReport.PageEnd">
            <summary>
            ページの終了を宣言する。
            </summary>
        </member>
        <member name="M:Pao.Reports.IReport.Write(System.String,System.String)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="value">設定する値。空文字("")の場合文字列以外のオブジェクトを消す</param>
        </member>
        <member name="M:Pao.Reports.IReport.Write(System.String,System.String,System.Int64)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="value">設定する値。空文字("")の場合文字列以外のオブジェクトを消す</param>
            <param name="index">設定するオブジェクトのインデックス（行番号等）</param>
        </member>
        <member name="M:Pao.Reports.IReport.Write(System.String,System.Int64)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="index">設定するオブジェクトのインデックス（行番号等）</param>
        </member>
        <member name="M:Pao.Reports.IReport.Write(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="value">設定する値。空文字("")の場合文字列以外のオブジェクトを消す</param>
            <param name="indexX">設定するオブジェクトのインデックス（行番号）</param>
            <param name="indexY">設定するオブジェクトのインデックス（列番号）</param>
        </member>
        <member name="M:Pao.Reports.IReport.Write(System.String,System.Int64,System.Int64)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="indexX">設定するオブジェクトのインデックス（行番号）</param>
            <param name="indexY">設定するオブジェクトのインデックス（列番号）</param>
        </member>
        <member name="M:Pao.Reports.IReport.SaveXMLFile(System.String)">
            <summary>
            指定されたファイルにXML形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return>True : 成功</return>
        </member>
        <member name="M:Pao.Reports.IReport.SaveData">
            <summary>
            ZIP形式のバイナリデータを返す。
            </summary>
        </member>
        <member name="M:Pao.Reports.IReport.SaveSVGFile(System.String)">
            <summary>
            指定されたファイルにSVG形式のデータを保存する。
            </summary>
            <param name="name">SVG形式のデータを保存するファイル名(拡張子はhtml)</param>
            <return>True : 成功</return>
        </member>
        <member name="M:Pao.Reports.IReport.SaveSVGZFile(System.String)">
            <summary>
            指定されたファイルにSVGZ形式のデータを保存する。
            </summary>
            <param name="name">SVGZ形式のデータを保存するファイル名(拡張子はhtml)</param>
            <return>True : 成功</return>
        </member>
        <member name="M:Pao.Reports.IReport.SavePDF(System.String)">
            <summary>
            指定されたファイルにPDF形式の印刷データを保存する。
            </summary>
            <param name="name">保存するPDFファイル名</param>
            <return>True : 成功</return>
        </member>
        <member name="M:Pao.Reports.IReport.SavePDF(System.IO.Stream)">
            <summary>
            指定されたストリームにPDF形式の印刷データを保存する。
            </summary>
            <param name="stream">印刷データを保存するストリーム</param>
            <return>True : 成功</return>
        </member>
        <member name="M:Pao.Reports.IReport.SaveXPS(System.String)">
            <summary>
            指定されたファイルにXPS形式の印刷データを保存する。
            </summary>
            <param name="name">保存するXPSファイル名</param>
            <return>True : 成功</return>
        </member>
        <member name="M:Pao.Reports.IReport.WpfPreview(System.Windows.Controls.DocumentViewer)">
            <summary>
            指定されたDocumentViewerにの印刷データをプレビューする。
            </summary>
            <param name="dw">プレビューする DocumentViewer</param>
            <return>True : 成功</return>
        </member>
        <member name="M:Pao.Reports.IReport.ClearData">
            <summary>
            印刷データを初期化(破棄)する
            </summary>
        </member>
        <member name="T:Pao.Reports.Linux.Color">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pao.Reports.Linux.Color.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="a"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
        </member>
        <member name="M:Pao.Reports.Linux.Color.#ctor(System.String)">
            <summary>
            #ffffffff を指定。
            </summary>
            <param name="s_argb">#ffffffff を指定</param>
        </member>
        <member name="P:Pao.Reports.Linux.Color.AliceBlue">
            <summary>
            ARGB 値が #FFF0F8FF であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.AntiqueWhite">
            <summary>
            ARGB 値が #FFFAEBD7 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Aqua">
            <summary>
            ARGB 値が #FF00FFFF であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Aquamarine">
            <summary>
            ARGB 値が #FF7FFFD4 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Azure">
            <summary>
            ARGB 値が #FFF0FFFF であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Beige">
            <summary>
            ARGB 値が #FFF5F5DC であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Bisque">
            <summary>
            ARGB 値が #FFFFE4C4 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Black">
            <summary>
            ARGB 値が #FF000000 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.BlanchedAlmond">
            <summary>
            ARGB 値が #FFFFEBCD であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Blue">
            <summary>
            ARGB 値が #FF0000FF であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.BlueViolet">
            <summary>
            ARGB 値が #FF8A2BE2 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Brown">
            <summary>
            ARGB 値が #FFA52A2A であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.BurlyWood">
            <summary>
            ARGB 値が #FFDEB887 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.CadetBlue">
            <summary>
            ARGB 値が #FF5F9EA0 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Chartreuse">
            <summary>
            ARGB 値が #FF7FFF00 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Chocolate">
            <summary>
            ARGB 値が #FFD2691E であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Coral">
            <summary>
            ARGB 値が #FFFF7F50 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.CornflowerBlue">
            <summary>
            ARGB 値が #FF6495ED であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Cornsilk">
            <summary>
            ARGB 値が #FFDC143C であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Crimson">
            <summary>
            ARGB 値が #FFFFF8DC であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Cyan">
            <summary>
            ARGB 値が #FF00FFFF であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkBlue">
            <summary>
            ARGB 値が #FF00008B であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkCyan">
            <summary>
            ARGB 値が #FF008B8B であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkGoldenrod">
            <summary>
            ARGB 値が #FFB8860B であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkGray">
            <summary>
            ARGB 値が #FFA9A9A9 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkGreen">
            <summary>
            ARGB 値が #FF006400 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkKhaki">
            <summary>
            ARGB 値が #FFBDB76B であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkMagenta">
            <summary>
            ARGB 値が #FF8B008B であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkOliveGreen">
            <summary>
            ARGB 値が #FF556B2F であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkOrange">
            <summary>
            ARGB 値が #FFFF8C00 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkOrchid">
            <summary>
            ARGB 値が #FF9932CC であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkRed">
            <summary>
            ARGB 値が #FF8B0000 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkSalmon">
            <summary>
            ARGB 値が #FFE9967A であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkSeaGreen">
            <summary>
            ARGB 値が #FF8FBC8B であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkSlateBlue">
            <summary>
            ARGB 値が #FF483D8B であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkSlateGray">
            <summary>
            ARGB 値が #FF2F4F4F であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkTurquoise">
            <summary>
            ARGB 値が #FF00CED1 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DarkViolet">
            <summary>
            ARGB 値が #FF9400D3 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DeepPink">
            <summary>
            ARGB 値が #FFFF1493 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DeepSkyBlue">
            <summary>
            ARGB 値が #FF00BFFF であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DimGray">
            <summary>
            ARGB 値が #FF696969 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.DodgerBlue">
            <summary>
            ARGB 値が #FF1E90FF であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Firebrick">
            <summary>
            ARGB 値が #FFB22222 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.FloralWhite">
            <summary>
            ARGB 値が #FFFFFAF0 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.ForestGreen">
            <summary>
            ARGB 値が #FF228B22 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Fuchsia">
            <summary>
            ARGB 値が #FFFF00FF であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Gainsboro">
            <summary>
            ARGB 値が #FFDCDCDC であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.GhostWhite">
            <summary>
            ARGB 値が #FFF8F8FF であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Gold">
            <summary>
            ARGB 値が #FFFFD700 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Goldenrod">
            <summary>
            ARGB 値が #FFDAA520 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Gray">
            <summary>
            ARGB 値が #FF808080 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Green">
            <summary>
            ARGB 値が #FF008000 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.GreenYellow">
            <summary>
            ARGB 値が #FFADFF2F であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Honeydew">
            <summary>
            ARGB 値が #FFF0FFF0 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.HotPink">
            <summary>
            ARGB 値が #FFFF69B4 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.IndianRed">
            <summary>
            ARGB 値が #FFCD5C5C であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Indigo">
            <summary>
            ARGB 値が #FF4B0082 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Ivory">
            <summary>
            ARGB 値が #FFFFFFF0 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Khaki">
            <summary>
            ARGB 値が #FFF0E68C であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Lavender">
            <summary>
            ARGB 値が #FFE6E6FA であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LavenderBlush">
            <summary>
            ARGB 値が #FFFFF0F5 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LawnGreen">
            <summary>
            ARGB 値が #FF7CFC00 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LemonChiffon">
            <summary>
            ARGB 値が #FFFFFACD であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightBlue">
            <summary>
            ARGB 値が #FFADD8E6 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightCoral">
            <summary>
            ARGB 値が #FFF08080 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightCyan">
            <summary>
            ARGB 値が #FFE0FFFF であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightGoldenrodYellow">
            <summary>
            ARGB 値が #FFFAFAD2 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightGray">
            <summary>
            ARGB 値が #FFD3D3D3 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightGreen">
            <summary>
            ARGB 値が #FF90EE90 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightPink">
            <summary>
            ARGB 値が #FFFFB6C1 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightSalmon">
            <summary>
            ARGB 値が #FFFFA07A であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightSeaGreen">
            <summary>
            ARGB 値が #FF20B2AA であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightSkyBlue">
            <summary>
            ARGB 値が #FF87CEFA であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightSlateGray">
            <summary>
            ARGB 値が #FF778899 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightSteelBlue">
            <summary>
            ARGB 値が #FFB0C4DE であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LightYellow">
            <summary>
            ARGB 値が #FFFFFFE0 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Lime">
            <summary>
            ARGB 値が #FF00FF00 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.LimeGreen">
            <summary>
            ARGB 値が #FF32CD32 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Linen">
            <summary>
            ARGB 値が #FFFAF0E6 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Magenta">
            <summary>
            ARGB 値が #FFFF00FF であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Maroon">
            <summary>
            ARGB 値が #FF800000 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.MediumAquamarine">
            <summary>
            ARGB 値が #FF66CDAA であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.MediumBlue">
            <summary>
            ARGB 値が #FF0000CD であるシステム定義の色を取得します
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.MediumOrchid">
            <summary>
            ARGB 値が #FFBA55D3 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.MediumPurple">
            <summary>
            ARGB 値が #FF9370DB であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.MediumSeaGreen">
            <summary>
            ARGB 値が #FF3CB371 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.MediumSlateBlue">
            <summary>
            ARGB 値が #FF7B68EE であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.MediumSpringGreen">
            <summary>
            ARGB 値が #FF00FA9A であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.MediumTurquoise">
            <summary>
            ARGB 値が #FF48D1CC であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.MediumVioletRed">
            <summary>
            ARGB 値が #FFC71585 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.MidnightBlue">
            <summary>
            ARGB 値が #FF191970 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.MintCream">
            <summary>
            ARGB 値が #FFF5FFFA であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.MistyRose">
            <summary>
            ARGB 値が #FFFFE4E1 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Moccasin">
            <summary>
            ARGB 値が #FFFFE4B5 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.NavajoWhite">
            <summary>
            ARGB 値が #FFFFDEAD であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Navy">
            <summary>
            ARGB 値が #FF000080 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.OldLace">
            <summary>
            ARGB 値が #FFFDF5E6 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Olive">
            <summary>
            ARGB 値が #FF808000 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.OliveDrab">
            <summary>
            ARGB 値が #FF6B8E23 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Orange">
            <summary>
            ARGB 値が #FFFFA500 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.OrangeRed">
            <summary>
            ARGB 値が #FFFF4500 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Orchid">
            <summary>
            ARGB 値が #FFDA70D6 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.PaleGoldenrod">
            <summary>
            ARGB 値が #FFEEE8AA であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.PaleGreen">
            <summary>
            ARGB 値が #FF98FB98 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.PaleTurquoise">
            <summary>
            ARGB 値が #FFAFEEEE であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.PaleVioletRed">
            <summary>
            ARGB 値が #FFDB7093 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.PapayaWhip">
            <summary>
            ARGB 値が #FFFFEFD5 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.PeachPuff">
            <summary>
            ARGB 値が #FFFFDAB9 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Peru">
            <summary>
            ARGB 値が #FFCD853F であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Pink">
            <summary>
            ARGB 値が #FFFFC0CB であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Plum">
            <summary>
            ARGB 値が #FFDDA0DD であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.PowderBlue">
            <summary>
            ARGB 値が #FFB0E0E6 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Purple">
            <summary>
            ARGB 値が #FF800080 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.RebeccaPurple">
            <summary>
            ARGB 値が のシステム定義色を取得#663399。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Red">
            <summary>
            ARGB 値が #FFFF0000 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.RosyBrown">
            <summary>
            ARGB 値が #FFBC8F8F であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.RoyalBlue">
            <summary>
            ARGB 値が #FF4169E1 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.SaddleBrown">
            <summary>
            ARGB 値が #FF8B4513 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Salmon">
            <summary>
            ARGB 値が #FFFA8072 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.SandyBrown">
            <summary>
            ARGB 値が #FFF4A460 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.SeaGreen">
            <summary>
            ARGB 値が #FF2E8B57 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.SeaShell">
            <summary>
            ARGB 値が #FFFFF5EE であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Sienna">
            <summary>
            ARGB 値が #FFA0522D であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Silver">
            <summary>
            ARGB 値が #FFC0C0C0 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.SkyBlue">
            <summary>
            ARGB 値が #FF87CEEB であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.SlateBlue">
            <summary>
            ARGB 値が #FF6A5ACD であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.SlateGray">
            <summary>
            ARGB 値が #FF708090 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Snow">
            <summary>
            ARGB 値が #FFFFFAFA であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.SpringGreen">
            <summary>
            ARGB 値が #FF00FF7F であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.SteelBlue">
            <summary>
            ARGB 値が #FF4682B4 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Tan">
            <summary>
            ARGB 値が #FFD2B48C であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Teal">
            <summary>
            ARGB 値が #FF008080 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Thistle">
            <summary>
            ARGB 値が #FFD8BFD8 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Tomato">
            <summary>
            ARGB 値が #FFFF6347 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Turquoise">
            <summary>
            ARGB 値が #FF40E0D0 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Violet">
            <summary>
            ARGB 値が #FFEE82EE であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Wheat">
            <summary>
            ARGB 値が #FFF5DEB3 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.White">
            <summary>
            ARGB 値が #FFFFFFFF であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.WhiteSmoke">
            <summary>
            ARGB 値が #FFF5F5F5 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Yellow">
            <summary>
            ARGB 値が #FFFFFF00 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.YellowGreen">
            <summary>
            ARGB 値が #FF9ACD32 であるシステム定義の色を取得します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.Color.Transparent">
            <summary>
            透明
            </summary>
        </member>
        <member name="M:Pao.Reports.Linux.Color.FromArgb(System.Int32)">
            <summary>
            
            </summary>
            <param name="argb"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Linux.Color.FromArgb(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.Linux.GraphicsUnit">
            <summary>
            指定のデータの長さの単位を指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.GraphicsUnit.World">
            <summary>
            ワールド座標系を長さの単位に指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.GraphicsUnit.Display">
            <summary>
            表示デバイスの長さの単位を指定します。通常、ビデオ ディスプレイにはピクセル、プリンターには 1/100 インチを指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.GraphicsUnit.Pixel">
            <summary>
            デバイス ピクセルを長さの単位に指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.GraphicsUnit.Point">
            <summary>
            プリンター ポイント (1/72 インチ) を長さの単位に指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.GraphicsUnit.Inch">
            <summary>
            インチを長さの単位に指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.GraphicsUnit.Document">
            <summary>
            ドキュメント単位 (1/300 インチ) を長さの単位に指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.GraphicsUnit.Millimeter">
            <summary>
            ミリメートルを長さの単位に指定します。
            </summary>
        </member>
        <member name="T:Pao.Reports.Linux.DashStyle">
            <summary>
            [Linux版] Pen オブジェクトで描画する破線のスタイルを指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.DashStyle.Solid">
            <summary>
                実線を指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.DashStyle.Dash">
            <summary>
                ダッシュで構成される直線を指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.DashStyle.Dot">
            <summary>
                ドットで構成される直線を指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.DashStyle.DashDot">
            <summary>
               ダッシュとドットの繰り返しパターンで構成される直線を指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.DashStyle.DashDotDot">
            <summary>
                ダッシュと 2 つのドットの繰り返しパターンで構成される直線を指定します。
            </summary>
        </member>
        <member name="F:Pao.Reports.Linux.DashStyle.Custom">
            <summary>
                ユーザー定義のカスタム ダッシュ スタイルを指定します。
            </summary>
        </member>
        <member name="T:Pao.Reports.Linux.ImageFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.ImageFormat.Guid">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.ImageFormat.MemoryBmp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.ImageFormat.Bmp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.ImageFormat.Emf">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.ImageFormat.Wmf">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.ImageFormat.Gif">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.ImageFormat.Jpeg">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.ImageFormat.Png">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.ImageFormat.Tiff">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.ImageFormat.Exif">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Linux.ImageFormat.Icon">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pao.Reports.Linux.ImageFormat.#ctor(System.Guid)">
            <summary>
            
            </summary>
            <param name="guid"></param>
        </member>
        <member name="T:Pao.Reports.Margin">
            <summary>
            Margin の概要の説明です。
            </summary>
        </member>
        <member name="T:Pao.Reports.MenuItemHelp">
            <summary>
            メニューが選択されたときに、指定されたStatusBarPanelに文字列を表示するメニュークラス
            </summary>
            <remarks>
            このクラスを使うと、StatusBarPanelに文字列が残る。
            その場合、FormクラスのOnMenuCompleteイベントでStatusBarPanelのTextプロパティに空文字を代入すること。
            </remarks>
        </member>
        <member name="F:Pao.Reports.MenuItemHelp.helpPanel_">
            <summary>
            ヘルプメッセージを表示するパネル
            </summary>
        </member>
        <member name="F:Pao.Reports.MenuItemHelp.helpString_">
            <summary>
            ヘルプメッセージ
            </summary>
        </member>
        <member name="P:Pao.Reports.MenuItemHelp.HelpPanel">
            <summary>
            ヘルプメッセージを表示するパネル
            </summary>
        </member>
        <member name="P:Pao.Reports.MenuItemHelp.HelpText">
            <summary>
            表示するヘルプメッセージ
            </summary>
        </member>
        <member name="T:Pao.Reports.PaoReportsBaseException">
            <summary>
            PaoReportsBaseException is the base exception class for the PaoReportsLibrary.
            All library exceptions are derived from this.
            </summary>
            <remarks>NOTE: Not all exceptions thrown will be derived from this class.
            A variety of other exceptions are possible for example <see cref="T:System.ArgumentNullException"></see></remarks>
        </member>
        <member name="M:Pao.Reports.PaoReportsBaseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor 
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/> for this constructor</param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/> for this constructor</param>
        </member>
        <member name="M:Pao.Reports.PaoReportsBaseException.#ctor">
            <summary>
            Initializes a new instance of the PaoReportsBaseException class.
            </summary>
        </member>
        <member name="M:Pao.Reports.PaoReportsBaseException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PaoReportsBaseException class with a specified error message.
            </summary>
            <param name="message">A message describing the exception.</param>
        </member>
        <member name="M:Pao.Reports.PaoReportsBaseException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the PaoReportsBaseException class with a specified
            error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">A message describing the exception.</param>
            <param name="innerException">The inner exception</param>
        </member>
        <member name="T:Pao.Reports.ReportStartImpl">
            <summary>
            Report起動クラス
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportStartImpl.Run(System.String[])">
            <summary>
            Reportのメインエントリポイント
            </summary>
            <param name="args">レポート定義ファイル名 or 帳票データファイル名</param>
        </member>
        <member name="T:Pao.Reports.Pdf.Arial">
            <summary>
            NORMAL
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Arial.ARIAL">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Arial.#ctor">
            <summary>
            Arialクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.ArialBold">
            <summary>
            BOLD
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.ArialBold.ARIAL_BOLD">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.ArialBold.#ctor">
            <summary>
            Arialクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.ArialItalic">
            <summary>
            ITALIC
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.ArialItalic.ARIAL_ITALIC">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.ArialItalic.#ctor">
            <summary>
            Arialクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.ArialBoldItalic">
            <summary>
            BOLD ITALIC
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.ArialBoldItalic.ARIAL_BOLD_ITALIC">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.ArialBoldItalic.#ctor">
            <summary>
            Arialクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.Catalog">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Catalog.CATALOG">
            <summary>
            Type登録時のName
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Catalog.PAGES">
            <summary>
            Pagesの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Catalog.dict_">
            <summary>
            CatalogがもつDictionary
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Catalog.document_">
            <summary>
            親となるDocument
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Catalog.#ctor(Pao.Reports.Pdf.Document)">
            <summary>
            Catalogクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Catalog.ToString">
            <summary>
            オブジェクトの文字列表現を返す
            </summary>
            <returns>オブジェクトの文字列表現</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.Catalog.Write(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            オブジェクトを出力する
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="T:Pao.Reports.Pdf.CIDFont">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.CIDFont.CIDSYSTEMINFO">
            <summary>
            CIDSystemInfoの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.CIDFont.DW_KEY">
            <summary>
            DWの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.CIDFont.W_KEY">
            <summary>
            Wの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.CIDFont.DW2_KEY">
            <summary>
            DW2の登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.CIDFont.W2_KEY">
            <summary>
            W2の登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.CIDFont.CIDTOGIDMAP">
            <summary>
            CIDToGIDMapの登録キー
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.CIDFont.#ctor">
            <summary>
            CIDFontクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.CIDFont.CIDSystemInfo">
            <summary>
            CIDSystemInfoを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.CIDFont.DW">
            <summary>
            DW(=default width)を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.CIDFont.W">
            <summary>
            W(=widths for individual CIDs)を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.CIDFont.DW2">
            <summary>
            DW2を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.CIDFont.W2">
            <summary>
            W2を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.CIDFont.Ascent">
            <summary>
            このFontのアセントを返す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.CIDFont.Descent">
            <summary>
            このFontのディセントを返す
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.CIDSystemInfo">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.CIDSystemInfo.REGISTRY">
            <summary>
            Registryの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.CIDSystemInfo.ORDERING">
            <summary>
            Orderingの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.CIDSystemInfo.SUPPLEMENT">
            <summary>
            Supplementの登録キー
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.CIDSystemInfo.#ctor">
            <summary>
            CIDSystemInfoクラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.CIDSystemInfo.SetRegistry(System.String)">
            <summary>
            Registryを設定する
            </summary>
            <param name="registry">registry文字列</param>
        </member>
        <member name="M:Pao.Reports.Pdf.CIDSystemInfo.SetOrdering(System.String)">
            <summary>
            Orderingを設定する
            </summary>
            <param name="ordering">ordering文字列</param>
        </member>
        <member name="M:Pao.Reports.Pdf.CIDSystemInfo.SetSupplement(System.Int32)">
            <summary>
            Supplementを設定する
            </summary>
            <param name="supplement">supplement値</param>
        </member>
        <member name="T:Pao.Reports.Pdf.Contents">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.document_">
            <summary>
            Contentsが属するDocument
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.mediabox_">
            <summary>
            Contentsが属するPageのサイズ
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.dict_">
            <summary>
            Contentsが持つDictionary
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.stream_">
            <summary>
            Content Streamの実体
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.LENGTH">
            <summary>
            Lengthの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.FILTER">
            <summary>
            Filterの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.FLATEDECODE">
            <summary>
            Filter : FlateDecode
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.isTextState_">
            <summary>
            現在の描画がテキストであるか否か
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.resources_">
            <summary>
            このContentsのResources
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.foregroundColor_">
            <summary>
            このContentsの前景色
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.backgroundColor_">
            <summary>
            このContentsの背景色
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.foregroundProcedure_">
            <summary>
            前景色に対する処理
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.backgroundProcedure_">
            <summary>
            背景色に対する処理
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.japaneseFont_">
            <summary>
            日本語フォント
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Contents.englishFont_">
            <summary>
            欧文フォント
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.#ctor">
            <summary>
            Contentsクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.Contents.Resources">
            <summary>
            Resourcesを示す
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.DrawString(System.String,Pao.Reports.Linux.Font,Pao.Reports.Linux.Brush,System.Single,System.Single)">
            <summary>
            指定した位置に、指定した Brush オブジェクトと Font オブジェクトで、指定した文字列を描画します。
            </summary>
            <param name="value">描画する文字列</param>
            <param name="font">文字列のテキスト形式を定義する Font オブジェクト</param>
            <param name="brush">描画するテキストの色とテクスチャを決定する Brush オブジェクト</param>
            <param name="x">描画するテキストの左上隅のX座標</param>
            <param name="y">描画するテキストの左上隅のY座標</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.DrawString(System.String,Pao.Reports.Linux.Font,Pao.Reports.Linux.Color,System.Single,System.Single)">
            <summary>
            指定した位置に、指定した Brush オブジェクトと Font オブジェクトで、指定した文字列を描画します。
            </summary>
            <param name="value">描画する文字列</param>
            <param name="font">文字列のテキスト形式を定義する Font オブジェクト</param>
            <param name="color">描画するテキストの色</param>
            <param name="x">描画するテキストの左上隅のX座標</param>
            <param name="y">描画するテキストの左上隅のY座標</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.DrawString(System.String,Pao.Reports.Linux.Font,Pao.Reports.Linux.Brush,Pao.Reports.Linux.RectangleF,Pao.Reports.Linux.StringFormat,System.Boolean,System.Boolean)">
            <summary>
            指定した位置に、指定した Brush オブジェクトと Font オブジェクトで、指定した文字列を描画します。
            </summary>
            <param name="value">描画する文字列</param>
            <param name="font">文字列のテキスト形式を定義する Font オブジェクト</param>
            <param name="brush">描画するテキストの色とテクスチャを決定する Brush オブジェクト</param>
            <param name="rect">？</param>
            <param name="format">？</param>
            <param name="flgCr">？</param>
            <param name="flgCut">？</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.DrawLine(Pao.Reports.Linux.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            座標ペアで指定された 2 つの点を結ぶ直線を描画します
            </summary>
            <param name="pen">描画するペン</param>
            <param name="x1">始点のX座標</param>
            <param name="y1">始点のY座標</param>
            <param name="x2">終点のX座標</param>
            <param name="y2">終点のY座標</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.DrawRectangle(Pao.Reports.Linux.Pen,Pao.Reports.Linux.Rectangle)">
            <summary>
            Rectangle 構造体で指定された四角形を描画します
            </summary>
            <param name="pen">描画するペン</param>
            <param name="rect">描画する矩形</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.DrawRectangle(Pao.Reports.Linux.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            座標ペア、幅、および高さで指定された四角形を描画します
            </summary>
            <param name="pen">描画するペン</param>
            <param name="x">矩形の左上の点のX座標</param>
            <param name="y">矩形の左上の点のY座標</param>
            <param name="width">矩形の幅</param>
            <param name="height">矩形の高さ</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.FillRectangle(Pao.Reports.Linux.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            座標ペア、幅、および高さで指定された四角形の内部を塗りつぶします
            </summary>
            <param name="brush">塗りつぶすブラシ</param>
            <param name="x">矩形の左上の点のX座標</param>
            <param name="y">矩形の左上の点のY座標</param>
            <param name="width">矩形の幅</param>
            <param name="height">矩形の高さ</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.FillRectangle(Pao.Reports.Linux.Color,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.DrawEllipse(Pao.Reports.Linux.Pen,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            座標ペア、高さ、および幅で指定された外接する四角形によって定義される楕円を描画します
            </summary>
            <param name="pen">描画するペン</param>
            <param name="x">楕円をカバーする矩形の点のX座標</param>
            <param name="y">楕円をカバーする矩形の点のY座標</param>
            <param name="width">楕円の描画幅</param>
            <param name="height">楕円の描画高さ</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.FillEllipse(Pao.Reports.Linux.Brush,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            座標ペア、高さ、および幅で指定された外接する四角形によって定義される楕円を塗りつぶします
            </summary>
            <param name="brush">描画するブラシ</param>
            <param name="x">楕円をカバーする矩形の点のX座標</param>
            <param name="y">楕円をカバーする矩形の点のY座標</param>
            <param name="width">楕円の描画幅</param>
            <param name="height">楕円の描画高さ</param>
            
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.DrawPolygon(Pao.Reports.Linux.Pen,Pao.Reports.Linux.PointF[])">
            <summary>
            配列で定義された多角形を描画します
            </summary>
            <param name="pen">描画するペン</param>
            <param name="points">多角形の点の配列</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.FillPolygon(Pao.Reports.Linux.Brush,Pao.Reports.Linux.PointF[])">
            <summary>
            PointF構造体で指定された点の配列によって定義される多角形の内部を塗りつぶします
            </summary>
            <param name="brush">塗りつぶすブラシ</param>
            <param name="points">多角形の点の配列</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.DrawPath(Pao.Reports.Linux.Pen,Pao.Reports.Linux.GraphicsPath)">
            <summary>
            GraphicsPathオブジェクトを描画します。
            </summary>
            <param name="pen">パスの色、幅、及びスタイルを決定するPenオブジェクト</param>
            <param name="path">描画するGraphicsPathオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.FillPath(Pao.Reports.Linux.Brush,Pao.Reports.Linux.GraphicsPath)">
            <summary>
            GraphicsPathオブジェクトの内部を塗りつぶします。
            </summary>
            <param name="brush">塗りつぶし特性を決定するBrushオブジェクト</param>
            <param name="path">塗りつぶし対象のパスを表すGraphicsPathオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.DrawImageUnscaled(SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32},System.Int32,System.Int32)">
            <summary>
            指定したイメージを座標ペアで指定された位置に元の物理サイズで描画します
            </summary>
            <param name="image">描画するImageオブジェクト</param>
            <param name="x">Imageの左上X座標</param>
            <param name="y">Imageの左上Y座標</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.MeasureString(System.String,Pao.Reports.Linux.Font)">
            <summary>
            指定した Font オブジェクトを使用し、指定した StringFormat オブジェクトで書式指定して描画した場合の、指定した文字列を計測します
            </summary>
            <param name="text">計測する文字列</param>
            <param name="font">文字列のテキスト形式を定義する Font オブジェクト</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.MeasureString(System.String,Pao.Reports.Linux.Font,System.Int32,Pao.Reports.Linux.StringFormat)">
            <summary>
            指定した Font オブジェクトを使用し、指定した StringFormat オブジェクトで書式指定して描画した場合の、指定した文字列を計測します
            </summary>
            <param name="text">計測する文字列</param>
            <param name="font">文字列のテキスト形式を定義する Font オブジェクト</param>
            <param name="width">文字列の最大幅</param>
            <param name="format">行間など、文字列の書式情報を表す StringFormat オブジェクト</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.ScaleTransform(System.Single,System.Single)">
            <summary>
            カレントの座標系をスケーリングする
            </summary>
            <param name="x">X方向のスケール</param>
            <param name="y">Y方向のスケール</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.Rotate(System.Single)">
            <summary>
            カレントの座標系を回転する
            </summary>
            <param name="th">回転角度</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.TranslateTransform(System.Single,System.Single)">
            <summary>
            カレントの座標系の原点を移動する
            </summary>
            <param name="x">新しい原点のX座標</param>
            <param name="y">新しい原点のY座標</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._CM(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            CMを修正する
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="c"></param>
            <param name="d"></param>
            <param name="e"></param>
            <param name="f"></param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._SetPen(Pao.Reports.Linux.Pen)">
            <summary>
            ペン情報を設定する
            </summary>
            <param name="pen">設定するペン</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._SetBrush(Pao.Reports.Linux.Brush)">
            <summary>
            ブラシ情報を設定する
            </summary>
            <param name="brush">設定するブラシ</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._SetLineWidth(System.Single)">
            <summary>
            線の描画幅を設定する
            </summary>
            <param name="width">線の幅</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._SetLineDash(System.Single,System.Single)">
            <summary> 
            点線のパターンを設定する 
            </summary> 
            <param name="onoff">ONO FFのユニット数</param> 
            <param name="sisu">指数(線幅を反映)</param> 
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._ClearLineDash">
            <summary>
            点線の使用を解除する
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._Move(System.Single,System.Single)">
            <summary>
            カレントパスを移動する
            </summary>
            <param name="x">X座標</param>
            <param name="y">Y座標</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._Line(System.Single,System.Single)">
            <summary>
            カレントパスから指定された座標までの直線のパスを作成する
            </summary>
            <param name="x">X座標</param>
            <param name="y">Y座標</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._CubicBezier(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            カレントパスを視点とする４次のBezier曲線のパスを作成する
            </summary>
            <param name="x1"></param>
            <param name="y1"></param>
            <param name="x2"></param>
            <param name="y2"></param>
            <param name="x3"></param>
            <param name="y3"></param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._Stroke">
            <summary>
            パスをStrokeする
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._Fill">
            <summary>
            パスをFillする
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._Close">
            <summary>
            パスをCloseする
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._StatePush">
            <summary>
            現在の描画状態をGraphics State Stackに積んでセーブする
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._StatePop">
            <summary>
            Graphics State StackからGraphics Stateを取り出し、Graphics Stateを戻す
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._RectanglePath(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            矩形のパスを作成する
            </summary>
            <param name="x">矩形の左上のX座標</param>
            <param name="y">矩形の左上のY座標</param>
            <param name="width">矩形の幅</param>
            <param name="height">矩形の高さ</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._OvalPath(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            楕円のパスを作成する
            </summary>
            <param name="ix">楕円をカバーする矩形の点のX座標</param>
            <param name="iy">楕円をカバーする矩形の点のY座標</param>
            <param name="width">矩形の幅</param>
            <param name="height">矩形の高さ</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._PolyLinePath(Pao.Reports.Linux.PointF[])">
            <summary>
            X座標とY座標の配列で定義された連続して接続する直線のパスを作成する
            </summary>
            <param name="points">描画する点の配列</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._DrawGraphicsPath(Pao.Reports.Linux.GraphicsPath)">
            <summary>
            指定されたパスを描画する
            </summary>
            <param name="path">描画するGraphicsPath</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._SetBackground(Pao.Reports.Linux.Color)">
            <summary>
            背景色を設定する
            </summary>
            <param name="color">背景色</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._SetForeground(Pao.Reports.Linux.Color)">
            <summary>
            前景色を設定する
            </summary>
            <param name="color">前景色</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._BeginText(Pao.Reports.Pdf.PdfFont)">
            <summary>
            テキストを開始する
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._EndText">
            <summary>
            テキストを終了する
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._SelectFont(Pao.Reports.Linux.Font)">
            <summary>
            .NETのFontオブジェクトに対応するPdfFontを取得する
            </summary>
            <param name="font">.NETのFontオブジェクト</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents._StringWidth(System.String,Pao.Reports.Pdf.PdfFont)">
            <summary>
            文字列の有効幅を返す
            </summary>
            <param name="str">検査される文字列</param>
            <param name="font">有効幅の計算に指定するフォント</param>
            <returns>文字列の有効幅</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.ToString">
            <summary>
            オブジェクトの文字列表現を取得する
            </summary>
            <returns>オブジェクトの文字列表現</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.Write(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            オブジェクトを出力する
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.FormatPrint(System.Single)">
            <summary>
            Format出力
            </summary>
            <param name="f"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Pdf.Contents.ToHexString(System.String)">
            <summary>
            文字列を１６進数に変換する
            </summary>
            <param name="value">変換する文字列</param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.Pdf.Courier">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Courier.COURIER">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Courier.#ctor">
            <summary>
            TimesRomanクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.CourierBold">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.CourierBold.COURIER_BOLD">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.CourierBold.#ctor">
            <summary>
            TimesRomanクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.CourierItalic">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.CourierItalic.COURIER_ITALIC">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.CourierItalic.#ctor">
            <summary>
            TimesRomanクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.CourierBoldItalic">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.CourierBoldItalic.COURIER_BOLD_ITALIC">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.CourierBoldItalic.#ctor">
            <summary>
            TimesRomanクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.Dictionary">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Dictionary.TYPE">
            <summary>
            Typeの登録キー
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Dictionary.#ctor">
            <summary>
            Dictionaryクラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Dictionary.Put(System.Object,System.Object)">
            <summary>
            指定されたkeyを指定された値にマップする。
            </summary>
            <param name="key">ハッシュテーブルのキー</param>
            <param name="value">値</param>
            <returns>ハッシュテーブルの指定されたキーの前の値。それがない場合は null</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.Dictionary.Write(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            オブジェクトを出力する。
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Dictionary.ToString">
            <summary>
            オブジェクトの文字列表現を返す。
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.Pdf.Document">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Document.xref_">
            <summary>
            Cross-Reference Table
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Document.trailer_">
            <summary>
            File Trailer
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Document.objectNumber_">
            <summary>
            登録されたオブジェクトの数を管理する
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Document.catalog_">
            <summary>
            DocumentのCatalog オブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Document.rootPages_">
            <summary>
            DocumentのRoot Node オブジェクト
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Document.#ctor">
            <summary>
            Documentクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.Document.Catalog">
            <summary>
            Catalogを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.Document.RootPages">
            <summary>
            Root NodeとなるPage Treeを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.Document.Xref">
            <summary>
            相互参照を示す
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Document.CreatePage(Pao.Reports.Pdf.PdfRectangle)">
            <summary>
            Pageを作成する
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Pdf.Document.AddFont(Pao.Reports.Pdf.PdfFont)">
            <summary>
            Font辞書を追加する
            </summary>
            <param name="font">追加するFont辞書</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Document.Add(System.Object)">
            <summary>
            Indirect Objectを追加する
            </summary>
            <param name="value">PDF Object</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Pdf.Document.AddPage(Pao.Reports.Pdf.Page)">
            <summary>
            Pageを追加する
            </summary>
            <param name="page">追加するPage</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Document.Write(System.IO.Stream,System.String)">
            <summary>
            オブジェクトを出力する
            </summary>
            <param name="stream">出力ストリーム</param>
            <param name="pdfFileName">PDFファイル名</param>
            
        </member>
        <member name="T:Pao.Reports.Pdf.FontDescriptor">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.FONTDESCRIPTOR">
            <summary>
            Type登録時のName
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.ASCENT">
            <summary>
            Ascentの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.CAPHEIGHT">
            <summary>
            CapHeightの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.DESCENT">
            <summary>
            Descentの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.FLAGS">
            <summary>
            Flagsの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.FONTBBOX">
            <summary>
            FontBBoxの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.FONTNAME">
            <summary>
            FontNameの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.ITALICANGLE">
            <summary>
            ItalicAngleの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.STEMV">
            <summary>
            StemVの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.AVGWIDTH">
            <summary>
            AvgWidthの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.FONTFILE">
            <summary>
            FontFileの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.FONTFILE2">
            <summary>
            FontFile2の登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.FONTFILE3">
            <summary>
            FontFile3の登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.LEADING">
            <summary>
            Leadingの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.MAXWIDTH">
            <summary>
            MaxWidthの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.MISSINGWIDTH">
            <summary>
            MissingWidthの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.STEMH">
            <summary>
            StemHの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.XHEIGHT">
            <summary>
            XHeightの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.FONTWEIGHT">
            <summary>
            FontWeightの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.LANG">
            <summary>
            Langの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.FD">
            <summary>
            FDの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.CIDSET">
            <summary>
            CIDSetの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.FontDescriptor.dict_">
            <summary>
            FontDescriptorが持つDictionary
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.FontDescriptor.#ctor">
            <summary>
            FontDescriptorクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.Ascent">
            <summary>
            Ascentを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.CapHeight">
            <summary>
            CapHeightを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.Descent">
            <summary>
            Descentを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.Flags">
            <summary>
            Flagsを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.FontBBox">
            <summary>
            FontBBoxを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.FontName">
            <summary>
            FontNameを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.ItalicAngle">
            <summary>
            ItalicAngleを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.StemV">
            <summary>
            StemVを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.AvgWidth">
            <summary>
            AvgWidthを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.Leading">
            <summary>
            Leadingを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.MaxWidth">
            <summary>
            MaxWidthを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.MissingWidth">
            <summary>
            MissingWidthを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.StemH">
            <summary>
            StemHを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.XHeight">
            <summary>
            XHeightを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.FontWeight">
            <summary>
            FontWeightを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.FontDescriptor.Lang">
            <summary>
            Langを示す
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.FontDescriptor.ToString">
            <summary>
            オブジェクトの文字列表現を返す
            </summary>
            <returns>オブジェクトの文字列表現</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.FontDescriptor.Write(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            オブジェクトを出力する
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="T:Pao.Reports.Pdf.HeiseiKakuGothicW5">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.HeiseiKakuGothicW5.HEISEIKAKUGOTHIC_W5">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.HeiseiKakuGothicW5.#ctor">
            <summary>
            HeiseiKakuGothicW5クラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.HeiseiMinchoW3">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.HeiseiMinchoW3.HEISEIMINCHO_W3">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.HeiseiMinchoW3.#ctor">
            <summary>
            HeiseiMinchoW3クラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.IndirectObject">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.IndirectObject.objectNumber_">
            <summary>
            オブジェクト番号
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.IndirectObject.generationNumber_">
            <summary>
            生成番号
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.IndirectObject.#ctor">
            <summary>
            IndirectObjectクラスの新しいインスタンスを初期化する。
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.IndirectObject.ObjectNumber">
            <summary>
            オブジェクト番号を示す。
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.IndirectObject.GenerationNumber">
            <summary>
            生成番号を示す。
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.IndirectObject.GetReference">
            <summary>
            referenceを返す
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Pdf.IndirectObject.StartObject(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            Objectの記述の開始
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="M:Pao.Reports.Pdf.IndirectObject.EndObject(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            Objectの記述の終了
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="M:Pao.Reports.Pdf.IndirectObject.Write(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            オブジェクトを出力する
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="T:Pao.Reports.Pdf.Name">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Name.name_">
            <summary>
            Nameに設定された文字列
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Name.#ctor(System.String)">
            <summary>
            Nameクラスの新しいインスタンスを初期化する。
            </summary>
            <param name="name">Nameの文字列</param>
        </member>
        <member name="P:Pao.Reports.Pdf.Name.Value">
            <summary>
            オブジェクトに設定されているName
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.Page">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.PAGE">
            <summary>
            Type登録時のName
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.PARENT">
            <summary>
            Parentの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIABOX">
            <summary>
            MediaBoxの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.CONTENTS">
            <summary>
            Contentsの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.RESOURCES">
            <summary>
            Resourcesの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.dict_">
            <summary>
            PageがもつDictionary
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.parent_">
            <summary>
            Pageの Node Tree
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.mediabox_">
            <summary>
            Pageのサイズ
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.document_">
            <summary>
            親となるDocument
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.contents_">
            <summary>
            このPageのContents
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_LETTER">
            <summary>
            Letterサイズ (縦)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_A3">
            <summary>
            A-3サイズ (縦)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_A4">
            <summary>
            A-4サイズ (縦)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_A5">
            <summary>
            A-5サイズ (縦)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_B3">
            <summary>
            B-3サイズ (縦)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_B4">
            <summary>
            B-4サイズ (縦)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_B5">
            <summary>
            B-5サイズ (縦)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_LETTER_LANDSCAPE">
            <summary>
            Letterサイズ (横)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_A3_LANDSCAPE">
            <summary>
            A-3サイズ (横)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_A4_LANDSCAPE">
            <summary>
            A-4サイズ (横)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_A5_LANDSCAPE">
            <summary>
            A-5サイズ (横)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_B3_LANDSCAPE">
            <summary>
            B-3サイズ (横)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_B4_LANDSCAPE">
            <summary>
            B-4サイズ (横)
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Page.MEDIA_B5_LANDSCAPE">
            <summary>
            B-5サイズ (横)
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Page.#ctor(Pao.Reports.Pdf.Document,Pao.Reports.Pdf.PdfRectangle)">
            <summary>
            Pageクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.Page.Parent">
            <summary>
            このPageのPage Nodeを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.Page.Mediabox">
            <summary>
            Pageのサイズを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.Page.Contents">
            <summary>
            PageのContentsを示す
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Page.Write(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            オブジェクトを出力する
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="T:Pao.Reports.Pdf.Pages">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Pages.PAGES">
            <summary>
            Type登録時のName
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Pages.COUNT">
            <summary>
            Countの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Pages.KIDS">
            <summary>
            Kidsの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Pages.dict_">
            <summary>
            PagesがもつDictionary
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Pages.kidsList_">
            <summary>
            子となるPage Nodeのリスト
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Pages.document_">
            <summary>
            親となるDocument
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Pages.#ctor(Pao.Reports.Pdf.Document)">
            <summary>
            Documentクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.Pages.Count">
            <summary>
            このノード以下のPage数を示す
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Pages.AddPage(Pao.Reports.Pdf.Page)">
            <summary>
            PageをこのNodeni追加する
            </summary>
            <param name="page">追加するPage</param>
        </member>
        <member name="M:Pao.Reports.Pdf.Pages.Write(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            オブジェクトを出力する
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="T:Pao.Reports.Pdf.PdfArray">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfArray.#ctor">
            <summary>
            PdfArrayクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfArray.ToString">
            <summary>
            オブジェクトの文字列表現を返す。
            </summary>
            <returns>オブジェクトの文字列表現</returns>
        </member>
        <member name="T:Pao.Reports.Pdf.PdfEncoding">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfEncoding.DIFFERENCES">
            <summary>
            Differencesの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfEncoding.ENCODING">
            <summary>
            Type登録時のName
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfEncoding.firstChar_">
            <summary>
            FirstChar
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfEncoding.lastChar_">
            <summary>
            LastChar
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfEncoding.document_">
            <summary>
            PdfEncodingが属するDocument
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfEncoding.charProcs_">
            <summary>
            CharProcsのリスト
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfEncoding.widths_">
            <summary>
            Widths
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfEncoding.differences_">
            <summary>
            differences のArray
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfEncoding.#ctor(Pao.Reports.Pdf.Document)">
            <summary>
            PdfEncodingクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfEncoding.Differences">
            <summary>
            Differencesを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfEncoding.CharProcs">
            <summary>
            CharProcsを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfEncoding.Widths">
            <summary>
            Widthsを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfEncoding.FirstChar">
            <summary>
            FirstCharを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfEncoding.LastChar">
            <summary>
            LastCharを示す
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfEncoding.Init">
            <summary>
            現状の登録を反映して状態を設定する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.PdfEnglishFont">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfEnglishFont.fonts_">
            <summary>
            各Fontの実体
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfEnglishFont.#ctor">
            <summary>
            PdfJapaneseFontクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfEnglishFont.EFont.baseFontName_">
            <summary>
            各FontのBase Font Name
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfEnglishFont.EFont.ttFont_">
            <summary>
            各FontのDescendant FontとなるTrueTypeFont
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfEnglishFont.EFont.#ctor(System.Int32)">
            <summary>
            JFontクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.PdfFont">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.TYPE0">
            <summary>
            Type0フォント
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.TYPE1">
            <summary>
            Type1フォント
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.MMTYPE1">
            <summary>
            MMType1フォント
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.TRUETYPE">
            <summary>
            TrueTypeフォント
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.CIDFONTTYPE0">
            <summary>
            CIDFontType0フォント
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.CIDFONTTYPE2">
            <summary>
            CIDFontType2フォント
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.SUBTYPE">
            <summary>
            Subtypeの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.FONTNAME">
            <summary>
            Nameの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.BASEFONT">
            <summary>
            BaseFontの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.FIRSTCHAR">
            <summary>
            FirstCharの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.LASTCHAR">
            <summary>
            LastCharの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.WIDTHS">
            <summary>
            Widthsの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.FONTDESCRIPTOR">
            <summary>
            FontDescriptorの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.ENCODING">
            <summary>
            Encodingの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.TOUNICODE">
            <summary>
            ToUnicodeの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.DESCENDANTFONTS">
            <summary>
            DescendantFontの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.CHARPROCS">
            <summary>
            CharProcsの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.FONTBBOX">
            <summary>
            FontBBoxの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.FONTMATRIX">
            <summary>
            Fontmatrixの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.FONT">
            <summary>
            Type登録時のName
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.dict_">
            <summary>
            Fontが持つDictionary
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.fontDescriptor_">
            <summary>
            FontDescriptor
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.encoding_">
            <summary>
            Encoding
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.descendantFontList_">
            <summary>
            DescendantFontのリスト
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.descendantFontListTTF_">
            <summary>
            DescendantFontTTFのリスト
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfFont.size_">
            <summary>
            Fontのサイズ
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfFont.#ctor">
            <summary>
            PdfFontクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.SubType">
            <summary>
            Subtypeを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.Name">
            <summary>
            Nameを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.BaseFont">
            <summary>
            BaseFontを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.FirstChar">
            <summary>
            FirstCharを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.LastChar">
            <summary>
            LastCharを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.Widths">
            <summary>
            Widthsを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.FontDescriptor">
            <summary>
            FontDescriptorを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.EncodingName">
            <summary>
            Encoding名を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.Encoding">
            <summary>
            PdfEncodingを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.Size">
            <summary>
            フォントサイズを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.DescendantFont">
            <summary>
            DescendantFontを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.DescendantFonts">
            <summary>
            DescendantFontsリストを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.DescendantFontTTF">
            <summary>
            DescendantFont(TTF)を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.FontBBox">
            <summary>
            FontBBoxを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.FontMatrix">
            <summary>
            FontMatrixを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.Ascent">
            <summary>
            このFontのアセントを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfFont.Descent">
            <summary>
            このFontのディセントを示す
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfFont.ToString">
            <summary>
            オブジェクトの文字列表現を返す
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfFont.Equals(System.Object)">
            <summary>
            このオブジェクトと他のオブジェクトが等しいかどうか示す。
            </summary>
            <param name="obj">比較対照の参照オブジェクト</param>
            <returns>等しい場合はtrue、そうでない場合はfalse</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfFont.GetHashCode">
            <summary>
            オブジェクトのハッシュコードを返す
            </summary>
            <returns>このオブジェクトのハッシュコード</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfFont.StringWidth(System.String)">
            <summary>
            文字列の有効幅を返す
            </summary>
            <param name="str">検査される文字列</param>
            <returns>文字列の有効幅</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfFont.CharWidth(System.Char)">
            <summary>
            文字の有効幅を返す
            </summary>
            <param name="ch">検査される文字</param>
            <returns>文字の有効幅</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfFont.Write(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            オブジェクトを出力する
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="T:Pao.Reports.Pdf.PdfImage">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.SUBTYPE">
            <summary>
            Subtypeの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.WIDTH">
            <summary>
            Widthの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.HEIGHT">
            <summary>
            Heightの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.COLORSPACE">
            <summary>
            ColorSpaceの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.BITSPERCOMPONENT">
            <summary>
            BitsPerComponentの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.LENGTH">
            <summary>
            Lengthの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.FILTER">
            <summary>
            Filterの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.XOBJECT">
            <summary>
            Type登録時のName
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.IMAGE">
            <summary>
            Subtype登録時のName
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.Separation">
            <summary>
            Separation
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.CALGRAY">
            <summary>
            CalGray
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.DEVICEGRAY">
            <summary>
            DeviceGray
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.DEVICERGB">
            <summary>
            DeviceRGB
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.FLATEDECODE">
            <summary>
            FlateDecode
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.DCTDECODE">
            <summary>
            DCTDecode
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.dict_">
            <summary>
            ImageがもつDictionary
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.stream_">
            <summary>
            ImageがもつStream
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.name_">
            <summary>
            ImageのName
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.width_">
            <summary>
            Imageの幅
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.height_">
            <summary>
            Imageの高さ
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.alphaMaskStream_">
            <summary>
            アルファマスクデータのストリーム
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.alphaMaskDict_">
            <summary>
            アルファマスクの辞書
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.hasAlphaMask_">
            <summary>
            アルファマスクを持っているかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfImage.AlphaMaskStream">
            <summary>
            アルファマスクデータのストリーム
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfImage.AlphaMaskDict">
            <summary>
            アルファマスクの辞書
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfImage.HasAlphaMask">
            <summary>
            アルファマスクを持っているかどうか
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfImage.#ctor">
            <summary>
            PdfImageクラスの新しいインスタンスを構築する
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfImage.Name">
            <summary>
            Nameを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfImage.Width">
            <summary>
            Imageオリジナルの幅を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfImage.Height">
            <summary>
            Imageオリジナルの高さを示す
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfImage.Equals(System.Object)">
            <summary>
            このオブジェクトと他のオブジェクトが等しいかどうか示す
            </summary>
            <param name="obj">比較対象のオブジェクト</param>
            <returns>等しい場合はtrue、そうでない場合はfalse</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfImage.GetHashCode">
            <summary>
            オブジェクトのハッシュコードを返す
            </summary>
            <returns>オブジェクトのハッシュコード値</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfImage.Write(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            オブジェクトを出力する
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfImage.SetImage(SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32})">
            <summary>
            System.Drawing.Imageを設定する
            </summary>
            <param name="image">設定するImageオブジェクト</param>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfImage.alphaMaskObjectNumber_">
            <summary>
            アルファマスクのオブジェクト番号を保存
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfImage.SetImageWithTransparency(SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32})">
            <summary>
            透過情報を持つ画像をPDFに設定（Linux版）
            </summary>
            <param name="image">透過画像</param>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfImage.CreateAlphaMaskDataLinux(SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32})">
            <summary>
            アルファマスクデータを作成（Linux版）
            </summary>
            <param name="image">元画像</param>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfImage.GetAlphaMask">
            <summary>
            アルファマスクのPdfImageを取得
            </summary>
            <returns>アルファマスク、ない場合はnull</returns>
            <summary>
            アルファマスクのPdfImageを取得
            </summary>
            <returns>アルファマスク、ない場合はnull</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfImage.SetImage_QR(SixLabors.ImageSharp.Image{SixLabors.ImageSharp.PixelFormats.Rgba32})">
            <summary>
            System.Drawing.Imageを設定する
            </summary>
            <param name="image">設定するImageオブジェクト</param>
        </member>
        <member name="T:Pao.Reports.Pdf.PdfJapaneseFont">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfJapaneseFont.HeiseiMinchoW3">
            <summary>
            HeiseiMincho-W3
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfJapaneseFont.HeiseiKakuGothicW5">
            <summary>
            HeiseiKakuGothic-W5
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfJapaneseFont.fonts_">
            <summary>
            各Fontの実体
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfJapaneseFont.#ctor">
            <summary>
            PdfJapaneseFontクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfJapaneseFont.JFont.HeiseiMinchoW3">
            <summary>
            HeiseiMincho-W3
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfJapaneseFont.JFont.HeiseiKakuGothicW5">
            <summary>
            HeiseiKakuGothic-W5
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfJapaneseFont.JFont.baseFontName_">
            <summary>
            各FontのBase Font Name
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfJapaneseFont.JFont.cidFont_">
            <summary>
            各FontのDescendant FontとなるCIDFont
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfJapaneseFont.JFont.#ctor(System.Int32)">
            <summary>
            JFontクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.PdfOutputStream">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfOutputStream.#ctor">
            <summary>
            PdfOutputStreamクラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfOutputStream.#ctor(System.String)">
            <summary>
            PdfOutputStream FileStreamの場合
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfOutputStream.Write(System.String)">
            <summary>
            指定された値をストリームに書き込む
            </summary>
            <param name="value">ストリームに書き込む値</param>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfOutputStream.Write(System.String,System.Object)">
            <summary>
            指定された書式を指定されたobjectインスタンスの値と等価のテキストに置換しストリームに出力する
            </summary>
            <param name="format">書式</param>
            <param name="value">書式対象のオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfOutputStream.Write(System.String,System.Object[])">
            <summary>
            指定された書式を指定された配列内の対応するobjectインスタンスの値と等価のテキストに置換しストリームに出力する
            </summary>
            <param name="format">書式</param>
            <param name="values">書式対象のオブジェクトを含んだ配列</param>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfOutputStream.WriteLine(System.String)">
            <summary>
            指定された値をストリームに書き込む
            </summary>
            <param name="value">ストリームに書き込む値</param>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfOutputStream.WriteLine(System.String,System.Object)">
            <summary>
            指定された書式を指定されたobjectインスタンスの値と等価のテキストに置換しストリームに出力する
            </summary>
            <param name="format">書式</param>
            <param name="value">書式対象のオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfOutputStream.WriteLine(System.String,System.Object[])">
            <summary>
            指定された書式を指定された配列内の対応するobjectインスタンスの値と等価のテキストに置換しストリームに出力する
            </summary>
            <param name="format">書式</param>
            <param name="values">書式対象のオブジェクトを含んだ配列</param>
        </member>
        <member name="T:Pao.Reports.Pdf.PdfRectangle">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfRectangle.left_">
            <summary>
            左上のX座標
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfRectangle.top_">
            <summary>
            左上のY座標
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfRectangle.right_">
            <summary>
            右下のX座標
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfRectangle.bottom_">
            <summary>
            右下のY座標
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfRectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            PdfRectangleクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfRectangle.Left">
            <summary>
            左上のX座標を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfRectangle.Top">
            <summary>
            左上のY座標を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfRectangle.Right">
            <summary>
            右下のX座標を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfRectangle.Bottom">
            <summary>
            右下のY座標を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfRectangle.Width">
            <summary>
            幅を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.PdfRectangle.Height">
            <summary>
            高さを示す
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfRectangle.ToString">
            <summary>
            オブジェクトの文字列表現を返す
            </summary>
            <returns>オブジェクトの文字列表現</returns>
        </member>
        <member name="T:Pao.Reports.Pdf.PdfResources">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.PROCSET">
            <summary>
            ProcSetの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.EXTGSTATE">
            <summary>
            ExtGState
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.GS1">
            <summary>
            GS1
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.FONT">
            <summary>
            Fontの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.XOBJECT">
            <summary>
            XObjectの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.dict_">
            <summary>
            このResourcesが持つDictionary
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.fontList_">
            <summary>
            Font Dictionary用リスト
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.fontDictionary_">
            <summary>
            Font Dictionary
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.xObjectDictionary_">
            <summary>
            XObject Dictionary
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.procSet_">
            <summary>
            ProcSet
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.PDF">
            <summary>
            ProcSetにおけるPDF プロシージャの定義
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.TEXT">
            <summary>
            ProcSetにおけるText プロシージャの定義
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.IMAGE_B">
            <summary>
            ProcSetにおけるImageB プロシージャの定義
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.IMAGE_C">
            <summary>
            ProcSetにおけるImageC プロシージャの定義
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.PdfResources.IMAGE_I">
            <summary>
            ProcSetにおけるImageI プロシージャの定義
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfResources.#ctor">
            <summary>
            PdfResourcesクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfResources.AddFont(Pao.Reports.Pdf.PdfFont)">
            <summary>
            リソースとしてFontを追加する
            </summary>
            <param name="font">追加するFont</param>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfResources.AddImage(Pao.Reports.Pdf.PdfImage)">
            <summary>
            リソースとしてImageを追加する
            </summary>
            <param name="image">追加するImage</param>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfResources.UseText">
            <summary>
            リソースとしてTextを使う
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfResources.UseImageB">
            <summary>
            リソースとしてImageBを使う
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfResources.UseImageC">
            <summary>
            リソースとしてImageCを使う
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfResources.UseImageI">
            <summary>
            リソースとしてImageIを使う
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfResources.ToString">
            <summary>
            オブジェクトの文字列表現を返す
            </summary>
            <returns>オブジェクトの文字列表現</returns>
        </member>
        <member name="M:Pao.Reports.Pdf.PdfResources.Write(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            オブジェクトを出力する
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="T:Pao.Reports.Pdf.Reference">
            <summary>
            Reference の概要の説明です。
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Reference.EOL">
            <summary>
            Referenceの改行は必ずCR+LF
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Reference.IN_USE_ENTRY">
            <summary>
            使用する
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Reference.FREE_ENTRY">
            <summary>
            フリー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Reference.inUse_">
            <summary>
            使用するか否か
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Reference.generationNumber_">
            <summary>
            生成番号
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Reference.offset_">
            <summary>
            オフセット値
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Reference.#ctor(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Referenceクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Reference.ToString">
            <summary>
            オブジェクトの文字列表現を返す
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.Pdf.TimesRoman">
            <summary>
            NORMAL
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.TimesRoman.TIMES_ROMAN">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.TimesRoman.#ctor">
            <summary>
            TimesRomanクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.TimesRomanBold">
            <summary>
            BOLD
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.TimesRomanBold.TIMES_ROMAN_BOLD">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.TimesRomanBold.#ctor">
            <summary>
            TimesRomanクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.TimesRomanItalic">
            <summary>
            ITALIC
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.TimesRomanItalic.TIMES_ROMAN_ITALIC">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.TimesRomanItalic.#ctor">
            <summary>
            TimesRomanクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.TimesRomanBoldItalic">
            <summary>
            BOLD ITALIC
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.TimesRomanBoldItalic.TIMES_ROMAN_BOLD_ITALIC">
            <summary>
            BaseFontの名前
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.TimesRomanBoldItalic.#ctor">
            <summary>
            TimesRomanクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.Trailer">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Trailer.offdetOfLastXref_">
            <summary>
            相互参照のバイトオフセット
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Trailer.dict_">
            <summary>
            TrailerがもつDictionary
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Trailer.SIZE">
            <summary>
            Sizeの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Trailer.PREV">
            <summary>
            Prevの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.Trailer.ROOT">
            <summary>
            Rootの登録キー
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Trailer.#ctor">
            <summary>
            Trailerクラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.Trailer.Size">
            <summary>
            Sizeを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.Trailer.Prev">
            <summary>
            Prevを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.Trailer.Root">
            <summary>
            DocumentのRootとなるCatalogオブジェクトを示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.Trailer.OffsetOfLastXref">
            <summary>
            最新の相互参照のオフセットを示す
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Trailer.ToString">
            <summary>
            オブジェクトの文字列表現を返す
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Pdf.Trailer.Write(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            オブジェクトを出力する
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="T:Pao.Reports.Pdf.TTFont">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.TTFont.DW_KEY">
            <summary>
            DWの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.TTFont.W_KEY">
            <summary>
            Wの登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.TTFont.DW2_KEY">
            <summary>
            DW2の登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.TTFont.W2_KEY">
            <summary>
            W2の登録キー
            </summary>
        </member>
        <member name="F:Pao.Reports.Pdf.TTFont.CIDTOGIDMAP">
            <summary>
            CIDToGIDMapの登録キー
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.TTFont.#ctor">
            <summary>
            CIDFontクラスの新しいインスタンスを初期化する
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.TTFont.DW">
            <summary>
            DW(=default width)を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.TTFont.W">
            <summary>
            W(=widths for individual CIDs)を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.TTFont.DW2">
            <summary>
            DW2を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.TTFont.W2">
            <summary>
            W2を示す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.TTFont.Ascent">
            <summary>
            このFontのアセントを返す
            </summary>
        </member>
        <member name="P:Pao.Reports.Pdf.TTFont.Descent">
            <summary>
            このFontのディセントを返す
            </summary>
        </member>
        <member name="T:Pao.Reports.Pdf.Xref">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Xref.#ctor">
            <summary>
            Xrefクラスの新しいインスタンスを初期化します。
            </summary>
        </member>
        <member name="M:Pao.Reports.Pdf.Xref.Write(Pao.Reports.Pdf.PdfOutputStream)">
            <summary>
            オブジェクトを出力する
            </summary>
            <param name="ps">出力ストリーム</param>
        </member>
        <member name="T:Pao.Reports.Pdf.ZipUtil">
            <summary>
            
            </summary>
        </member>
        <member name="T:Pao.Reports.IAlignType">
            <summary>
            文字横位置
            </summary>
        </member>
        <member name="P:Pao.Reports.IAlignType.Name">
            <summary>
            文字横位置名
            </summary>
        </member>
        <member name="T:Pao.Reports.PmAlignType">
            <summary>
            横位置を表す列挙型
            </summary>
        </member>
        <member name="F:Pao.Reports.PmAlignType.Left">
            <summary>
            左寄せ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmAlignType.Center">
            <summary>
            中央寄せ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmAlignType.Right">
            <summary>
            右寄せ
            </summary>
        </member>
        <member name="P:Pao.Reports.PmAlignType.Name">
            <summary>
            文字位置名
            </summary>
        </member>
        <member name="M:Pao.Reports.PmAlignType.#ctor(System.String,Pao.Reports.Linux.StringAlignment)">
            <summary>
            プライベートコンストラクタ
            </summary>
            <param name="name"></param>
            <param name="sa"></param>
        </member>
        <member name="M:Pao.Reports.PmAlignType.FromString(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmBarcodeType">
            <summary>
            バーコードの種類を表す列挙型
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.JAN13">
            <summary>
            JAN13
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.JAN8">
            <summary>
            JAN8
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.UPC_A">
            <summary>
            UPC-A
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.UPC_E">
            <summary>
            UPC-B
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.ITF">
            <summary>
            ITF
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.Matrix2of5">
            <summary>
            Matrix 2of5
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.NEC2of5">
            <summary>
            NEC 2of5
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.NW7">
            <summary>
            NW7
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.Code39">
            <summary>
            CODE39
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.Code93">
            <summary>
            CODE93
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.Code128">
            <summary>
            CODE128
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.UCCEAN128">
            <summary>
            EAN128
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.GS1_128">
            <summary>
            GS1 128
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.DataMatrix">
            <summary>
            DataMatrix
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.Pdf417">
            <summary>
            PDF417
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.Databar14Omni">
            <summary>
            GS1 Databar (RSS) 14 Omini-directional
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.Databar14Stacked">
            <summary>
            GS1 Databar (RSS) 14 Stacked
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.Databar14StackedOmni">
            <summary>
            GS1 Databar (RSS) 14 Stacked Omini-directional
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.DatabarLimited">
            <summary>
            GS1 Databar (RSS) Limited
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.DatabarExpanded">
            <summary>
            GS1 Databar (RSS) Expanded
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.DatabarExpandedStacked">
            <summary>
            GS1 Databar (RSS) Expanded Stacked
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.Post">
            <summary>
            郵便カスタマバーコード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.QRCode">
            <summary>
            QRコード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmBarcodeType.Convi">
            <summary>
            コンビニバーコード
            </summary>
        </member>
        <member name="P:Pao.Reports.PmBarcodeType.Name">
            <summary>
            バーコードの種類名
            </summary>
        </member>
        <member name="M:Pao.Reports.PmBarcodeType.FromString(System.String)">
            <summary>
            指定された文字列をPmBarcodeTypeに変換する
            </summary>
            <param name="value">変換する文字列</param>
            <return></return>
        </member>
        <member name="T:Pao.Reports.PmCornerPos">
            <summary>
            四角形の角の位置を表す列挙型
            </summary>
        </member>
        <member name="F:Pao.Reports.PmCornerPos.TL">
            <summary>
            左上
            </summary>
        </member>
        <member name="F:Pao.Reports.PmCornerPos.TR">
            <summary>
            右上
            </summary>
        </member>
        <member name="F:Pao.Reports.PmCornerPos.BL">
            <summary>
            左下
            </summary>
        </member>
        <member name="F:Pao.Reports.PmCornerPos.BR">
            <summary>
            右下
            </summary>
        </member>
        <member name="M:Pao.Reports.PmCornerPos.FromString(System.String)">
            <summary>
            指定された文字列をPmCornerPosに変換する
            </summary>
            <param name="name">変換する文字列</param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmCornerType">
            <summary>
            四角形の角の状態を表す列挙型
            </summary>
        </member>
        <member name="F:Pao.Reports.PmCornerType.Angle">
            <summary>
            直角
            </summary>
        </member>
        <member name="F:Pao.Reports.PmCornerType.Round">
            <summary>
            丸
            </summary>
        </member>
        <member name="T:Pao.Reports.PmDataInput">
            <summary>
            XML形式の印刷データを読込み、印刷オブジェクトを作成するクラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDataInput.pages_">
            <summary>
            PmPageオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDataInput.editPage_">
            <summary>
            現在編集中のページ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDataInput.invalid_">
            <summary>
            無効なデータの場合trueとする
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDataInput.Pages">
            <summary>
            印刷データ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDataInput.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDataInput.Load(System.IO.Stream)">
            <summary>
            印刷データを読み込む
            </summary>
            <param name="stream">読み込むストリーム</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDataInput.Load(System.Xml.XmlDocument)">
            <summary>
            印刷データを読込む
            </summary>
            <param name="doc">読込むデータ</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmDataInput._Dispatch(System.Xml.XmlTextReader)">
            <summary>
            XMLノードから印刷オブジェクトを作成する
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDataInput._DispatchCustom(System.Xml.XmlTextReader)">
            <summary>
            拡張用のDispathメソッド
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmDataInput._SetDynamic(System.Xml.XmlTextReader)">
            <summary>
            動的値を読込み、PmPageオブジェクトに設定する
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDataInput._SetDynamicAttr(System.Xml.XmlTextReader)">
            <summary>
            動的属性を読込み、PmPageオブジェクトに設定する
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
        </member>
        <member name="T:Pao.Reports.PmDataOutput">
            <summary>
            印刷データをXML形式で出力する。
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDataOutput.oldDefineName_">
            <summary>
            前回出力した帳票定義体名を保持する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDataOutput.page_">
            <summary>
            出力ページ数
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.#ctor(System.String)">
            <summary>
            指定されたファイル名に印刷データをXML形式で出力するPmDataOutputオブジェクトを構築する。
            </summary>
            <param name="filename">出力ファイル名</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.#ctor(System.IO.Stream)">
            <summary>
            指定されたストリームに印刷データをXML形式で出力するPmDataOutputオブジェクトを構築する。
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput._Open">
            <summary>
            出力ファイルを開く。
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDataOutput._Close">
            <summary>
            開いているファイルを閉じる
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDataOutput._Conv(Pao.Reports.PmDynamicValue)">
            <summary>
            PmDynamicValueオブジェクトを文字列に変換する。
            </summary>
            <param name="obj">変換するPmDynamicValueオブジェクト</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteImageData(System.String)">
            <summary>
            画像イメージを出力する
            </summary>
            <param name="data">画像へのパス又はBASE64データ</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput._Start">
            <summary>
            出力を開始する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDataOutput._End">
            <summary>
            出力を終了する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDataOutput._PageStart(Pao.Reports.IPrintPage)">
            <summary>
            １ページの出力を開始する
            </summary>
            <param name="page">印刷データオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput._PageEnd">
            <summary>
            １ページの出力を終了する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDataOutput._WriteDefine(Pao.Reports.PmDefine)">
            <summary>
            帳票定義体を出力する
            </summary>
            <param name="define">出力する帳票定義体</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput._WriteDynamicAttr(Pao.Reports.PmDefine)">
            <summary>
            ZObj情報を出力する
            </summary>
            <param name="define">出力する帳票定義体</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteStartElement(Pao.Reports.PmXmlNode)">
            <summary>
            開始ノードを出力する
            </summary>
            <param name="node">ノードを表すPmXmlNodeオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteStartElementln(Pao.Reports.PmXmlNode)">
            <summary>
            開始ノードを出力する
            </summary>
            <param name="node">ノードを表すPmXmlNodeオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteEndElement(Pao.Reports.PmXmlNode)">
            <summary>
            終了ノードを出力する
            </summary>
            <param name="node">ノードを表すPmXmlNodeオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteEndElementln">
            <summary>
            終了ノードを出力する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteAttribute(Pao.Reports.PmXmlAttr,System.String)">
            <summary>
            属性を出力する
            </summary>
            <param name="attr">属性をあらわすPmXmlAttrオブジェクト</param>
            <param name="value">出力する文字列</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteAttribute(Pao.Reports.PmXmlAttr,System.Int64)">
            <summary>
            属性を出力する
            </summary>
            <param name="attr">属性をあらわすPmXmlAttrオブジェクト</param>
            <param name="value">出力する整数</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteAttribute(Pao.Reports.PmXmlAttr,System.Single)">
            <summary>
            属性を出力する
            </summary>
            <param name="attr">属性をあらわすPmXmlAttrオブジェクト</param>
            <param name="value">出力する浮動小数点数</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteAttribute(Pao.Reports.PmXmlAttr,System.Boolean)">
            <summary>
            属性を出力する
            </summary>
            <param name="attr">属性をあらわすPmXmlAttrオブジェクト</param>
            <param name="value">出力する整数</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteStartElement(Pao.Reports.PmSvgNode)">
            <summary>
            開始ノードを出力する
            </summary>
            <param name="node">ノードを表すPmSvgNodeオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteStartElementln(Pao.Reports.PmSvgNode)">
            <summary>
            開始ノードを出力する
            </summary>
            <param name="node">ノードを表すPmSvgNodeオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteAttribute(Pao.BarCode.PmSvgAttr,System.String)">
            <summary>
            属性を出力する
            </summary>
            <param name="attr">属性をあらわすPmSvgAttrオブジェクト</param>
            <param name="value">出力する文字列</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteAttribute(Pao.BarCode.PmSvgAttr,System.Int64)">
            <summary>
            属性を出力する
            </summary>
            <param name="attr">属性をあらわすPmSvgAttrオブジェクト</param>
            <param name="value">出力する整数</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteAttribute(Pao.BarCode.PmSvgAttr,System.Single)">
            <summary>
            属性を出力する
            </summary>
            <param name="attr">属性をあらわすPmSvgAttrオブジェクト</param>
            <param name="value">出力する浮動小数点数</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput.WriteAttribute(Pao.BarCode.PmSvgAttr,System.Boolean)">
            <summary>
            属性を出力する
            </summary>
            <param name="attr">属性をあらわすPmSvgAttrオブジェクト</param>
            <param name="value">出力する整数</param>
        </member>
        <member name="M:Pao.Reports.PmDataOutput._WriteCDATA(System.String)">
            <summary>
            現在のノードのCDATAを出力する
            </summary>
            <param name="value">出力するCDATA</param>
        </member>
        <member name="T:Pao.Reports.PmDefArtText">
            <summary>
            文字列定義情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefArtText.text_">
            <summary>
            表示文字列
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefArtText.backColor_">
            <summary>
            背景色
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefArtText.outLineWidth_">
            <summary>
            アウトライン幅
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefArtText.outLineColor_">
            <summary>
            アウトライン色
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefArtText.Text">
            <summary>
            表示文字列
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefArtText.BackColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefArtText.OutLineWidth">
            <summary>
            アウトライン幅
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefArtText.OutLineColor">
            <summary>
            アウトライン色
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefArtText.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefArtText.FromXml(System.Xml.XmlTextReader,Pao.Reports.PmDefine)">
            <summary>
            PmDefTextオブジェクトを作成する。
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <param name="define"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefArtText.DrawDefinition(Pao.Reports.IPrintDraw)">
            <summary>
            定義体の描画
            </summary>
            <param name="draw"></param>
        </member>
        <member name="M:Pao.Reports.PmDefArtText.DrawInstance(Pao.Reports.IPrintDraw)">
            <summary>
            値なしの描画
            </summary>
            <param name="draw"></param>
        </member>
        <member name="M:Pao.Reports.PmDefArtText.DrawInstance(Pao.Reports.IPrintDraw,Pao.Reports.PmDynamicValue)">
            <summary>
            値ありの描画
            </summary>
            <param name="draw"></param>
            <param name="v"></param>
        </member>
        <member name="M:Pao.Reports.PmDefArtText.ConvertToXml(Pao.Reports.PmDataOutput)">
            <summary>
            XML出力        /// </summary>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefArtText.ConvertToXml_DynamicAttr(Pao.Reports.PmDataOutput,System.Int32)">
            <summary>
            XML出力
            </summary>
            <param name="output"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefArtText.ConvertToSvg(Pao.Reports.PmSvgOutput,Pao.Reports.PmDynamicValue)">
            <summary>
            SVG出力
            </summary>
            <param name="output"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmDefBarcode">
            <summary>
            バーコード定義情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefBarcode.kind_">
            <summary>
            バーコードの種類
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefBarcode.code_">
            <summary>
            コード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefBarcode.soeji_">
            <summary>
            添え字を表示するかどうか
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefBarcode.kintou_">
            <summary>
            添え字を均等割付するかどうか
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefBarcode.startStop_">
            <summary>
            スタート・ストップコードを自動付加するかどうか
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefBarcode.codeSetABC_">
            <summary>
            CODE128のコードセット
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefBarcode.kuroBar_">
            <summary>
            黒バー調整
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefBarcode.shiroBar_">
            <summary>
            白バー調整
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefBarcode.writeDirect_">
            <summary>
            直接描画するかどうか
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefBarcode.point_">
            <summary>
            郵便カスタマバーコードのポイント
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.Kind">
            <summary>
            バーコードの種類
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.Code">
            <summary>
            コード
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.Soeji">
            <summary>
            添え字を表示するかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.Kintou">
            <summary>
            添え字を均等割付するかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.StartStop">
            <summary>
            スタート・ストップコードを自動付加するかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.CodeSetABC">
            <summary>
            CODE128のコードセット
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.KuroBar">
            <summary>
            黒バー調整
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.ShiroBar">
            <summary>
            白バー調整
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.WriteDirect">
            <summary>
            直接描画するかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.Point">
            <summary>
            郵便カスタマバーコードのポイント
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.QrVersion">
            <summary>
            QRコードのバージョン
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.QrErrCorrect">
            <summary>
            QRコードのエラー訂正レベル
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.StringEncoding">
            <summary>
            全角文字コード(二次元バーコード)
            Encoding.GetEncoding()の引数は受け付けます。
            例："utf-8" / "shift-jis" / "932" ...等...
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.PDF417_SizeKind">
            <summary>
            データ列数・行数決定方法
            <c>AUTO</c> 自動サイズ(アスペクト比より決定)
            <c>COLUMNS</c> 指定列数に従う
            <c>ROWS</c> 指定行数に従う
            <c>COLUMNS_AND_LOWS</c> 指定列数・行数両方に従う(長方形の最小値)
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.PDF417_CodeRows">
            <summary>
            出力行数指定
            <c>3～90</c>
            SizeKindが出力行数指定の場合＝(自動サイズでない・列数指定でない場合)有効
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.PDF417_CodeColumns">
            <summary>
            出力データカラム数指定
            <c>1～30</c>
            SizeKindが出力列数指定の場合＝(自動サイズでない・行数指定でない場合)有効
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.PDF417_ErrorLevel">
            <summary>
            エラー訂正レベル
            <c>0～8</c>
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.PDF417_UseAutoErrorLevel">
            <summary>
            自動でエラー訂正レベルを決定(する・しない)
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.PDF417_AspectRatio">
            <summary>
            縦横アクセプト比
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefBarcode.DataMatrix_CodeSize">
            <summary>
            シンボル コード サイズ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefBarcode.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefBarcode.FromXml(System.Xml.XmlTextReader,Pao.Reports.PmDefine)">
            <summary>
            PmDefBarcodeオブジェクトを作成する。
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <param name="define"></param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmDefBarcode.ConvertToXml(Pao.Reports.PmDataOutput)">
            <summary>
            XML出力        /// </summary>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefBarcode.ConvertToXml_DynamicAttr(Pao.Reports.PmDataOutput,System.Int32)">
            <summary>
            XML出力(動的属性)
            </summary>
            <param name="output"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefBarcode.ConvertToSvg(Pao.Reports.PmSvgOutput,Pao.Reports.PmDynamicValue)">
            <summary>
            SVG出力        /// </summary>
            <param name="output"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmDefCircle">
            <summary>
            円定義情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefCircle.lineAttr_">
            <summary>
            罫線属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefCircle.paintColor_">
            <summary>
            塗り潰す色
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefCircle.hatchAttr_">
            <summary>
            網掛け属性
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefCircle.LineAttr">
            <summary>
            罫線属性
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefCircle.PaintColor">
            <summary>
            塗り潰しす色
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefCircle.HatchAttr">
            <summary>
            網掛け属性
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefCircle.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefCircle.FromXml(System.Xml.XmlTextReader,Pao.Reports.PmDefine)">
            <summary>
            PmDefCircleオブジェクトを作成する。
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <param name="define"></param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmDefCircle.DrawDefinition(Pao.Reports.IPrintDraw)">
            <summary>
            定義体描画
            </summary>
            <param name="draw"></param>
        </member>
        <member name="M:Pao.Reports.PmDefCircle.DrawInstance(Pao.Reports.IPrintDraw)">
            <summary>
            描画
            </summary>
            <param name="draw"></param>
        </member>
        <member name="M:Pao.Reports.PmDefCircle.DrawInstance(Pao.Reports.IPrintDraw,Pao.Reports.PmDynamicValue)">
            <summary>
            描画
            </summary>
            <param name="draw"></param>
            <param name="v"></param>
        </member>
        <member name="M:Pao.Reports.PmDefCircle.ConvertToXml(Pao.Reports.PmDataOutput)">
            <summary>
            XML出力        /// </summary>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefCircle.ConvertToXml_DynamicAttr(Pao.Reports.PmDataOutput,System.Int32)">
            <summary>
            XML出力(動的属性)
            </summary>
            <param name="output"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefCircle.ConvertToSvg(Pao.Reports.PmSvgOutput,Pao.Reports.PmDynamicValue)">
            <summary>
            SVG出力        /// </summary>
            <param name="output"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmDefFontAttr">
            <summary>
            フォントに対する属性を保持する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefFontAttr.attrName_">
            <summary>
            属性に対する名前
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefFontAttr.name_">
            <summary>
            フォント名
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefFontAttr.size_">
            <summary>
            フォントサイズ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefFontAttr.italic_">
            <summary>
            イタリックの場合にtrue
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefFontAttr.bold_">
            <summary>
            ボールドの場合にtrue
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefFontAttr.color_">
            <summary>
            文字色
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefFontAttr.underLine_">
            <summary>
            アンダーライン
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefFontAttr.strikeout_">
            <summary>
            取消線
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefFontAttr.unit_">
            <summary>
            フォントの高さの単位
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefFontAttr.Name">
            <summary>
            フォント名を取得する。
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefFontAttr.Size">
            <summary>
            フォントサイズ
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefFontAttr.Italic">
            <summary>
            イタリックかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefFontAttr.Bold">
            <summary>
            ボールドかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefFontAttr.Color">
            <summary>
            文字色
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefFontAttr.UnderLine">
            <summary>
            アンダーライン
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefFontAttr.Strikeout">
            <summary>
            取消線
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefFontAttr.UnitString">
            <summary>
            フォントの高さの単位(文字列)
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefFontAttr.Unit">
            <summary>
            フォントの高さの単位
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefFontAttr.AttrName">
            <summary>
            属性名
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefFontAttr.#ctor(System.String,System.String,System.Single,System.Boolean,System.Boolean,Pao.Reports.Linux.Color,System.Boolean,System.Boolean,System.String)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefFontAttr.FromXml(System.Xml.XmlTextReader,Pao.Reports.PmDefine)">
            <summary>
            PmDefFontAttrオブジェクトを作成する
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <param name="define_"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefFontAttr.WriteAttr(Pao.Reports.PmDataOutput)">
            <summary>
            フォント属性情報を出力する
            </summary>
            <param name="pdo">出力するフォント属性情報</param>
        </member>
        <member name="T:Pao.Reports.PmDefHatchAttr">
            <summary>
            網掛けに関する属性を保持する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefHatchAttr.attrName_">
            <summary>
            属性に対する名前
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefHatchAttr.density_">
            <summary>
            網掛けの度合い
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefHatchAttr.Density">
            <summary>
            網掛けの度合い
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefHatchAttr.AttrName">
            <summary>
            属性名
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefHatchAttr.#ctor(System.String,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefHatchAttr.FromXml(System.Xml.XmlTextReader,Pao.Reports.PmDefine)">
            <summary>
            PmDefHatchAttrオブジェクトを作成する
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <param name="define"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefHatchAttr.WriteAttr(Pao.Reports.PmDataOutput)">
            <summary>
            網掛け属性情報を出力する
            </summary>
            <param name="pdo">出力する網掛け属性情報</param>
        </member>
        <member name="T:Pao.Reports.PmDefImage">
            <summary>
            画像定義情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefImage.imageSizeType_">
            <summary>
            画像の拡大・縮小を行う
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefImage.data_">
            <summary>
            パス又はデータ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefImage.align_">
            <summary>
            イメージ位置
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefImage.imageRev_">
            <summary>
            イメージ反転
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefImage.backColor_">
            <summary>
            背景色
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefImage.lineAttr_">
            <summary>
            枠線属性
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefImage.ImageSizeType">
            <summary>
            拡大/縮小を行うかどうか（trueの場合行う）
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefImage.Data">
            <summary>
            データを取得する
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefImage.Align">
            <summary>
            イメージ位置
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefImage.ImageRev">
            <summary>
            イメージ反転
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefImage.BackColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefImage.LineAttr">
            <summary>
            枠線属性
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefImage.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefImage.FromXml(System.Xml.XmlTextReader,Pao.Reports.PmDefine)">
            <summary>
            PmDefImageオブジェクトを作成する。
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <param name="define"></param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmDefImage.ConvertToXml(Pao.Reports.PmDataOutput)">
            <summary>
            XML出力        /// </summary>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefImage.ConvertToXml_DynamicAttr(Pao.Reports.PmDataOutput,System.Int32)">
            <summary>
            XML出力(動的属性)
            </summary>
            <param name="output"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefImage.ConvertToSvg(Pao.Reports.PmSvgOutput,Pao.Reports.PmDynamicValue)">
            <summary>
            SVG出力        /// </summary>
            <param name="output"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmDefine">
            <summary>
            帳票定義体情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefine.setting_">
            <summary>
            印刷設定情報
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefine.attrs_">
            <summary>
            印刷属性情報
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefine.objects_">
            <summary>
            印刷定義情報
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefine.Setting">
            <summary>
            印刷情報
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefine.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefine.AddDefAttr(Pao.Reports.IDefAttr)">
            <summary>
            印刷属性情報を追加する。
            </summary>
            <param name="obj">追加する印刷属性情報</param>
        </member>
        <member name="M:Pao.Reports.PmDefine.AddDefObject(Pao.Reports.PmDefObject)">
            <summary>
            印刷定義情報を追加する。
            </summary>
            <param name="obj">追加する印刷定義情報</param>
        </member>
        <member name="M:Pao.Reports.PmDefine.Traverse(Pao.Reports.IPmVisitor)">
            <summary>
            トラバースする。
            </summary>
            <param name="visitor">トラバースインターフェイス</param>
        </member>
        <member name="M:Pao.Reports.PmDefine.GetAttrObject(System.String)">
            <summary>
            指定された名前を持つ印刷属性定義オブジェクトを取得する
            </summary>
            <param name="name">オブジェクトの名前</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefine.GetDefObject(System.String)">
            <summary>
            指定された名前を持つ印刷情報定義オブジェクトを取得する
            </summary>
            <param name="name">オブジェクトの名前</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefine.GetDefObject(System.Int32)">
            <summary>
            指定された名前を持つ印刷情報定義オブジェクトを取得する
            </summary>
            <param name="index">オブジェクトの名前</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefine.GetAllAttrObject">
            <summary>
            全ての属性情報を取得する
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefine.GetAllDefObject">
            <summary>
            全ての定義情報を取得する
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmDefineInput">
            <summary>
            帳票定義体を読込みPmDefineオブジェクトを構築するクラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefineInput.fileName_">
            <summary>
            ファイル名を保持する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefineInput.define_">
            <summary>
            帳票定義体を保持する
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefineInput.FileName">
            <summary>
            ファイル名
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefineInput.Define">
            <summary>
            PmDefineオブジェクト
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefineInput.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefineInput.Load(System.String)">
            <summary>
            帳票定義体を読込む。
            </summary>
            <param name="filename">帳票定義体のファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmDefineInput.Load(System.IO.Stream)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefineInput._Dispatch(System.Xml.XmlTextReader)">
            <summary>
            XMLノードから印刷オブジェクトを作成する
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefineInput._DispatchCustom(System.Xml.XmlTextReader)">
            <summary>
            拡張用のDispathメソッド
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <return></return>
            <remarks>有効なノードの場合にはtrue、無効なノードはfalseを返す。拡張用のため、無条件にTrueを返す</remarks>
        </member>
        <member name="M:Pao.Reports.PmDefineInput._CreateDefObject(System.Xml.XmlTextReader)">
            <summary>
            印刷オブジェクトを作成する
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDefineInput._CreateDynamicAttr(System.Xml.XmlTextReader)">
            <summary>
            動的属性作成を作成する
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDefineInput._CreateDefAttr(System.Xml.XmlTextReader)">
            <summary>
            印刷属性情報を作成する
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDefineInput._CreateDefHeader(System.Xml.XmlTextReader)">
            <summary>
            PmDefSettingオブジェクトを作成する。
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <return></return>
        </member>
        <member name="T:Pao.Reports.PmDefLine">
            <summary>
            罫線定義情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefLine.endX_">
            <summary>
            終点のX座標
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefLine.endY_">
            <summary>
            終点のY座標
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefLine.lineAttr_">
            <summary>
            罫線属性名
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefLine.thick_">
            <summary>
            円弧の厚み
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefLine.EndX">
            <summary>
            終点のX座標
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefLine.EndY">
            <summary>
            終点のY座標
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefLine.LineAttr">
            <summary>
            罫線
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefLine.Thick">
            <summary>
            円弧の厚み
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefLine.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefLine.FromXml(System.Xml.XmlTextReader,Pao.Reports.PmDefine)">
            <summary>
            PmDefLineオブジェクトを作成する。
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <param name="define"></param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmDefLine.ConvertToXml(Pao.Reports.PmDataOutput)">
            <summary>
            XML出力
            </summary>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefLine.ConvertToXml_DynamicAttr(Pao.Reports.PmDataOutput,System.Int32)">
            <summary>
            XML出力(動的属性)
            </summary>
            <param name="output"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefLine.ConvertToSvg(Pao.Reports.PmSvgOutput,Pao.Reports.PmDynamicValue)">
            <summary>
            SVG出力        /// </summary>
            <param name="output"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmDefLineAttr">
            <summary>
            罫線に関する属性を保持する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefLineAttr.attrName_">
            <summary>
            属性に対する名前
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefLineAttr.width_">
            <summary>
            線幅
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefLineAttr.color_">
            <summary>
            線色
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefLineAttr.style_">
            <summary>
            線種
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefLineAttr.type_">
            <summary>
            タイプ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefLineAttr.dashPattern_">
            <summary>
            ダッシュパターン
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefLineAttr.Width">
            <summary>
            線幅
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefLineAttr.Color">
            <summary>
            線色
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefLineAttr.Style">
            <summary>
            線種
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefLineAttr.Type">
            <summary>
            タイプ
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefLineAttr.DashLine">
            <summary>
            ダッシュの線の長さ
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefLineAttr.DashSpace">
            <summary>
            ダッシュの空白の長さ
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefLineAttr.DashPattern">
            <summary>
            ダッシュパターン
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefLineAttr.AttrName">
            <summary>
            属性名
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefLineAttr.#ctor(System.String,System.Single,Pao.Reports.Linux.Color,Pao.Reports.PmLineStyle,Pao.Reports.PmLineType,System.Single,System.Single)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefLineAttr.#ctor(System.String,System.Single,Pao.Reports.Linux.Color,Pao.Reports.PmLineStyle,Pao.Reports.PmLineType,System.Single[])">
            <summary>
            コンストラクタ - 2
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefLineAttr.FromXml(System.Xml.XmlTextReader,Pao.Reports.PmDefine)">
            <summary>
            PmDefLineAttrオブジェクトを作成する
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <param name="define"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefLineAttr.WriteAttr(Pao.Reports.PmDataOutput)">
            <summary>
            罫線属性情報を出力する
            </summary>
            <param name="pdo">出力する罫線属性情報</param>
        </member>
        <member name="T:Pao.Reports.PmDefObject">
            <summary>
            印刷定義情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefObject.x_">
            <summary>
            始点（左上）のX座標
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefObject.y_">
            <summary>
            始点（左上）のY座標
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefObject.intervalX_">
            <summary>
            描画間隔（X座標に対して）
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefObject.intervalY_">
            <summary>
            描画間隔（Y座標に対して）
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefObject.repeatXYBoth_">
            <summary>
            XY両方向繰り返し
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefObject.repeat_">
            <summary>
            繰り返し回数
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefObject.repeatX_">
            <summary>
            繰り返し回数X
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefObject.sText_">
            <summary>
            繰り返し回数
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefObject.fontAttr_">
            <summary>
            フォント
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefObject.X">
            <summary>
            始点（左上）のX座標
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefObject.Y">
            <summary>
            始点（左上）のY座標
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefObject.IntervalX">
            <summary>
            印字間隔（X座標に対して）
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefObject.IntervalY">
            <summary>
            印字間隔（Y座標に対して）
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefObject.RepeatXYBoth">
            <summary>
            XY両方向繰り返し
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefObject.Repeat">
            <summary>
            繰返し回数
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefObject.RepeatX">
            <summary>
            繰返し回数
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefObject.sText">
            <summary>
            繰返し回数
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefObject.FontAttr">
            <summary>
            フォント
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefObject.#ctor(Pao.Reports.PmDefType)">
            <summary>
            指定された種類の印刷オブジェクトを構築する。
            </summary>
            <param name="type">オブジェクトの種類</param>
        </member>
        <member name="T:Pao.Reports.PmDefRect">
            <summary>
            文字列定義情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefRect.width_">
            <summary>
            描画範囲（幅）
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefRect.height_">
            <summary>
            描画範囲（高さ）
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefRect.angle_">
            <summary>
            回転角度
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefRect.Width">
            <summary>
            描画範囲（幅）
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefRect.Height">
            <summary>
            描画範囲（高さ）
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefRect.Angle">
            <summary>
            回転角度
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefRect.#ctor(Pao.Reports.PmDefType)">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="T:Pao.Reports.PmDefSetting">
            <summary>
            印刷設定情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefSetting.name_">
            <summary>
            帳票定義体名
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefSetting.version_">
            <summary>
            バージョン
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefSetting.size_">
            <summary>
            用紙サイズ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefSetting.landscape_">
            <summary>
            印刷方向
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefSetting.Name">
            <summary>
            帳票定義体名
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefSetting.Version">
            <summary>
            帳票定義体のバージョン
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefSetting.Size">
            <summary>
            用紙サイズ
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefSetting.Landscape">
            <summary>
            印刷方向
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefSetting.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="T:Pao.Reports.PmDefSquare">
            <summary>
            四角形定義情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefSquare.lineAttr_">
            <summary>
            罫線属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefSquare.paintColor_">
            <summary>
            塗り潰す色
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefSquare.hatchAttr_">
            <summary>
            網掛け属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefSquare.r_">
            <summary>
            角の丸さを表す値
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefSquare.cornerType_">
            <summary>
            角の状態
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefSquare.LineAttr">
            <summary>
            罫線属性
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefSquare.PaintColor">
            <summary>
            塗り潰しす色
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefSquare.HatchAttr">
            <summary>
            網掛け属性
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefSquare.R">
            <summary>
            角の丸さを表す値
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefSquare.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefSquare.FromXml(System.Xml.XmlTextReader,Pao.Reports.PmDefine)">
            <summary>
            PmDeｆSquareオブジェクトを作成する。
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <param name="define"></param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmDefSquare.GetCornerType(Pao.Reports.PmCornerPos)">
            <summary>
            角の状態を取得する
            </summary>
            <param name="pos">角の位置を表すPmCornerPos</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefSquare.SetCornerType(Pao.Reports.PmCornerPos,Pao.Reports.PmCornerType)">
            <summary>
            角の状態を設定する
            </summary>
            <param name="pos">角の位置を表すPmCornerPos</param>
            <param name="type">角の状態を表すPmCornerType</param>
        </member>
        <member name="M:Pao.Reports.PmDefSquare.DrawDefinition(Pao.Reports.IPrintDraw)">
            <summary>
            定義体の描画
            </summary>
            <param name="draw"></param>
        </member>
        <member name="M:Pao.Reports.PmDefSquare.DrawInstance(Pao.Reports.IPrintDraw)">
            <summary>
            値なしの描画
            </summary>
            <param name="draw"></param>
        </member>
        <member name="M:Pao.Reports.PmDefSquare.DrawInstance(Pao.Reports.IPrintDraw,Pao.Reports.PmDynamicValue)">
            <summary>
            値ありの描画
            </summary>
            <param name="draw"></param>
            <param name="v"></param>
        </member>
        <member name="M:Pao.Reports.PmDefSquare.ConvertToXml(Pao.Reports.PmDataOutput)">
            <summary>
            XML出力        /// </summary>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefSquare.ConvertToXml_DynamicAttr(Pao.Reports.PmDataOutput,System.Int32)">
            <summary>
            XML出力(動的属性)
            </summary>
            <param name="output"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefSquare.ConvertToSvg(Pao.Reports.PmSvgOutput,Pao.Reports.PmDynamicValue)">
            <summary>
            SVG出力        /// </summary>
            <param name="output"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmDefText">
            <summary>
            文字列定義情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.textAlign_">
            <summary>
            表示横位置
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.textVAlign_">
            <summary>
            表示縦位置
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.text_">
            <summary>
            表示文字列
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.backColor_">
            <summary>
            背景色
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.isVertical_">
            <summary>
            縦書き
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.isElastic_">
            <summary>
            伸縮自在
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.fixingFontHeight_">
            <summary>
            フォント高さ固定
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.StretchingExceedsSpecifiedNumber_">
            <summary>
            指定桁越え伸縮
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.StretchingExceedsSpecifiedBytes_">
            <summary>
            指定バイト数越え伸縮
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.IsKintou_">
            <summary>
            isKintou_
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.IsKintou_Hankaku_">
            <summary>
            isKintou_Hankaku_
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.IsKintou_Hankaku_Kana_">
            <summary>
            isKintou_Hankaku_Kana_
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.Char_OutOfKintou_">
            <summary>
            char_OutOfKintou_
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.IsKintouFrontBack_">
            <summary>
            isKintouFrontBack_
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.NumOfSpaceFrontBack_">
            <summary>
            numOfSpaceFrontBack_
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.outLineWidth_">
            <summary>
            アウトライン幅
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.outLineColor_">
            <summary>
            アウトライン色
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.lineAttr_">
            <summary>
            罫線属性(枠線)
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.pdfAutoCrInsertText_">
            <summary>
            枠内自動折り返し(PDF)
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefText.pdfCutTextByHeight_">
            <summary>
            高さでカット(PDF)
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.TextAlign">
            <summary>
            表示横位置
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.TextVAlign">
            <summary>
            表示縦位置
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.Text">
            <summary>
            表示文字列
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.BackColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.IsVertical">
            <summary>
            縦書き
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.IsElastic">
            <summary>
            伸縮自在
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.FixingFontHeight">
            <summary>
            フォント高さ固定
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.StretchingExceedsSpecifiedNumber">
            <summary>
            指定桁越え伸縮
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.StretchingExceedsSpecifiedBytes">
            <summary>
            指定桁越え伸縮
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.IsKintou">
            <summary>
            IsKintou
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.IsKintou_Hankaku">
            <summary>
            IsKintou_Hankaku
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.IsKintou_Hankaku_Kana">
            <summary>
            IsKintou_Hankaku_Kana
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.Char_OutOfKintou">
            <summary>
            Char_OutOfKintou
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.IsKintouFrontBack">
            <summary>
            IsKintouFrontBack
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.NumOfSpaceFrontBack">
            <summary>
            NumOfSpaceFrontBack
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.OutLineWidth">
            <summary>
            アウトライン幅
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.OutLineColor">
            <summary>
            アウトライン色
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.LineAttr">
            <summary>
            枠線
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.PdfAutoCrInsertText">
            <summary>
            PDF自動折り返し
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDefText.PdfCutTextByHeight">
            <summary>
            高さでカット
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefText.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefText.FromXml(System.Xml.XmlTextReader,Pao.Reports.PmDefine)">
            <summary>
            PmDefTextオブジェクトを作成する。
            </summary>
            <param name="reader">XmlTextReaderオブジェクト</param>
            <param name="define"></param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmDefText.DrawDefinition(Pao.Reports.IPrintDraw)">
            <summary>
            定義体の描画
            </summary>
            <param name="draw"></param>
        </member>
        <member name="M:Pao.Reports.PmDefText.DrawInstance(Pao.Reports.IPrintDraw)">
            <summary>
            値なしの描画
            </summary>
            <param name="draw"></param>
        </member>
        <member name="M:Pao.Reports.PmDefText.DrawInstance(Pao.Reports.IPrintDraw,Pao.Reports.PmDynamicValue)">
            <summary>
            値ありの描画
            </summary>
            <param name="draw"></param>
            <param name="v"></param>
        </member>
        <member name="M:Pao.Reports.PmDefText.ConvertToXml(Pao.Reports.PmDataOutput)">
            <summary>
            XML出力        /// </summary>
            <param name="output"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefText.ConvertToXml_DynamicAttr(Pao.Reports.PmDataOutput,System.Int32)">
            <summary>
            XML出力(動的属性)
            </summary>
            <param name="output"></param>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDefText.ConvertToSvg(Pao.Reports.PmSvgOutput,Pao.Reports.PmDynamicValue)">
            <summary>
            SVG出力        /// </summary>
            <param name="output"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmDefType">
            <summary>
            印刷定義情報の種類を表すクラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefType.DynamicText">
            <summary>
            文字列
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefType.DynamicLine">
            <summary>
            罫線
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefType.DynamicCircle">
            <summary>
            円
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefType.DynamicSquare">
            <summary>
            四角形
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefType.DynamicImage">
            <summary>
            画像
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefType.DynamicBarcode">
            <summary>
            バーコード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefType.DynamicArtText">
            <summary>
            装飾文字
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefType.PrintDate">
            <summary>
            印刷日時
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefType.Dynamic">
            <summary>
            動的項目
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDefType.value_">
            <summary>
            オブジェクトの種類を表す値を保持
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefType.#ctor(System.UInt16,System.String)">
            <summary>
            指定された値を持つPmDefTypeオブジェクトを構築する。
            </summary>
            <param name="type">オブジェクトの種類を表す値</param>
            <param name="name"></param>
        </member>
        <member name="M:Pao.Reports.PmDefType.Sames(System.Object)">
            <summary>
            同値を持つオブジェクトかどうか比較する。
            </summary>
            <param name="type">比較対象のオブジェクト</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmDefType.FromString(System.String)">
            <summary>
            指定された文字列をPmDefTypeオブジェクトに変換する
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmDefUtil">
            <summary>
            描画用ユーティリティクラス
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDefUtil.NearVal(System.Single)">
            <summary>
            与えられた値から近似値を取得
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmDrawImagePdf">
            <summary>
            印刷オブジェクトを指定されたGraphicsオブジェクトを使用して描画する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawImagePdf.FIND_BRUSH">
            <summary>
            検索文字列の背景を塗りつぶすブラシ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawImagePdf.pix_">
            <summary>
            PmDrawオブジェクト（自分自身）
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawImagePdf.contents_">
            <summary>
            Pdfコンテンツ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawImagePdf.g_">
            <summary>
            Graphicsオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawImagePdf.defineDraw_">
            <summary>
            帳票定義体を描画する場合にtrue
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawImagePdf.findString_">
            <summary>
            検索文字列
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawImagePdf.full_">
            <summary>
            完全一致検索をするかどうか
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawImagePdf.img_">
            <summary>
            ファイル名
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDrawImagePdf.FindString">
            <summary>
            検索文字列
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDrawImagePdf.Full">
            <summary>
            完全一致検索をするかどうか
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.#ctor(System.String)">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.Output(Pao.Reports.IPrintPage)">
            <summary>
            指定されたGraphicsオブジェクトを使用し印刷データを描画する
            </summary>
            <param name="page">印刷データオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.Output(Pao.Reports.IPrintPage[])">
            <summary>
            指定されたGraphicsオブジェクトを使用し印刷データを描画する
            </summary>
            <param name="page">印刷データオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.Output(Pao.Reports.IPrintDefine)">
            <summary>
            指定されたGraphicsオブジェクトを使用し印刷データを描画する
            </summary>
            <param name="define">帳票定義体オブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.Accept(Pao.Reports.PmDefObject)">
            <summary>
            印刷オブジェクトを受取る。
            </summary>
            <param name="obj">印刷オブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.Accept(Pao.Reports.PmDefObject,Pao.Reports.PmDynamicValue)">
            <summary>
            印刷オブジェクトを受取る。
            </summary>
            <param name="obj">印刷オブジェクト</param>
            <param name="value">動的項目</param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.DrawString(System.Single,System.Single,System.String,Pao.Reports.Linux.Font,Pao.Reports.Linux.Color,System.Single,System.Single,System.Single,Pao.Reports.PmAlignType,Pao.Reports.PmVAlignType,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.Int32,System.Single,Pao.Reports.Linux.Color,System.Boolean,System.Boolean,Pao.Reports.Linux.Pen,Pao.Reports.Linux.Color)">
            <summary>
            文字列を描画する
            </summary>
            <param name="x">描画開始X座標</param>
            <param name="y">描画開始Y座標</param>
            <param name="str">描画する文字列</param>
            <param name="font">フォント</param>
            <param name="color">文字色</param>
            <param name="width">描画幅</param>
            <param name="height"></param>
            <param name="angle"></param>
            <param name="align">描画位置</param>
            <param name="valign">描画縦位置</param>
            <param name="isVertical"></param>
            <param name="isElastic"></param>
            <param name="fixingFontHeight"></param>
            <param name="StretchingExceedsSpecifiedNumber"></param>
            <param name="StretchingExceedsSpecifiedBytes"></param>
            <param name="IsKintou"></param>
            <param name="IsKintou_Hankaku"></param>
            <param name="IsKintou_Hankaku_Kana"></param>
            <param name="Char_OutOfKintou"></param>
            <param name="IsKintouFrontBack"></param>
            <param name="NumOfSpaceFrontBack"></param>
            <param name="outLineWidth"></param>
            <param name="outLineColor"></param>
            <param name="pdfAutoCrInsertText"></param>
            <param name="pdfCutTextByHeight"></param>
            <param name="borderPen"></param>
            <param name="backColor"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.DrawString(System.Single,System.Single,System.String,Pao.Reports.PmDefFontAttr,System.Single,System.Single,System.Single,Pao.Reports.PmAlignType,Pao.Reports.PmVAlignType,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.Int32,System.Single,Pao.Reports.Linux.Color,System.Boolean,System.Boolean,Pao.Reports.Linux.Pen,Pao.Reports.Linux.Color,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="str"></param>
            <param name="fontInfo"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="angle"></param>
            <param name="align"></param>
            <param name="valign"></param>
            <param name="isVertical"></param>
            <param name="isElastic"></param>
            <param name="fixingFontHeight"></param>
            <param name="StretchingExceedsSpecifiedNumber"></param>
            <param name="StretchingExceedsSpecifiedBytes"></param>
            <param name="IsKintou"></param>
            <param name="IsKintou_Hankaku"></param>
            <param name="IsKintou_Hankaku_Kana"></param>
            <param name="Char_OutOfKintou"></param>
            <param name="IsKintouFrontBack"></param>
            <param name="NumOfSpaceFrontBack"></param>
            <param name="outLineWidth"></param>
            <param name="outLineColor"></param>
            <param name="pdfAutoCrInsertText"></param>
            <param name="pdfCutTextByHeight"></param>
            <param name="borderPen"></param>
            <param name="backColor"></param>
            <param name="indexX"></param>
            <param name="indexY"></param>
            <param name="intervalX"></param>
            <param name="intervalY"></param>
            <param name="RepeatXYBoth"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.DrawLine(Pao.Reports.Linux.Pen,System.Single,System.Single,System.Single,System.Single,Pao.Reports.PmLineType,System.Single,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pen"></param>
            <param name="startX"></param>
            <param name="startY"></param>
            <param name="endX"></param>
            <param name="endY"></param>
            <param name="type"></param>
            <param name="thick"></param>
            <param name="indexX"></param>
            <param name="indexY"></param>
            <param name="intervalX"></param>
            <param name="intervalY"></param>
            <param name="RepeatXYBoth"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.DrawLine(Pao.Reports.Linux.Pen,System.Single,System.Single,System.Single,System.Single,Pao.Reports.PmLineType,System.Single)">
            <summary>
            
            </summary>
            <param name="pen"></param>
            <param name="startX"></param>
            <param name="startY"></param>
            <param name="endX"></param>
            <param name="endY"></param>
            <param name="type"></param>
            <param name="thick"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.DrawSquare(Pao.Reports.Linux.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Pao.Reports.PmCornerType,Pao.Reports.PmCornerType,Pao.Reports.PmCornerType,Pao.Reports.PmCornerType,Pao.Reports.Linux.Color,Pao.Reports.PmDefHatchAttr,Pao.Reports.PmLineType,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="angle"></param>
            <param name="r"></param>
            <param name="TL"></param>
            <param name="TR"></param>
            <param name="BL"></param>
            <param name="BR"></param>
            <param name="paint"></param>
            <param name="hatch"></param>
            <param name="type"></param>
            <param name="indexX"></param>
            <param name="indexY"></param>
            <param name="intervalX"></param>
            <param name="intervalY"></param>
            <param name="RepeatXYBoth"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.DrawSquare(Pao.Reports.Linux.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Pao.Reports.PmCornerType,Pao.Reports.PmCornerType,Pao.Reports.PmCornerType,Pao.Reports.PmCornerType,Pao.Reports.Linux.Color,Pao.Reports.PmDefHatchAttr)">
            <summary>
            
            </summary>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="angle"></param>
            <param name="r"></param>
            <param name="TL"></param>
            <param name="TR"></param>
            <param name="BL"></param>
            <param name="BR"></param>
            <param name="paint"></param>
            <param name="hatch"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.DrawImage(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,Pao.Reports.PmImageSizeType,Pao.Reports.PmImgAlignType,Pao.Reports.PmImgRevType,Pao.Reports.Linux.Color,Pao.Reports.Linux.Pen,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="angle"></param>
            <param name="imageSizeType"></param>
            <param name="align"></param>
            <param name="reverse"></param>
            <param name="backColor"></param>
            <param name="pen"></param>
            <param name="indexX"></param>
            <param name="indexY"></param>
            <param name="intervalX"></param>
            <param name="intervalY"></param>
            <param name="RepeatXYBoth"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.DrawImage(System.Byte[],System.Single,System.Single,System.Single,System.Single,System.Single,Pao.Reports.PmImageSizeType,Pao.Reports.PmImgAlignType,Pao.Reports.PmImgRevType,Pao.Reports.Linux.Color,Pao.Reports.Linux.Pen)">
            <summary>
            
            </summary>
            <param name="b"></param>
            <param name="xPos"></param>
            <param name="yPos"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="angle"></param>
            <param name="imageSizeType"></param>
            <param name="align"></param>
            <param name="reverse"></param>
            <param name="backColor"></param>
            <param name="pen"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf.DrawArtText(System.Single,System.Single,System.String,System.Single,System.Single,System.Single,System.Single,Pao.Reports.Linux.Color,Pao.Reports.Linux.Color,System.Boolean,System.Boolean,System.String,System.Boolean,Pao.Reports.Linux.Color,System.Int32,System.Boolean,System.String,System.Int32,System.Int32,System.Single,System.Single,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single,Pao.Reports.Linux.Color,Pao.Reports.Linux.Color,System.Single,System.Boolean,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            文字列を描画する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDrawImagePdf._GetMeasureString(System.String,Pao.Reports.Linux.Font,System.Single)">
            <summary>
            指定された文字を描画するためのサイズを取得する
            </summary>
            <param name="value">サイズを取得する文字列</param>
            <param name="font">文字列を描画するフォント</param>
            <param name="width">文字列の最大描画幅</param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmDrawPdf">
            <summary>
            印刷オブジェクトを指定されたGraphicsオブジェクトを使用して描画する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawPdf.FIND_BRUSH">
            <summary>
            検索文字列の背景を塗りつぶすブラシ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawPdf.contents_">
            <summary>
            Pdfコンテンツ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawPdf.defineDraw_">
            <summary>
            帳票定義体を描画する場合にtrue
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawPdf.findString_">
            <summary>
            検索文字列
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawPdf.full_">
            <summary>
            完全一致検索をするかどうか
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawPdf.filename_">
            <summary>
            ファイル名
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawPdf.stream_">
            <summary>
            ストリーム
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDrawPdf.FindString">
            <summary>
            検索文字列
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDrawPdf.Full">
            <summary>
            完全一致検索をするかどうか
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.#ctor(System.String)">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.Output(Pao.Reports.IPrintPage)">
            <summary>
            指定されたGraphicsオブジェクトを使用し印刷データを描画する
            </summary>
            <param name="page">印刷データオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.Output(Pao.Reports.IPrintPage[])">
            <summary>
            指定されたGraphicsオブジェクトを使用し印刷データを描画する
            </summary>
            <param name="page">印刷データオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.Output(Pao.Reports.IPrintDefine)">
            <summary>
            指定されたGraphicsオブジェクトを使用し印刷データを描画する
            </summary>
            <param name="define">帳票定義体オブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.Accept(Pao.Reports.PmDefObject)">
            <summary>
            印刷オブジェクトを受取る。
            </summary>
            <param name="obj">印刷オブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.Accept(Pao.Reports.PmDefObject,Pao.Reports.PmDynamicValue)">
            <summary>
            印刷オブジェクトを受取る。
            </summary>
            <param name="obj">印刷オブジェクト</param>
            <param name="value">動的項目</param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.DrawString(System.Single,System.Single,System.String,Pao.Reports.Linux.Font,Pao.Reports.Linux.Color,System.Single,System.Single,System.Single,Pao.Reports.PmAlignType,Pao.Reports.PmVAlignType,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.Int32,System.Single,Pao.Reports.Linux.Color,System.Boolean,System.Boolean,Pao.Reports.Linux.Pen,Pao.Reports.Linux.Color)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="str"></param>
            <param name="font"></param>
            <param name="color"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="angle"></param>
            <param name="align"></param>
            <param name="valign"></param>
            <param name="StretchingExceedsSpecifiedNumber"></param>
            <param name="StretchingExceedsSpecifiedBytes"></param>
            <param name="IsKintou"></param>
            <param name="IsKintou_Hankaku"></param>
            <param name="IsKintou_Hankaku_Kana"></param>
            <param name="Char_OutOfKintou"></param>
            <param name="IsKintouFrontBack"></param>
            <param name="NumOfSpaceFrontBack"></param>
            <param name="isVertical"></param>
            <param name="isElastic"></param>
            <param name="fixingFontHeight"></param>
            <param name="outLineWidth"></param>
            <param name="outLineColor"></param>
            <param name="pdfAutoCrInsertText"></param>
            <param name="pdfCutTextByHeight"></param>
            <param name="borderPen"></param>
            <param name="backColor"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.DrawString(System.Single,System.Single,System.String,Pao.Reports.PmDefFontAttr,System.Single,System.Single,System.Single,Pao.Reports.PmAlignType,Pao.Reports.PmVAlignType,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.String,System.Boolean,System.Int32,System.Single,Pao.Reports.Linux.Color,System.Boolean,System.Boolean,Pao.Reports.Linux.Pen,Pao.Reports.Linux.Color,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="str"></param>
            <param name="fontInfo"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="angle"></param>
            <param name="align"></param>
            <param name="valign"></param>
            <param name="isVertical"></param>
            <param name="isElastic"></param>
            <param name="fixingFontHeight"></param>
            <param name="StretchingExceedsSpecifiedNumber"></param>
            <param name="StretchingExceedsSpecifiedBytes"></param>
            <param name="IsKintou"></param>
            <param name="IsKintou_Hankaku"></param>
            <param name="IsKintou_Hankaku_Kana"></param>
            <param name="Char_OutOfKintou"></param>
            <param name="IsKintouFrontBack"></param>
            <param name="NumOfSpaceFrontBack"></param>
            <param name="outLineWidth"></param>
            <param name="outLineColor"></param>
            <param name="pdfAutoCrInsertText"></param>
            <param name="pdfCutTextByHeight"></param>
            <param name="borderPen"></param>
            <param name="backColor"></param>
            <param name="indexX"></param>
            <param name="indexY"></param>
            <param name="intervalX"></param>
            <param name="intervalY"></param>
            <param name="RepeatXYBoth"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.DrawLine(Pao.Reports.Linux.Pen,System.Single,System.Single,System.Single,System.Single,Pao.Reports.PmLineType,System.Single,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pen"></param>
            <param name="startX"></param>
            <param name="startY"></param>
            <param name="endX"></param>
            <param name="endY"></param>
            <param name="type"></param>
            <param name="thick"></param>
            <param name="indexX"></param>
            <param name="indexY"></param>
            <param name="intervalX"></param>
            <param name="intervalY"></param>
            <param name="RepeatXYBoth"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.DrawLine(Pao.Reports.Linux.Pen,System.Single,System.Single,System.Single,System.Single,Pao.Reports.PmLineType,System.Single)">
            <summary>
            
            </summary>
            <param name="pen"></param>
            <param name="startX"></param>
            <param name="startY"></param>
            <param name="endX"></param>
            <param name="endY"></param>
            <param name="type"></param>
            <param name="thick"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.DrawSquare(Pao.Reports.Linux.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Pao.Reports.PmCornerType,Pao.Reports.PmCornerType,Pao.Reports.PmCornerType,Pao.Reports.PmCornerType,Pao.Reports.Linux.Color,Pao.Reports.PmDefHatchAttr,Pao.Reports.PmLineType,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="angle"></param>
            <param name="r"></param>
            <param name="TL"></param>
            <param name="TR"></param>
            <param name="BL"></param>
            <param name="BR"></param>
            <param name="paint"></param>
            <param name="hatch"></param>
            <param name="type"></param>
            <param name="indexX"></param>
            <param name="indexY"></param>
            <param name="intervalX"></param>
            <param name="intervalY"></param>
            <param name="RepeatXYBoth"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.DrawSquare(Pao.Reports.Linux.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,Pao.Reports.PmCornerType,Pao.Reports.PmCornerType,Pao.Reports.PmCornerType,Pao.Reports.PmCornerType,Pao.Reports.Linux.Color,Pao.Reports.PmDefHatchAttr)">
            <summary>
            
            </summary>
            <param name="pen"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="angle"></param>
            <param name="r"></param>
            <param name="TL"></param>
            <param name="TR"></param>
            <param name="BL"></param>
            <param name="BR"></param>
            <param name="paint"></param>
            <param name="hatch"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.DrawImage(System.String,System.Single,System.Single,System.Single,System.Single,System.Single,Pao.Reports.PmImageSizeType,Pao.Reports.PmImgAlignType,Pao.Reports.PmImgRevType,Pao.Reports.Linux.Color,Pao.Reports.Linux.Pen,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            
            </summary>
            <param name="s"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="angle"></param>
            <param name="imageSizeType"></param>
            <param name="align"></param>
            <param name="reverse"></param>
            <param name="backColor"></param>
            <param name="pen"></param>
            <param name="indexX"></param>
            <param name="indexY"></param>
            <param name="intervalX"></param>
            <param name="intervalY"></param>
            <param name="RepeatXYBoth"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.DrawImage(System.Byte[],System.Single,System.Single,System.Single,System.Single,System.Single,Pao.Reports.PmImageSizeType,Pao.Reports.PmImgAlignType,Pao.Reports.PmImgRevType,Pao.Reports.Linux.Color,Pao.Reports.Linux.Pen)">
            <summary>
            
            </summary>
            <param name="b"></param>
            <param name="xPos"></param>
            <param name="yPos"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="angle"></param>
            <param name="imageSizeType"></param>
            <param name="align"></param>
            <param name="reverse"></param>
            <param name="backColor"></param>
            <param name="pen"></param>
        </member>
        <member name="M:Pao.Reports.PmDrawPdf.DrawArtText(System.Single,System.Single,System.String,System.Single,System.Single,System.Single,System.Single,Pao.Reports.Linux.Color,Pao.Reports.Linux.Color,System.Boolean,System.Boolean,System.String,System.Boolean,Pao.Reports.Linux.Color,System.Int32,System.Boolean,System.String,System.Int32,System.Int32,System.Single,System.Single,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single,Pao.Reports.Linux.Color,Pao.Reports.Linux.Color,System.Single,System.Boolean,System.Int32,System.Int32,System.Single,System.Single,System.Boolean)">
            <summary>
            文字列を描画する
            </summary>
        </member>
        <member name="T:Pao.Reports.PmDrawUtil">
            <summary>
            描画用ユーティリティクラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawUtil.DEFAULT_FONT">
            <summary>
            デフォルトフォント
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawUtil.DEFAULT_PEN">
            <summary>
            デフォルトペン
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawUtil.font_">
            <summary>
            フォントオブジェクト群
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDrawUtil.pen_">
            <summary>
            ペンオブジェクト群
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDrawUtil.GetFont(Pao.Reports.PmDefFontAttr)">
            <summary>
            指定されたフォント情報からFontオブジェクトを取得する
            </summary>
            <param name="fontInfo">フォント情報</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDrawUtil.GetPen(Pao.Reports.PmDefLineAttr)">
            <summary>
            Penオブジェクトを構築する
            </summary>
            <param name="attr">罫線属性情報</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDrawUtil.GetHatchStyle(System.Int32)">
            <summary>
            指定されたハッチに対するHatchStyleを取得する
            </summary>
            <param name="hatch">ハッチ</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmDrawUtil.System#IDisposable#Dispose">
            <summary>
            リソースの開放処理
            </summary>
        </member>
        <member name="T:Pao.Reports.PmDynamicValue">
            <summary>
            動的情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDynamicValue.values_">
            <summary>
            動的な値を設定する。
            </summary>
        </member>
        <member name="F:Pao.Reports.PmDynamicValue.drawing_">
            <summary>
            描画するかどうか設定する。
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDynamicValue.Count">
            <summary>
            保持している動的値の数を取得する。
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDynamicValue.CountX">
            <summary>
            保持している動的値(X)の数を取得する。
            </summary>
        </member>
        <member name="P:Pao.Reports.PmDynamicValue.CountY">
            <summary>
            保持している動的値(Y)の数を取得する。
            </summary>
        </member>
        <member name="M:Pao.Reports.PmDynamicValue.#ctor(Pao.Reports.PmDefType)">
            <summary>
            指定されたオブジェクトの種類の動的値を保持するPmDynamicObjectを構築する
            </summary>
            <param name="type">オブジェクトの種類</param>
        </member>
        <member name="M:Pao.Reports.PmDynamicValue.SetValue(System.Int64,System.String)">
            <summary>
            動的な値を設定する
            </summary>
            <param name="index">インデックス（行番号等）</param>
            <param name="value">設定する値</param>
        </member>
        <member name="M:Pao.Reports.PmDynamicValue.SetValue(System.Int64,System.String,System.Boolean)">
            <summary>
            動的な値を設定する
            </summary>
            <param name="index">インデックス（行番号等）</param>
            <param name="value">設定する値</param>
            <param name="drawing">描画フラグ</param>
        </member>
        <member name="M:Pao.Reports.PmDynamicValue.GetValue(System.Int64)">
            <summary>
            動的な値を取得する
            </summary>
            <param name="index">インデックス（行番号等）</param>
            <return>設定値</return>
        </member>
        <member name="M:Pao.Reports.PmDynamicValue.IsDrawing(System.Int64)">
            <summary>
            描画するかしないか取得する
            </summary>
            <param name="index">インデックス（行番号等）</param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmImageSizeType">
            <summary>
            四角形の角の状態を表す列挙型
            </summary>
        </member>
        <member name="F:Pao.Reports.PmImageSizeType.Stretch">
            等倍
        </member>
        <member name="F:Pao.Reports.PmImageSizeType.Zoom">
            枠に張り付く
        </member>
        <member name="F:Pao.Reports.PmImageSizeType.name_">
            等比で拡大縮小
        </member>
        <member name="T:Pao.Reports.PmImgAlignType">
            <summary>
            画像位置を表わす列挙クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmImgAlignType.LeftTop">
            <summary>
            左上
            </summary>
        </member>
        <member name="F:Pao.Reports.PmImgAlignType.RightTop">
            <summary>
            右上
            </summary>
        </member>
        <member name="F:Pao.Reports.PmImgAlignType.Center">
            <summary>
            中央
            </summary>
        </member>
        <member name="F:Pao.Reports.PmImgAlignType.LeftBottom">
            <summary>
            左下
            </summary>
        </member>
        <member name="F:Pao.Reports.PmImgAlignType.RightBottom">
            <summary>
            右下
            </summary>
        </member>
        <member name="P:Pao.Reports.PmImgAlignType.shortName">
            <summary>
            短い名前
            </summary>
        </member>
        <member name="P:Pao.Reports.PmImgAlignType.longName">
            <summary>
            長い名前
            </summary>
        </member>
        <member name="M:Pao.Reports.PmImgAlignType.FromString(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmImgRevType">
            <summary>
            画像反転を表わす列挙クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmImgRevType.NoRev">
            <summary>
            反転なし
            </summary>
        </member>
        <member name="F:Pao.Reports.PmImgRevType.LR">
            <summary>
            左右反転
            </summary>
        </member>
        <member name="F:Pao.Reports.PmImgRevType.TB">
            <summary>
            上下反転
            </summary>
        </member>
        <member name="F:Pao.Reports.PmImgRevType.TBLR">
            <summary>
            上下左右反転
            </summary>
        </member>
        <member name="P:Pao.Reports.PmImgRevType.shortName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.PmImgRevType.longName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pao.Reports.PmImgRevType.#ctor(System.String,System.String)">
            <summary>
            プライベートコンストラクタ
            </summary>
            <param name="shortname"></param>
            <param name="longname"></param>
        </member>
        <member name="M:Pao.Reports.PmImgRevType.FromString(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmInvalidFileException">
            <summary>
            無効なファイルを読込んだときに発行する例外
            </summary>
        </member>
        <member name="M:Pao.Reports.PmInvalidFileException.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="T:Pao.Reports.PmLineStyle">
            <summary>
            線の種類を表す列挙型
            </summary>
        </member>
        <member name="F:Pao.Reports.PmLineStyle.Solid">
            <summary>
            実線
            </summary>
        </member>
        <member name="F:Pao.Reports.PmLineStyle.Dot">
            <summary>
            ドット
            </summary>
        </member>
        <member name="F:Pao.Reports.PmLineStyle.Dash">
            <summary>
            ダッシュ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmLineStyle.DashDot">
            <summary>
            一点破線
            </summary>
        </member>
        <member name="F:Pao.Reports.PmLineStyle.DashDotDot">
            <summary>
            二点破線
            </summary>
        </member>
        <member name="F:Pao.Reports.PmLineStyle.Custom">
            <summary>
            任意
            </summary>
        </member>
        <member name="P:Pao.Reports.PmLineStyle.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.PmLineStyle.dashStyle">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pao.Reports.PmLineStyle.#ctor(System.String,Pao.Reports.Linux.DashStyle)">
            <summary>
            プライベートコンストラクタ
            </summary>
            <param name="name"></param>
            <param name="ds"></param>
        </member>
        <member name="M:Pao.Reports.PmLineStyle.FromString(System.String)">
            <summary>
            指定された文字列をPmLineStyleに変換する
            </summary>
            <param name="value">変換する文字列</param>
            <return></return>
        </member>
        <member name="T:Pao.Reports.PmLineType">
            <summary>
            線のタイプを表す列挙型
            </summary>
        </member>
        <member name="F:Pao.Reports.PmLineType.Single">
            <summary>
            一重線(通常の線)
            </summary>
        </member>
        <member name="F:Pao.Reports.PmLineType.Double">
            <summary>
            二重線
            </summary>
        </member>
        <member name="M:Pao.Reports.PmLineType.FromString(System.String)">
            <summary>
            指定された文字列をPmLineTypeに変換する
            </summary>
            <param name="value">変換する文字列</param>
            <return></return>
        </member>
        <member name="T:Pao.Reports.IGetType">
            <summary>
            タイプ取得インターフェース
            </summary>
        </member>
        <member name="T:Pao.Reports.PmObject">
            <summary>
            全ての印刷データの基本クラス
            </summary>
            <remarks></remarks>
        </member>
        <member name="F:Pao.Reports.PmObject.name_">
            <summary>
            印刷オブジェクトの名前
            </summary>
        </member>
        <member name="F:Pao.Reports.PmObject.type_">
            <summary>
            オブジェクトの種類
            </summary>
        </member>
        <member name="P:Pao.Reports.PmObject.Name">
            <summary>
            印刷オブジェクトの名前を取得する。
            </summary>
        </member>
        <member name="P:Pao.Reports.PmObject.Type">
            <summary>
            オブジェクトの種類を取得する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmObject.#ctor(Pao.Reports.PmDefType)">
            <summary>
            指定されたオブジェクトタイプのPmObjectを構築する
            </summary>
            <param name="type">オブジェクトの種類</param>
        </member>
        <member name="M:Pao.Reports.PmObject.IsType(Pao.Reports.PmDefType)">
            <summary>
            印刷オブジェクトの種類を調べる。
            </summary>
            <param name="type">印刷オブジェクトの種類</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmObject.Clone">
            <summary>
            Copy Object (don't touch)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmPage">
            <summary>
            ページ情報クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmPage.define_">
            <summary>
            帳票定義体情報
            </summary>
        </member>
        <member name="F:Pao.Reports.PmPage.values_">
            <summary>
            オブジェクト毎の動的値
            </summary>
        </member>
        <member name="P:Pao.Reports.PmPage.Define">
            <summary>
            帳票定義体情報
            </summary>
        </member>
        <member name="M:Pao.Reports.PmPage.#ctor">
            <summary>
            指定された定義体情報を持つPmPageオブジェクトを構築する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmPage.#ctor(Pao.Reports.PmDefine)">
            <summary>
            指定された定義体情報を持つPmPageオブジェクトを構築する
            </summary>
            <param name="define">ページに対する定義体オブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmPage.GetInstance(Pao.Reports.IPrintDefine)">
            <summary>
            IPrintPageオブジェクトを取得する
            </summary>
            <param name="define">帳票定義体情報</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PmPage.Traverse(Pao.Reports.IPmVisitor)">
            <summary>
            静的項目に対する動的項目を設定した後トラバースする。
            </summary>
            <param name="visitor">トラバースインタフェース</param>
        </member>
        <member name="M:Pao.Reports.PmPage.SetValue(System.String,System.String)">
            <summary>
            動的な値を設定する。
            </summary>
            <param name="objname">値を設定するオブジェクト名</param>
            <param name="value">設定する値</param>
        </member>
        <member name="M:Pao.Reports.PmPage.SetValue(System.String,System.Int64)">
            <summary>
            動的な値を設定する。
            </summary>
            <param name="objname">値を設定するオブジェクト名</param>
            <param name="index">値のインデックス（行番号等）</param>
        </member>
        <member name="M:Pao.Reports.PmPage.SetValue(System.String,System.Int64,System.Int64)">
            <summary>
            動的な値を設定する。
            </summary>
            <param name="objname">値を設定するオブジェクト名</param>
            <param name="indexX">値のインデックス（列番号）</param>
            <param name="indexY">値のインデックス（行番号）</param>
        </member>
        <member name="M:Pao.Reports.PmPage.SetValue(System.String,System.String,System.Int64)">
            <summary>
            動的な値を設定する。
            </summary>
            <param name="objname">値を設定するオブジェクト名</param>
            <param name="value">設定する値</param>
            <param name="index">値のインデックス（行番号等）</param>
        </member>
        <member name="M:Pao.Reports.PmPage.SetValue(System.String,System.String,System.Int64,Pao.Reports.PmDefType)">
            <summary>
            動的な値を設定する。
            </summary>
            <param name="objname">値を設定するオブジェクト名</param>
            <param name="value">設定する値</param>
            <param name="index">値のインデックス（行番号等）</param>
            <param name="type">オブジェクトの種類</param>
        </member>
        <member name="M:Pao.Reports.PmPage.SetValue(System.String,System.String,System.Int64,Pao.Reports.PmDefType,System.Boolean)">
            <summary>
            動的な値を設定する。
            </summary>
            <param name="objname">値を設定するオブジェクト名</param>
            <param name="value">設定する値</param>
            <param name="index">値のインデックス（行番号等）</param>
            <param name="type">オブジェクトの種類</param>
            <param name="drawing">描画フラグ</param>
        </member>
        <member name="M:Pao.Reports.PmPage.GetAllDynamicData">
            <summary>
            全ての動的値を取得する
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmResource">
            <summary>
            リソース名を定義するクラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PmResource.APP_TITLE">
            <summary>
            アプリケーション名
            </summary>
        </member>
        <member name="F:Pao.Reports.PmResource.APP_VERSION">
            <summary>
            バージョン
            </summary>
        </member>
        <member name="F:Pao.Reports.PmResource.MSG_INVALID_FILE">
            <summary>
            無効なファイルを指定された場合のエラーメッセージ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmResource.MSG_INVALID_FILENAME">
            <summary>
            無効なファイル名を指定された場合のエラーメッセージ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmResource.MSG_NOT_WRITE_DATA">
            <summary>
            指定されたファイルに保存できない場合のエラーメッセージ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmResource.MSG_FILE_NOT_FOUND">
            <summary>
            指定されたファイルが存在しない場合のエラーメッセージ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmResource.MSG_NO_BROWSER">
            <summary>
            ブラウザがない場合のエラーメッセージ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmResource.key_">
            <summary>
            リソースのキー名称
            </summary>
        </member>
        <member name="F:Pao.Reports.PmResource.value_">
            <summary>
            リソースの文字列表現
            </summary>
        </member>
        <member name="M:Pao.Reports.PmResource.#ctor(System.String,System.String)">
            <summary>
            指定された値を持つPmDefTypeオブジェクトを構築する。
            </summary>
            <param name="key">オブジェクトの種類を表す値</param>
            <param name="value">オブジェクトの文字列表現</param>
        </member>
        <member name="M:Pao.Reports.PmResource.Eauals(System.Object)">
            <summary>
            同値を持つオブジェクトかどうか比較する。
            </summary>
            <param name="type">比較対象のオブジェクト</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmResource.ToString">
            <summary>
            オブジェクトの文字列表現を取得する
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmSearchResult">
            <summary>
            検索結果を保持する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSearchResult.page_">
            <summary>
            ページ番号
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSearchResult.text_">
            <summary>
            検索文字列を含む文字列
            </summary>
        </member>
        <member name="M:Pao.Reports.PmSearchResult.#ctor(System.Int64,System.String)">
            <summary>
            指定された検索結果を保持するPmSearchResultオブジェクトを構築する
            </summary>
            <param name="page">ページ番号</param>
            <param name="text">検索文字列を含む文字列</param>
        </member>
        <member name="P:Pao.Reports.PmSearchResult.Page">
            <summary>
            文字列が存在するページ番号を取得する
            </summary>
        </member>
        <member name="P:Pao.Reports.PmSearchResult.Text">
            <summary>
            検索文字列を含む文字列を取得する
            </summary>
        </member>
        <member name="T:Pao.Reports.PmSvgNode">
            <summary>
            Reportで使用するXMLノード名を宣言する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.PrintDefine">
            <summary>
            帳票定義体を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.PrintSetting">
            <summary>
            印刷設定を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.PrintAttrs">
            <summary>
            印刷属性表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Paper">
            <summary>
            印刷用紙を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Design">
            <summary>
            印刷用紙を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Order">
            <summary>
            オブジェクトの印刷順を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Csv">
            <summary>
            CSVを表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.CsvHeader">
            <summary>
            CSVファイルのタイトルを表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.CsvColumn">
            <summary>
            CSVファイルの列内容を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.PrintObjects">
            <summary>
            印刷オブジェクト群を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Point">
            <summary>
            座標を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Line">
            <summary>
            罫線（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Text">
            <summary>
            文字列（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Square">
            <summary>
            四角形（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Circle">
            <summary>
            円（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Barcode">
            <summary>
            バーコード（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Image">
            <summary>
            画像（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.ArtText">
            <summary>
            装飾文字（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Polygon">
            <summary>
            ポリゴン（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Page">
            <summary>
            ページ（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Value">
            <summary>
            動的出力データ（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.ChangeOrAddAttr">
            <summary>
            動的出力属性（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.FontAttr">
            <summary>
            フォント属性を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.LineAttr">
            <summary>
            罫線属性を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.HatchAttr">
            <summary>
            網掛け属性を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.Corner">
            <summary>
            角を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.PrintData">
            <summary>
            印刷データを表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgNode.name_">
            <summary>
            XMLノード名
            </summary>
        </member>
        <member name="P:Pao.Reports.PmSvgNode.Name">
            <summary>
            ノード名を取得する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmSvgNode.#ctor(System.String)">
            <summary>
            指定されたノード名を持つPmSvgNodeオブジェクトを構築する
            </summary>
            <param name="name">ノード名</param>
        </member>
        <member name="T:Pao.Reports.PmSvgOutput">
            <summary>
            印刷データをXML形式で出力する。
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgOutput.oldDefineName_">
            <summary>
            前回出力した帳票定義体名を保持する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmSvgOutput.page_">
            <summary>
            出力ページ数
            </summary>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput.#ctor(System.String,System.Boolean)">
            <summary>
            指定されたファイル名に印刷データをXML形式で出力するPmSvgOutputオブジェクトを構築する。
            </summary>
            <param name="filename">出力ファイル名</param>
            <param name="flgSvg"></param>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput.#ctor(System.IO.StreamWriter)">
            <summary>
            指定されたストリームに印刷データをXML形式で出力するPmSvgOutputオブジェクトを構築する。
            </summary>
            <param name="stream"></param>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput._Open">
            <summary>
            出力ファイルを開く。
            </summary>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput._Close">
            <summary>
            開いているファイルを閉じる
            </summary>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput._Conv(Pao.Reports.PmDynamicValue)">
            <summary>
            PmDynamicValueオブジェクトを文字列に変換する。
            </summary>
            <param name="obj">変換するPmDynamicValueオブジェクト</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput.WriteImageData(System.String)">
            <summary>
            画像イメージを出力する
            </summary>
            <param name="data">画像へのパス又はBASE64データ</param>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput._Start">
            <summary>
            出力を開始する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput._End">
            <summary>
            出力を終了する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput._PageStart(Pao.Reports.IPrintPage)">
            <summary>
            １ページの出力を開始する
            </summary>
            <param name="page">印刷データオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput._PageEnd">
            <summary>
            １ページの出力を終了する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput.WriteStartElement(Pao.Reports.PmSvgNode)">
            <summary>
            開始ノードを出力する
            </summary>
            <param name="node">ノードを表すPmSvgNodeオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput.WriteStartElementln(Pao.Reports.PmSvgNode)">
            <summary>
            開始ノードを出力する
            </summary>
            <param name="node">ノードを表すPmSvgNodeオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput.WriteEndElement(Pao.Reports.PmSvgNode)">
            <summary>
            終了ノードを出力する
            </summary>
            <param name="node">ノードを表すPmSvgNodeオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput.WriteEndElementln">
            <summary>
            終了ノードを出力する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput.WriteAttribute(Pao.BarCode.PmSvgAttr,System.String)">
            <summary>
            属性を出力する
            </summary>
            <param name="attr">属性をあらわすPmSvgAttrオブジェクト</param>
            <param name="value">出力する文字列</param>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput.WriteAttribute(Pao.BarCode.PmSvgAttr,System.Int64)">
            <summary>
            属性を出力する
            </summary>
            <param name="attr">属性をあらわすPmSvgAttrオブジェクト</param>
            <param name="value">出力する整数</param>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput.WriteAttribute(Pao.BarCode.PmSvgAttr,System.Single)">
            <summary>
            属性を出力する
            </summary>
            <param name="attr">属性をあらわすPmSvgAttrオブジェクト</param>
            <param name="value">出力する浮動小数点数</param>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput.WriteAttribute(Pao.BarCode.PmSvgAttr,System.Boolean)">
            <summary>
            属性を出力する
            </summary>
            <param name="attr">属性をあらわすPmSvgAttrオブジェクト</param>
            <param name="value">出力する整数</param>
        </member>
        <member name="M:Pao.Reports.PmSvgOutput._WriteCDATA(System.String)">
            <summary>
            現在のノードのCDATAを出力する
            </summary>
            <param name="value">出力するCDATA</param>
        </member>
        <member name="T:Pao.Reports.PmTextOutput">
            <summary>
            印刷オブジェクトをテキストファイルに出力する。
            </summary>
        </member>
        <member name="F:Pao.Reports.PmTextOutput.stream_">
            <summary>
            出力ファイルのストリーム
            </summary>
        </member>
        <member name="F:Pao.Reports.PmTextOutput.filename_">
            <summary>
            出力ファイル名
            </summary>
        </member>
        <member name="F:Pao.Reports.PmTextOutput.write_">
            <summary>
            １度でも出力した場合にTrueとなる
            </summary>
            <remarks>ファイルに対して上書きするのか追記するのかを判定する</remarks>
        </member>
        <member name="M:Pao.Reports.PmTextOutput.#ctor(System.String)">
            <summary>
            指定されたファイルに出力するPmTextOutputオブジェクトを構築する。
            </summary>
            <param name="filename">出力ファイル名</param>
        </member>
        <member name="M:Pao.Reports.PmTextOutput.Accept(Pao.Reports.PmDefObject)">
            <summary>
            印刷オブジェクトを受取る。
            </summary>
            <param name="obj">印刷オブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmTextOutput.Accept(Pao.Reports.PmDefObject,Pao.Reports.PmDynamicValue)">
            <summary>
            印刷オブジェクトを受取る。
            </summary>
            <param name="obj">印刷オブジェクト</param>
            <param name="value">動的項目</param>
        </member>
        <member name="M:Pao.Reports.PmTextOutput._Open">
            <summary>
            出力ファイルを開く。
            </summary>
        </member>
        <member name="M:Pao.Reports.PmTextOutput.Write(System.String)">
            <summary>
            指定された内容を現在開いているファイルに出力する。
            </summary>
            <param name="value">出力データ</param>
        </member>
        <member name="M:Pao.Reports.PmTextOutput._Close">
            <summary>
            開いているファイルを閉じる
            </summary>
        </member>
        <member name="M:Pao.Reports.PmTextOutput._Conv(Pao.Reports.PmDynamicValue)">
            <summary>
            PmDynamicValueオブジェクトを文字列に変換する。
            </summary>
            <param name="obj">変換するPmDynamicValueオブジェクト</param>
            <return></return>
            <remarks>派生クラスで実装がないこともあり得るので、実体を付けるが処理なし</remarks>
        </member>
        <member name="M:Pao.Reports.PmTextOutput.Output(Pao.Reports.IPrintPage[])">
            <summary>
            印刷データを出力する
            </summary>
            <param name="pages">印刷データオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmTextOutput.Output(Pao.Reports.IPrintPage)">
            <summary>
            １ページ単位で印刷データを出力する
            </summary>
            <param name="page">印刷データオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmTextOutput.Output(Pao.Reports.IPrintDefine)">
            <summary>
            帳票定義体を出力する
            </summary>
            <param name="define">帳票定義体オブジェクト</param>
            <remarks>派生クラスで実装がないこともあり得るので、実体を付けるが処理なし</remarks>
        </member>
        <member name="M:Pao.Reports.PmTextOutput._Start">
            <summary>
            出力を開始する
            </summary>
            <remarks>派生クラスで実装がないこともあり得るので、実体を付けるが処理なし</remarks>
        </member>
        <member name="M:Pao.Reports.PmTextOutput._End">
            <summary>
            出力を終了する
            </summary>
            <remarks>派生クラスで実装がないこともあり得るので、実体を付けるが処理なし</remarks>
        </member>
        <member name="M:Pao.Reports.PmTextOutput._PageStart(Pao.Reports.IPrintPage)">
            <summary>
            １ページの出力を開始する
            </summary>
            <param name="page">印刷データオブジェクト</param>
            <remarks>派生クラスで実装がないこともあり得るので、実体を付けるが処理なし</remarks>
        </member>
        <member name="M:Pao.Reports.PmTextOutput._PageEnd">
            <summary>
            １ページの出力を終了する
            </summary>
            <remarks>派生クラスで実装がないこともあり得るので、実体を付けるが処理なし</remarks>
        </member>
        <member name="T:Pao.Reports.PmTextSearch">
            <summary>
            指定された文字列を検索する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmTextSearch.find_">
            <summary>
            検索文字列
            </summary>
        </member>
        <member name="F:Pao.Reports.PmTextSearch.results_">
            <summary>
            検索結果
            </summary>
        </member>
        <member name="F:Pao.Reports.PmTextSearch.current_">
            <summary>
            現在検索中のページ番号
            </summary>
        </member>
        <member name="F:Pao.Reports.PmTextSearch.full_">
            <summary>
            完全一致させるかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.PmTextSearch.Results">
            <summary>
            検索結果を取得する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmTextSearch.#ctor(System.String,System.Boolean)">
            <summary>
            指定された文字を検索するPmTextSearchオブジェクトを構築する
            </summary>
            <param name="find">検索文字列</param>
            <param name="full">完全一致させる場合にTrue</param>
        </member>
        <member name="M:Pao.Reports.PmTextSearch.Accept(Pao.Reports.PmDefObject)">
            <summary>
            印刷オブジェクトを受取る。
            </summary>
            <param name="obj">印刷オブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmTextSearch.Accept(Pao.Reports.PmDefObject,Pao.Reports.PmDynamicValue)">
            <summary>
            印刷オブジェクトを受取る。
            </summary>
            <param name="obj">印刷オブジェクト</param>
            <param name="value">動的項目</param>
        </member>
        <member name="M:Pao.Reports.PmTextSearch.Output(Pao.Reports.IPrintPage[])">
            <summary>
            印刷データを出力する
            </summary>
            <param name="pages">印刷データオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmTextSearch.Output(Pao.Reports.IPrintPage)">
            <summary>
            １ページ単位で印刷データを出力する
            </summary>
            <param name="page">印刷データオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmTextSearch.Output(Pao.Reports.IPrintDefine)">
            <summary>
            帳票定義体を出力する
            </summary>
            <param name="define">帳票定義体オブジェクト</param>
        </member>
        <member name="M:Pao.Reports.PmTextSearch._AddResult(System.Int64,System.String)">
            <summary>
            検索結果を追加する
            </summary>
            <param name="page">ページ番号</param>
            <param name="text">検索文字列を含む文字列</param>
        </member>
        <member name="T:Pao.Reports.PmTypeConverter">
            <summary>
            各オブジェクトを対応する列挙型の値に変換するユーティリティクラス。
            </summary>
        </member>
        <member name="M:Pao.Reports.PmTypeConverter.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
            <remarks>ユーティリティクラスのため、オブジェクトの作成は出来ない</remarks>
        </member>
        <member name="M:Pao.Reports.PmTypeConverter.ToColor(System.String,Pao.Reports.Linux.Color)">
            <summary>
            指定された文字列をColorに変換する
            </summary>
            <param name="value">変換する文字列</param>
            <param name="defaultColor"></param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.PmTypeConverter.ToString(Pao.Reports.Linux.Color)">
            <summary>
            指定されたColorオブジェクトを文字列に変換する
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.IVAlignType">
            <summary>
            文字縦位置
            </summary>
        </member>
        <member name="P:Pao.Reports.IVAlignType.Name">
            <summary>
            文字縦位置名
            </summary>
        </member>
        <member name="T:Pao.Reports.PmVAlignType">
            <summary>
            文字縦位置を表す列挙型
            </summary>
        </member>
        <member name="F:Pao.Reports.PmVAlignType.Top">
            <summary>
            上
            </summary>
        </member>
        <member name="F:Pao.Reports.PmVAlignType.Middle">
            <summary>
            真ん中
            </summary>
        </member>
        <member name="F:Pao.Reports.PmVAlignType.Bottom">
            <summary>
            下
            </summary>
        </member>
        <member name="P:Pao.Reports.PmVAlignType.Name">
            <summary>
            文字位置名
            </summary>
        </member>
        <member name="M:Pao.Reports.PmVAlignType.#ctor(System.String,Pao.Reports.Linux.StringAlignment)">
            <summary>
            プライベートコンストラクタ
            </summary>
            <param name="name"></param>
            <param name="sa"></param>
        </member>
        <member name="M:Pao.Reports.PmVAlignType.FromString(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PmXmlAttr">
            <summary>
            Reportで使用するXML属性名を宣言する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.ObjectName">
            <summary>
            名称を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Ver">
            <summary>
            定義体バージョンを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Size">
            <summary>
            サイズを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Direction">
            <summary>
            方向を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.IsInch">
            <summary>
            用紙サイズインチ指定を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.GridWidth">
            <summary>
            グリッド幅を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.GridFit">
            <summary>
            グリッドにそうを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.DesignScale">
            <summary>
            表示倍率を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Type">
            <summary>
            種類を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Title">
            <summary>
            タイトルを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.StartX">
            <summary>
            X座標を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.StartY">
            <summary>
            Y座標を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.EndX">
            <summary>
            X座標を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.EndY">
            <summary>
            Y座標を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Color">
            <summary>
            色を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Style">
            <summary>
            線種を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.X">
            <summary>
            X座標を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Y">
            <summary>
            Y座標を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Width">
            <summary>
            幅を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Height">
            <summary>
            高さを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Angle">
            <summary>
            回転角度を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.BackColor">
            <summary>
            背景色を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.PaintColor">
            <summary>
            塗り潰し色を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Density">
            <summary>
            網掛けを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Text">
            <summary>
            文字列を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Vertical">
            <summary>
            縦書きを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Elastic">
            <summary>
            伸縮自在を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.FixingFontHeight">
            <summary>
            「フォント高さ固定」を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.StretchingExceedsSpecifiedNumber">
            <summary>
            指定桁越え伸縮
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.StretchingExceedsSpecifiedBytes">
            <summary>
            指定バイト越え伸縮
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.IsKintou">
            <summary>
            IsKintou幅を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.IsKintou_Hankaku">
            <summary>
            IsKintou_Hankaku幅を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.IsKintou_Hankaku_Kana">
            <summary>
            IsKintou_Hankaku_Kana幅を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Char_OutOfKintou">
            <summary>
            Char_OutOfKintou幅を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.IsKintouFrontBack">
            <summary>
            IsKintouFrontBack幅を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.NumOfSpaceFrontBack">
            <summary>
            NumOfSpaceFrontBack幅を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.OutLineWidth">
            <summary>
            アウトライン幅を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.OutLineColor">
            <summary>
            アウトライン色を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.PdfAutoCrInsertText">
            <summary>
            枠内自動折り返し
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.PdfCutTextByHeight">
            <summary>
            高さでカット
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Align">
            <summary>
            四角形の中の横位置を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.VAlign">
            <summary>
            四角形の中の縦位置を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Reverse">
            <summary>
            四角形の中の位置を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.R">
            <summary>
            丸さを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.TL">
            <summary>
            左上角を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.TR">
            <summary>
            右上角を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.BL">
            <summary>
            左下角を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.BR">
            <summary>
            右下角を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Thick">
            <summary>
            円弧の厚みを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Kind">
            <summary>
            バーコード種類を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.WriteDirect">
            <summary>
            バーコード描画種類を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Code">
            <summary>
            コードを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Soeji">
            <summary>
            添字表示を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Kintou">
            <summary>
            均等割付を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.StartStop">
            <summary>
            スタート・ストップコード付加を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.CodeSetABC">
            <summary>
            CODE128のコードセットを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.KuroBar">
            <summary>
            黒バー調整
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.ShiroBar">
            <summary>
            白バー調整
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Point">
            <summary>
            郵便カスタマバーコードのポイントを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.QrVersion">
            <summary>
            QRコードのバージョンを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.QrErrCorrect">
            <summary>
            QRコードのエラー訂正レベルを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.StringEncoding">
            <summary>
            全角文字コード(二次元バーコード)
            Encoding.GetEncoding()の引数は受け付けます。
            例："utf-8" / "shift-jis" / "932" ...等...
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.PDF417_SizeKind">
            <summary>
            データ列数・行数決定方法
            <c>AUTO</c> 自動サイズ(アスペクト比より決定)
            <c>COLUMNS</c> 指定列数に従う
            <c>ROWS</c> 指定行数に従う
            <c>COLUMNS_AND_LOWS</c> 指定列数・行数両方に従う(長方形の最小値)
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.PDF417_CodeRows">
            <summary>
            出力行数指定
            <c>3～90</c>
            SizeKindが出力行数指定の場合＝(自動サイズでない・列数指定でない場合)有効
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.PDF417_CodeColumns">
            <summary>
            出力データカラム数指定
            <c>1～30</c>
            SizeKindが出力列数指定の場合＝(自動サイズでない・行数指定でない場合)有効
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.PDF417_ErrorLevel">
            <summary>
            エラー訂正レベル
            <c>0～8</c>
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.PDF417_UseAutoErrorLevel">
            <summary>
            自動でエラー訂正レベルを決定(する・しない)
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.PDF417_AspectRatio">
            <summary>
            縦横アクセプト比
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.DataMatrix_CodeSize">
            <summary>
            シンボル コード サイズ
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.ImageSizeType">
            <summary>
            画像の拡大・縮小を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Agree">
            <summary>
            Yes/Noを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.IntervalX">
            <summary>
            X座標の間隔を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.IntervalY">
            <summary>
            Y座標の間隔を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.RepeatXYBoth">
            <summary>
            両方向へ繰り返しを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Italic">
            <summary>
            イタリックを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Bold">
            <summary>
            ボールドを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Underline">
            <summary>
            アンダーラインを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Strikeout">
            <summary>
            取り消し線を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Unit">
            <summary>
            高さの単位を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Index">
            <summary>
            Indexを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.AttrName">
            <summary>
            属性名を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Pos">
            <summary>
            位置を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Pattern">
            <summary>
            パターンを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.DashPitch">
            <summary>
            点線間隔を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.FontAttr">
            <summary>
            フォントを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.LineAttr">
            <summary>
            罫線を表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.HatchAttr">
            <summary>
            網掛けを表す属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Drawing">
            <summary>
            描画属性
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.Repeat">
            <summary>
            繰返し回数
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlAttr.name_">
            <summary>
            XML属性名
            </summary>
        </member>
        <member name="P:Pao.Reports.PmXmlAttr.Name">
            <summary>
            属性名を取得する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmXmlAttr.#ctor(System.String)">
            <summary>
            指定された属性名を持つPmXmlAttrオブジェクトを構築する
            </summary>
            <param name="name">属性名</param>
        </member>
        <member name="T:Pao.Reports.PmXmlNode">
            <summary>
            Reportで使用するXMLノード名を宣言する
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.PrintDefine">
            <summary>
            帳票定義体を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.PrintSetting">
            <summary>
            印刷設定を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.PrintAttrs">
            <summary>
            印刷属性表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Paper">
            <summary>
            印刷用紙を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Design">
            <summary>
            印刷用紙を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Order">
            <summary>
            オブジェクトの印刷順を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Csv">
            <summary>
            CSVを表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.CsvHeader">
            <summary>
            CSVファイルのタイトルを表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.CsvColumn">
            <summary>
            CSVファイルの列内容を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.PrintObjects">
            <summary>
            印刷オブジェクト群を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.DynamicAttrs">
            <summary>
            動的属性群を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.DynamicAttr">
            <summary>
            動的属性を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Point">
            <summary>
            座標を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Line">
            <summary>
            罫線（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Text">
            <summary>
            文字列（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Square">
            <summary>
            四角形（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Circle">
            <summary>
            円（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Barcode">
            <summary>
            バーコード（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Image">
            <summary>
            画像（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.ArtText">
            <summary>
            装飾文字（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Polygon">
            <summary>
            ポリゴン（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Page">
            <summary>
            ページ（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Value">
            <summary>
            動的出力データ（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.ChangeOrAddAttr">
            <summary>
            動的出力属性（動的）を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.FontAttr">
            <summary>
            フォント属性を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.LineAttr">
            <summary>
            罫線属性を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.HatchAttr">
            <summary>
            網掛け属性を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.Corner">
            <summary>
            角を表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.PrintData">
            <summary>
            印刷データを表すノード
            </summary>
        </member>
        <member name="F:Pao.Reports.PmXmlNode.name_">
            <summary>
            XMLノード名
            </summary>
        </member>
        <member name="P:Pao.Reports.PmXmlNode.Name">
            <summary>
            ノード名を取得する
            </summary>
        </member>
        <member name="M:Pao.Reports.PmXmlNode.#ctor(System.String)">
            <summary>
            指定されたノード名を持つPmXmlNodeオブジェクトを構築する
            </summary>
            <param name="name">ノード名</param>
        </member>
        <member name="T:Pao.Reports.PreviewSetting">
            <summary>
            印刷設定情報を読書きするクラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.me_">
            <summary>
            PreviewSettingオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.DEFAULT_HISTORY_SIZE">
            <summary>
            デフォルトの履歴保存数
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.NODE_ROOT">
            <summary>
            ルート要素
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.NODE_WINDOW">
            <summary>
            メインウィンドウ要素
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.NODE_WINDOW_WPF">
            <summary>
            WPF メインウィンドウ要素
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.NODE_HISTORY_GROUP">
            <summary>
            履歴グループ要素
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.NODE_HISTORY">
            <summary>
            履歴要素
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.NODE_OUTPUT_GROUP">
            <summary>
            出力履歴グループ要素
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_WINDOW_X">
            <summary>
            Window要素X座標
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_WINDOW_Y">
            <summary>
            Window要素Y座標
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_WINDOW_WIDTH">
            <summary>
            Window要素幅
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_WINDOW_HEIGHT">
            <summary>
            Window要素高さ
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_WINDOW_MAX">
            <summary>
            Window要素最大化表示
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_WINDOW_TOOLBAR">
            <summary>
            Window要素ツールバーの表示
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_WINDOW_TOOLBAR_SMALL_ICON">
            <summary>
            Window要素ツールバーアイコンの大・小
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_WINDOW_TOOLBAR_TEXT">
            <summary>
            Window要素ツールバーのテキストの表示
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_WINDOW_STATUSBAR">
            <summary>
            Window要素ステータスバーの表示
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_WINDOW_AUTOSCALE">
            <summary>
            Window要素ステータスバーの表示自動スケーリング
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_WINDOW_DOCWIDTH">
            <summary>
            Window要素のドキュメントフレームの幅
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_WINDOW_DOCUMENT">
            <summary>
            Window要素のドキュメントフレームの表示
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.ATTR_HISTORY_FILENAME">
            <summary>
            履歴要素のファイル名
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.SAVE_PATH_PREPE">
            <summary>
            印刷データ保存先
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.SAVE_PATH_PDF">
            <summary>
            PDF保存先
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.DEVICE_NAME">
            <summary>
            DeviceName
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.windowRect_">
            <summary>
            前回のウィンドウ位置
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.maximum_">
            <summary>
            最大化表示の場合true
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.setupFile_">
            <summary>
            設定ファイルへのパス
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.toolBar_">
            <summary>
            ツールバーの表示・非表示
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.statusBar_">
            <summary>
            ステータスバーの表示・非表示
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.autoScale_">
            <summary>
            自動スケーリング
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.docWidth_">
            <summary>
            ドキュメントフレームの幅
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.docFrame_">
            <summary>
            ドキュメントフレームの表示・非表示
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.history_">
            <summary>
            プレビュー読み込み履歴
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.SaveXmlPath_">
            <summary>
            印刷データ保存先
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.SavePdfPath_">
            <summary>
            PDF保存先
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.deviceName_">
            <summary>
            Screen デバイス名
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.smallToolBarIcon_">
            <summary>
            のツールバーに表示するアイコンの大・小
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewSetting.dispToolBarText_">
            <summary>
            ツールバーのテキストの表示・非表示
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewSetting.WindowRect">
            <summary>
            メインウィンドウの位置・サイズ
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewSetting.Maximum">
            <summary>
            メインウィンドウの最大化表示
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewSetting.ToolBar">
            <summary>
            ツールバーの表示・非表示
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewSetting.SmallToolBarIcon">
            <summary>
            ツールバーのアイコン大・小
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewSetting.DispToolBarText">
            <summary>
            ツールバーのテキスト表示・非表示
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewSetting.StatusBar">
            <summary>
            ステータスバーの表示・非表示
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewSetting.AutoScae">
            <summary>
            自動スケーリング
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewSetting.DocWidth">
            <summary>
            ドキュメントフレームの幅
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewSetting.DocFrame">
            <summary>
            ドキュメントフレームの表示・非表示
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewSetting.SaveXmlPath">
            <summary>
            印刷データ保存先
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewSetting.SavePdfPath">
            <summary>
            ドキュメントフレームの表示・非表示
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewSetting.DeviceName">
            <summary>
            ウィンドウのデバイス名
            </summary>
        </member>
        <member name="M:Pao.Reports.PreviewSetting.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.PreviewSetting.GetInstance">
            <summary>
            PreviewSettingオブジェクトを取得する
            </summary>
        </member>
        <member name="M:Pao.Reports.PreviewSetting.Save">
            <summary>
            現在の設定値を保存する
            </summary>
        </member>
        <member name="M:Pao.Reports.PreviewSetting._Load(System.String)">
            <summary>
            指定されたファイルから設定情報を読込む
            </summary>
            <param name="filename">設定ファイルへのパス</param>
        </member>
        <member name="M:Pao.Reports.PreviewSetting._SetCurrentSetting(System.Xml.XmlElement)">
            <summary>
            XML要素から設定値を取得する
            </summary>
            <param name="element">XML要素</param>
        </member>
        <member name="M:Pao.Reports.PreviewSetting._GetCurrentSetting(System.Xml.XmlDocument,System.Xml.XmlElement)">
            <summary>
            現在の設定内容のXML要素を取得する
            </summary>
            <param name="doc">XML要素が所属するXMLドキュメント</param>
            <param name="root">ルート要素</param>
        </member>
        <member name="M:Pao.Reports.PreviewSetting._DefaultSetup">
            <summary>
            デフォルト設定を行う
            </summary>
        </member>
        <member name="M:Pao.Reports.PreviewSetting._GetDefaultWindowRect">
            <summary>
            デフォルトのウィンドウサイズを取得する
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PreviewSetting.AddHistory(System.String)">
            <summary>
            指定されたファイル名を履歴に追加する
            </summary>
            <param name="filename">ファイル名</param>
        </member>
        <member name="M:Pao.Reports.PreviewSetting.GetHistoryFileName(System.Int32)">
            <summary>
            指定された履歴番号のファイル名を取得する
            </summary>
            <param name="index">履歴番号（０以上）</param>
            <returns></returns>
            <remarks>数字が大きいほど新しい履歴</remarks>
        </member>
        <member name="M:Pao.Reports.PreviewSetting.GetHistoryCount">
            <summary>
            履歴数を取得する
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PreviewZoom">
            <summary>
            表示倍率を管理するクラス
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom50">
            <summary>
            50%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom75">
            <summary>
            75%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom80">
            <summary>
            80%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom85">
            <summary>
            85%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom90">
            <summary>
            90%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom95">
            <summary>
            95%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom100">
            <summary>
            100%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom105">
            <summary>
            105%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom110">
            <summary>
            110%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom115">
            <summary>
            115%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom125">
            <summary>
            125%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom150">
            <summary>
            150%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.Zoom200">
            <summary>
            200%を表すPreviewZoomオブジェクト
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.name_">
            <summary>
            表示倍率の名称
            </summary>
        </member>
        <member name="F:Pao.Reports.PreviewZoom.zoom_">
            <summary>
            表示倍率
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewZoom.Name">
            <summary>
            表示倍率の名称
            </summary>
        </member>
        <member name="P:Pao.Reports.PreviewZoom.Zoom">
            <summary>
            表示倍率
            </summary>
        </member>
        <member name="M:Pao.Reports.PreviewZoom.#ctor(System.String,System.Single)">
            <summary>
            指定された値を持つPmDefTypeオブジェクトを構築する。
            </summary>
            <param name="name">表示倍率の名称</param>
            <param name="zoom">表示倍率</param>
        </member>
        <member name="M:Pao.Reports.PreviewZoom.GetHashCode">
            <summary>
            ハッシュコードを取得する
            </summary>
        </member>
        <member name="M:Pao.Reports.PreviewZoom.ToString">
            <summary>
            オブジェクトの文字列表現を取得する
            </summary>
        </member>
        <member name="M:Pao.Reports.PreviewZoom.GetPreviewZoom(System.String)">
            <summary>
            指定された名称と同等なPreviewZoomオブジェクトを取得する
            </summary>
            <param name="name">名称</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.PreviewZoom.GetPreviewZoom(System.Single)">
            <summary>
            指定された表示倍率と同等なPreviewZommオブジェクトを取得する
            </summary>
            <param name="zoom">表示倍率</param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.PrintObjectCreater">
            <summary>
            印刷オブジェクトを作成するユーティリティクラス
            </summary>
        </member>
        <member name="T:Pao.Reports.Report">
            <summary>
            Reportクラス
            </summary>
        </member>
        <member name="F:Pao.Reports.Report.define_">
            <summary>
            帳票定義体
            </summary>
        </member>
        <member name="F:Pao.Reports.Report.pages_">
            <summary>
            編集済みのページデータ
            </summary>
        </member>
        <member name="F:Pao.Reports.Report.editPage_">
            <summary>
            編集中のページデータ
            </summary>
        </member>
        <member name="F:Pao.Reports.Report.defFileName_">
            <summary>
            定義体ファイル名
            </summary>
        </member>
        <member name="F:Pao.Reports.Report.findString_">
            <summary>
            検索文字列
            </summary>
        </member>
        <member name="F:Pao.Reports.Report.full_">
            <summary>
            完全一致検索を行うかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.Report.EmailOfLicenseHolder">
            <summary>
            ライセンス保持者メールアドレス
            </summary>
        </member>
        <member name="P:Pao.Reports.Report.Pages">
            <summary>
            印刷ページ数
            </summary>
        </member>
        <member name="P:Pao.Reports.Report.FindString">
            <summary>
            検索文字列
            </summary>
        </member>
        <member name="P:Pao.Reports.Report.FullSearch">
            <summary>
            完全一致検索を行うかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.Report.CutByPage">
            <summary>
            ページでカットする(ラベルプリンタ・レシートプリンタ用)
            既定値：false
            </summary>
        </member>
        <member name="P:Pao.Reports.Report.DocumentName">
            <summary>
            印刷ドキュメント名
            </summary>
        </member>
        <member name="P:Pao.Reports.Report.AllPages">
            <summary>
            全ページ数
            </summary>
        </member>
        <member name="P:Pao.Reports.Report.ZoomPreview">
            <summary>
            プレビュー表示倍率
            </summary>
        </member>
        <member name="P:Pao.Reports.Report.SmallPreviewToolbarIcon">
            <summary>
            プレビュー画面のツールバーに小さいアイコンを表示する場合、true を指定。
            既定値： false (大きいアイコン)
            </summary>
        </member>
        <member name="P:Pao.Reports.Report.DispPreviewToolbarText">
            <summary>
            プレビュー画面のツールバーに、テキストを表示する場合、true。
            アイコンのみ出力して、テキストを表示しない場合、false。
            既定値： true (テキストを表示)
            </summary>
        </member>
        <member name="F:Pao.Reports.Report.appPath">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.Report.Clear">
            <summary>
            初期処理を行う
            </summary>
        </member>
        <member name="M:Pao.Reports.Report.ClearData">
            <summary>
            印刷データ初期処理を行う
            </summary>
        </member>
        <member name="M:Pao.Reports.Report.LoadDefFile(System.String)">
            <summary>
            帳票定義体を読込む。
            </summary>
            <param name="name">帳票定義体のファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.Report.ChangeDefFile(System.String)">
            <summary>
            帳票定義体を変更する。
            (データの再セット不要)
            </summary>
            <param name="name">帳票定義体のファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.Report.LoadXMLFile(System.String)">
            <summary>
            印刷データ（XML形式）を読込む
            </summary>
            <param name="name">印刷データ（XML形式）のファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.Report.LoadData(System.Byte[])">
            <summary>
            印刷データを読み込む
            </summary>
            <param name="data">印刷データ</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Report.PageStart">
            <summary>
            ページの開始を宣言する。
            </summary>
        </member>
        <member name="M:Pao.Reports.Report.PageEnd">
            <summary>
            ページの終了を宣言する。
            </summary>
        </member>
        <member name="M:Pao.Reports.Report.Write(System.String,System.String)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="value">設定する値</param>
        </member>
        <member name="M:Pao.Reports.Report.Write(System.String,System.String,System.Int64)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="value">設定する値</param>
            <param name="index">設定するオブジェクトのインデックス（行番号等）</param>
        </member>
        <member name="M:Pao.Reports.Report.Write(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="value">設定する値</param>
            <param name="indexX">設定するオブジェクトのインデックス（行番号）</param>
            <param name="indexY">設定するオブジェクトのインデックス（列番号）</param>
        </member>
        <member name="M:Pao.Reports.Report.Write(System.String,System.Int64)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="index">設定するオブジェクトのインデックス（行番号等）</param>
        </member>
        <member name="M:Pao.Reports.Report.Write(System.String,System.Int64,System.Int64)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="indexX">設定するオブジェクトのインデックス（行番号）</param>
            <param name="indexY">設定するオブジェクトのインデックス（列番号）</param>
        </member>
        <member name="F:Pao.Reports.Report.PrintFlg">
            <summary>
            印刷を行う。
            </summary>
            <return></return>
        </member>
        <member name="M:Pao.Reports.Report._GetDocumentName">
            <summary>
            帳票名を取得する
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Report.SaveXMLFile(System.String)">
            <summary>
            指定されたファイルにXML形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.Report.SaveData">
            <summary>
            ZIP形式の印刷データをバイナリで返す。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Report.Save(System.String,System.String)">
            <summary>
            現在のデータの保存を行う
            </summary>
            <param name="group">グループ名</param>
            <param name="name">印刷データ名</param>
            <returns></returns>
            <remarks>XML形式で出力する。また出力履歴に書き込みを行う</remarks>
        </member>
        <member name="M:Pao.Reports.Report.SaveSVGFile(System.String)">
            <summary>
            指定されたファイルにSVG形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.Report.SaveSVGZFile(System.String)">
            <summary>
            指定されたファイルにSVGZ形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.Report.SavePDF(System.String)">
            <summary>
            指定されたファイルにPDF形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.Report.WpfPreview(System.Windows.Controls.DocumentViewer)">
            <summary>
            指定されたDocumentViewerにの印刷データをプレビューする。
            </summary>
            <param name="dw">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.Report.SaveXPS(System.String)">
            <summary>
            指定されたファイルにXPS形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.Report.Search(System.String,System.Boolean)">
            <summary>
            指定された文字列が存在するか調べる
            </summary>
            <param name="find">検索文字列</param>
            <param name="full">完全一致の場合True</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Report.IsPrinterInstall">
            <summary>
            プリンタがインストールされているかどうか調べる
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Report.IsDefine(System.String)">
            <summary>
            指定されたファイルが帳票定義体かどうか調べる
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Report.IsPrintData(System.String)">
            <summary>
            指定されたファイルが印刷データかどうか調べる
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Report.GetDefFileName(System.Int32)">
            <summary>
            定義体ファイル名を取得する
            </summary>
            <param name="page">ページ番号</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.Report.Preview">
            <summary>
            プレビュー表示する
            </summary>
        </member>
        <member name="T:Pao.Reports.errPrinterIsNotInstalled">
            <summary>
            プリンタがインストールされていないエラー
            </summary>
        </member>
        <member name="M:Pao.Reports.errPrinterIsNotInstalled.#ctor">
            <summary>
            プリンタがインストールされていないエラー
            </summary>
        </member>
        <member name="M:Pao.Reports.errPrinterIsNotInstalled.#ctor(System.Exception)">
            <summary>
            プリンタがインストールされていないエラー
            </summary>
            <param name="innerException"></param>
        </member>
        <member name="T:Pao.Reports.ReportCreator">
            <summary>
            Reportのオブジェクトを作成するユーティリティクラス
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportCreator.GetReport">
            <summary>
            Reportオブジェクトを取得する
            </summary>
            <returns>印刷オブジェクト</returns>
        </member>
        <member name="M:Pao.Reports.ReportCreator.GetPreview">
            <summary>
            プレビュー画面のオブジェクトを取得する
            </summary>
            <returns>プレビューオブジェクト</returns>
        </member>
        <member name="M:Pao.Reports.ReportCreator.GetPreview(System.String)">
            <summary>
            プレビュー画面のオブジェクトを取得する
            </summary>
            <param name="filename">レポート定義ファイル名 or 印刷データファイル名</param>
            <returns>プレビューオブジェクト</returns>
        </member>
        <member name="M:Pao.Reports.ReportCreator.GetPdf">
            <summary>
            PDFオブジェクトを取得する
            </summary>
            <returns>PDFオブジェクト</returns>
        </member>
        <member name="M:Pao.Reports.ReportCreator.GetImagePdf">
            <summary>
            イメージPDFオブジェクトを取得する
            </summary>
            <returns>イメージPDFオブジェクト</returns>
        </member>
        <member name="T:Pao.Reports.ReportImagePDF">
            <summary>
            ReportPDF の概要の説明です。
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportImagePDF.SavePDF(System.String)">
            <summary>
            指定されたファイルにPDF形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="T:Pao.Reports.ReportPDF">
            <summary>
            ReportPDF の概要の説明です。
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPDF.SavePDF(System.String)">
            <summary>
            指定されたファイルにPDF形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="T:Pao.Reports.ReportPreview">
            <summary>
            Reportプレビュー画面
            </summary>
        </member>
        <member name="F:Pao.Reports.ReportPreview.DoExe">
            <summary>
            Exe起動されているか？
            </summary>
        </member>
        <member name="F:Pao.Reports.ReportPreview.report_">
            <summary>
            Report本体
            </summary>
        </member>
        <member name="F:Pao.Reports.ReportPreview.maxPage_">
            <summary>
            表示できるページ数
            </summary>
        </member>
        <member name="F:Pao.Reports.ReportPreview.openFilename_">
            <summary>
            現在開いているファイル名
            </summary>
        </member>
        <member name="F:Pao.Reports.ReportPreview.findString_">
            <summary>
            検索文字列
            </summary>
        </member>
        <member name="F:Pao.Reports.ReportPreview.searchResultAfter_">
            <summary>
            検索後、検索結果ダイアログをアクティブにしたかどうかを表すフラグ
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview.#ctor">
            <summary>
            デフォルトコンストラクタ
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview.#ctor(System.String)">
            <summary>
            指定されたファイルを読込み表示するReportPreviewオブジェクトを構築する
            </summary>
            <param name="filename">読込むファイルの名称</param>
        </member>
        <member name="M:Pao.Reports.ReportPreview.Dispose(System.Boolean)">
            <summary>
            使用されているリソースに後処理を実行します。
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview.InitializeComponent">
            <summary>
            デザイナ サポートに必要なメソッドです。このメソッドの内容を
            コード エディタで変更しないでください。
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview._Initialize">
            <summary>
            初期処理
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview.SelectedZoom(System.Object,System.EventArgs)">
            <summary>
            表示倍率の選択
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pao.Reports.ReportPreview._MovePage(System.Int32)">
            <summary>
            現在表示しているページから指定された数移動する
            </summary>
            <param name="page">移動するページ数</param>
        </member>
        <member name="M:Pao.Reports.ReportPreview._ShowPage(System.Int32)">
            <summary>
            指定されたページを表示する
            </summary>
            <param name="page">表示するページ番号</param>
        </member>
        <member name="M:Pao.Reports.ReportPreview._AutoLoad(System.String)">
            <summary>
            定義体とデータを自動判別して読込む
            </summary>
            <param name="filename">読込むファイル名</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.ReportPreview._OpenDefine">
            <summary>
            レポート定義ファイルを読込む
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview._OpenPrintData">
            <summary>
            印刷データを読込む
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview._Load(System.String,System.Boolean,System.Boolean)">
            <summary>
            指定されたファイルから印刷データ又は定義体を読込む
            </summary>
            <param name="filename">印刷データのファイル名</param>
            <param name="define">定義体を読込む場合にtrueとする</param>
            <param name="msg">メッセージを表示する場合にtrueとする</param>
        </member>
        <member name="M:Pao.Reports.ReportPreview._SaveAs">
            <summary>
            名前を付けて保存
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview._SaveData(System.String)">
            <summary>
            指定されたファイルにデータを保存する
            </summary>
            <param name="filename">保存ファイル名</param>
        </member>
        <member name="M:Pao.Reports.ReportPreview._SavePDF(System.String)">
            <summary>
            指定されたファイルにデータを保存する
            </summary>
            <param name="filename">保存ファイル名</param>
        </member>
        <member name="M:Pao.Reports.ReportPreview.SavePDF(System.String)">
            <summary>
            指定されたファイルにPDF形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.ReportPreview.SavePDF(System.IO.Stream)">
            <summary>
            指定されたストリームにPDF形式の印刷データを保存する。
            </summary>
            <param name="stream">印刷データを保存するストリーム名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.ReportPreview.SaveXPS(System.String)">
            <summary>
            指定されたファイルにXPS形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.ReportPreview.WpfPreview(System.Windows.Controls.DocumentViewer)">
            <summary>
            指定されたDocumentViewerにの印刷データをプレビューする。
            </summary>
            <param name="dw">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.ReportPreview._Seach">
            <summary>
            検索
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview._SeachRelease">
            <summary>
            検索文字列の強調表示を解除する
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview._Print">
            <summary>
            印刷
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview._Help">
            <summary>
            オンラインヘルプ
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview._ShowErrorMsg(Pao.Reports.PmResource)">
            <summary>
            エラーメッセージを表示する
            </summary>
            <param name="res">PmResourceオブジェクト</param>
        </member>
        <member name="M:Pao.Reports.ReportPreview._ToolBarEnabled(System.Boolean)">
            <summary>
            ツールバーの有効・無効を設定する
            </summary>
            <param name="enabled"></param>
        </member>
        <member name="M:Pao.Reports.ReportPreview._ChangePageEnabled">
            <summary>
            ページ移動に関するメニューとツールバーの有効・無効を変更する
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview._LoadDataSuccess">
            <summary>
            データの読み込みに成功した場合の処理
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview._LoadDataFailed">
            <summary>
            データの読み込みに失敗した場合の処理
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview.HistorySelected(System.Object,Pao.Reports.SelectDocumentEventArgs)">
            <summary>
            履歴パネルにて履歴が選択されたときのイベント
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pao.Reports.ReportPreview._PreviewProcess">
            <summary>
            プレビュー表示処理
            </summary>
        </member>
        <member name="P:Pao.Reports.ReportPreview.EmailOfLicenseHolder">
            <summary>
            ライセンス保持者メールアドレス
            </summary>
        </member>
        <member name="P:Pao.Reports.ReportPreview.Pages">
            <summary>
            印刷ページ数
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview.LoadDefFile(System.String)">
            <summary>
            レポート定義ファイルを読込む。
            </summary>
            <param name="name">レポート定義ファイルのファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.ReportPreview.ChangeDefFile(System.String)">
            <summary>
            レポート定義ファイルを変更する。
            (データの再セット不要)
            </summary>
            <param name="name">レポート定義ファイルのファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.ReportPreview.LoadXMLFile(System.String)">
            <summary>
            印刷データ（XML形式）を読込む
            </summary>
            <param name="name">印刷データ（XML形式）のファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.ReportPreview.LoadData(System.Byte[])">
            <summary>
            印刷データを読み込む
            </summary>
            <param name="data">印刷データ</param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.ReportPreview.PageStart">
            <summary>
            ページの開始を宣言する。
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview.PageEnd">
            <summary>
            ページの終了を宣言する。
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview.Write(System.String,System.String)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="value">設定する値</param>
        </member>
        <member name="M:Pao.Reports.ReportPreview.Write(System.String,System.String,System.Int64)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="value">設定する値</param>
            <param name="index">設定するオブジェクトのインデックス（行番号等）</param>
        </member>
        <member name="M:Pao.Reports.ReportPreview.Write(System.String,System.Int64)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="index">設定するオブジェクトのインデックス（行番号等）</param>
        </member>
        <member name="M:Pao.Reports.ReportPreview.Write(System.String,System.String,System.Int64,System.Int64)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="value">設定する値</param>
            <param name="indexX">設定するオブジェクトのインデックス（列番号）</param>
            <param name="indexY">設定するオブジェクトのインデックス（行番号）</param>
        </member>
        <member name="M:Pao.Reports.ReportPreview.Write(System.String,System.Int64,System.Int64)">
            <summary>
            指定されたオブジェクト名に指定された値を設定する。
            </summary>
            <param name="name">設定するオブジェクト名</param>
            <param name="indexX">設定するオブジェクトのインデックス（列番号）</param>
            <param name="indexY">設定するオブジェクトのインデックス（行番号）</param>
        </member>
        <member name="M:Pao.Reports.ReportPreview.SaveXMLFile(System.String)">
            <summary>
            指定されたファイルにXML形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.ReportPreview.SaveData">
            <summary>
            ZIP形式のバイナリデータを返す。
            </summary>
            <return></return>
        </member>
        <member name="M:Pao.Reports.ReportPreview.SaveSVGFile(System.String)">
            <summary>
            指定されたファイルにSVG形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.ReportPreview.SaveSVGZFile(System.String)">
            <summary>
            指定されたファイルにSVGZ形式の印刷データを保存する。
            </summary>
            <param name="name">印刷データを保存するファイル名</param>
            <return></return>
        </member>
        <member name="M:Pao.Reports.ReportPreview.IsDefine(System.String)">
            <summary>
            指定されたファイルがレポート定義ファイルかどうか調べる
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Reports.ReportPreview.IsPrintData(System.String)">
            <summary>
            指定されたファイルが印刷データかどうか調べる
            </summary>
            <param name="filename"></param>
            <returns></returns>
        </member>
        <member name="F:Pao.Reports.ReportPreview.displayDialog_">
            <summary>
            プレビュー表示する
            </summary>
        </member>
        <member name="P:Pao.Reports.ReportPreview.CutByPage">
            <summary>
            ページでカットする(ラベルプリンタ・レシートプリンタ用)
            既定値：false
            </summary>
        </member>
        <member name="P:Pao.Reports.ReportPreview.DocumentName">
            <summary>
            印刷ドキュメント名
            </summary>
        </member>
        <member name="P:Pao.Reports.ReportPreview.AllPages">
            <summary>
            全ページ数
            </summary>
        </member>
        <member name="P:Pao.Reports.ReportPreview.ZoomPreview">
            <summary>
            プレビュー表示倍率
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreview._GetPreviewName">
            <summary>
            帳票名を取得する
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.ReportsData">
            <summary>
            Reports.netの印刷データ
            </summary>
        </member>
        <member name="T:Pao.Reports.SelectDocumentEventArgs">
            <summary>
            ドキュメントが選択されたときに発生するイベント
            </summary>
        </member>
        <member name="F:Pao.Reports.SelectDocumentEventArgs.fileName_">
            <summary>
            ファイル名
            </summary>
        </member>
        <member name="M:Pao.Reports.SelectDocumentEventArgs.#ctor(System.String)">
            <summary>
            指定されたファイル名を持つSelectDocumentEventArgsオブジェクトを構築する
            </summary>
            <param name="filename">選択されたファイル名</param>
        </member>
        <member name="P:Pao.Reports.SelectDocumentEventArgs.FileName">
            <summary>
            ファイル名を取得する
            </summary>
        </member>
        <member name="T:Pao.Reports.PaoC">
            <summary>
            Util の概要の説明です。
            </summary>
        </member>
        <member name="F:Pao.Reports.PaoC.DEFAULT_DOCUMENT_NAME">
            <summary>
            デフォルトの印刷時のドキュメント名
            </summary>
        </member>
        <member name="M:Pao.Reports.Util2.IsRunningFromDevelopmentEnvironment">
            <summary>
            開発環境から起動されているかどうかを判定する
            </summary>
            <returns>開発環境から起動されている場合はtrue、それ以外はfalse</returns>
        </member>
        <member name="M:Pao.Reports.Util2.GetParentProcess(System.Diagnostics.Process)">
            <summary>
            現在のプロセスの親プロセスを取得する
            </summary>
            <param name="process">現在のプロセス</param>
            <returns>親プロセス、または見つからない場合はnull</returns>
        </member>
        <member name="M:Pao.Reports.Util2.GetParentProcessWindows(System.Diagnostics.Process)">
            <summary>
            Windows 環境で親プロセスを取得する
            </summary>
            <param name="process">現在のプロセス</param>
            <returns>親プロセス、または見つからない場合はnull</returns>
        </member>
        <member name="M:Pao.Reports.Util2.GetParentProcessUnix(System.Diagnostics.Process)">
            <summary>
            Unix（Linux/macOS）環境で親プロセスを取得する
            </summary>
            <param name="process">現在のプロセス</param>
            <returns>親プロセス、または見つからない場合はnull</returns>
        </member>
        <member name="M:Pao.Reports.Util3.IsRunningFromDevelopmentEnvironment">
            <summary>
            開発環境から起動されているかどうかを判定する（完全DPI安全版）
            </summary>
            <returns>開発環境から起動されている場合はtrue、それ以外はfalse</returns>
        </member>
        <member name="M:Pao.Reports.Util3.IsDebugBuild">
            <summary>
            デバッグビルドかどうかを判定
            </summary>
        </member>
        <member name="M:Pao.Reports.Util3.IsVisualStudioEnvironment">
            <summary>
            Visual Studio 環境変数をチェック
            </summary>
        </member>
        <member name="M:Pao.Reports.Util3.IsRunningFromDebugPath">
            <summary>
            デバッグパスから実行されているかチェック
            </summary>
        </member>
        <member name="M:Pao.Reports.Util3.GetParentProcessIdSafe(System.Int32)">
            <summary>
            WMI を使って親プロセス ID を取得する（.NET Framework 2.0 対応版）
            ※ 取得できない場合は 0 を返す
            </summary>
            <param name="processId">子プロセスの ID</param>
            <returns>親プロセスの ID（失敗時は 0）</returns>
        </member>
        <member name="M:Pao.Reports.Util3.IsParentDevelopmentProcess">
            <summary>
            親プロセスが開発環境（Visual Studio / VSCode / Rider など）かどうか判定
            </summary>
            <returns>true = 開発環境から起動されている</returns>
        </member>
        <member name="M:Pao.Reports.Util3.IsRunningFromCommandLine">
            <summary>
            コマンドライン引数から開発環境判定（DPI安全版）
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.Deflater">
             <summary>
             This is the Deflater class.  The deflater class compresses input
             with the deflate algorithm described in RFC 1951.  It has several
             compression levels and three different strategies described below.
            
             This class is <i>not</i> thread safe.  This is inherent in the API, due
             to the split of deflate and setInput.
             
             author of the original java version : Jochen Hoenicke
             </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Deflater.BEST_COMPRESSION">
            <summary>
            The best and slowest compression level.  This tries to find very
            long and distant string repetitions.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Deflater.BEST_SPEED">
            <summary>
            The worst but fastest compression level.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Deflater.DEFAULT_COMPRESSION">
            <summary>
            The default compression level.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Deflater.NO_COMPRESSION">
            <summary>
            This level won't compress at all but output uncompressed blocks.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Deflater.DEFLATED">
            <summary>
            The compression method.  This is the only method supported so far.
            There is no need to use this constant at all.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.#ctor">
            <summary>
            Creates a new deflater with default compression level.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.#ctor(System.Int32)">
            <summary>
            Creates a new deflater with given compression level.
            </summary>
            <param name="level">
            the compression level, a value between NO_COMPRESSION
            and BEST_COMPRESSION, or DEFAULT_COMPRESSION.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">if lvl is out of range.</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.#ctor(System.Int32,System.Boolean)">
            <summary>
            Creates a new deflater with given compression level.
            </summary>
            <param name="level">
            the compression level, a value between NO_COMPRESSION
            and BEST_COMPRESSION.
            </param>
            <param name="noZlibHeaderOrFooter">
            true, if we should suppress the Zlib/RFC1950 header at the
            beginning and the adler checksum at the end of the output.  This is
            useful for the GZIP/PKZIP formats.
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">if lvl is out of range.</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.Reset">
            <summary>
            Resets the deflater.  The deflater acts afterwards as if it was
            just created with the same compression level and strategy as it
            had before.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Deflater.Adler">
            <summary>
            Gets the current adler checksum of the data that was processed so far.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Deflater.TotalIn">
            <summary>
            Gets the number of input bytes processed so far.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Deflater.TotalOut">
            <summary>
            Gets the number of output bytes so far.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.Flush">
            <summary>
            Flushes the current input block.  Further calls to deflate() will
            produce enough output to inflate everything in the current input
            block.  This is not part of Sun's JDK so I have made it package
            private.  It is used by DeflaterOutputStream to implement
            flush().
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.Finish">
            <summary>
            Finishes the deflater with the current input block.  It is an error
            to give more input after this method was called.  This method must
            be called to force all bytes to be flushed.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Deflater.IsFinished">
            <summary>
            Returns true if the stream was finished and no more output bytes
            are available.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Deflater.IsNeedingInput">
            <summary>
            Returns true, if the input buffer is empty.
            You should then call setInput(). 
            NOTE: This method can also return true when the stream
            was finished.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.SetInput(System.Byte[])">
            <summary>
            Sets the data which should be compressed next.  This should be only
            called when needsInput indicates that more input is needed.
            If you call setInput when needsInput() returns false, the
            previous input that is still pending will be thrown away.
            The given byte array should not be changed, before needsInput() returns
            true again.
            This call is equivalent to <code>setInput(input, 0, input.length)</code>.
            </summary>
            <param name="input">
            the buffer containing the input data.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if the buffer was finished() or ended().
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the data which should be compressed next.  This should be
            only called when needsInput indicates that more input is needed.
            The given byte array should not be changed, before needsInput() returns
            true again.
            </summary>
            <param name="input">
            the buffer containing the input data.
            </param>
            <param name="offset">
            the start of the data.
            </param>
            <param name="count">
            the number of data bytes of input.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if the buffer was Finish()ed or if previous input is still pending.
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.SetLevel(System.Int32)">
            <summary>
            Sets the compression level.  There is no guarantee of the exact
            position of the change, but if you call this when needsInput is
            true the change of compression level will occur somewhere near
            before the end of the so far given input.
            </summary>
            <param name="level">
            the new compression level.
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.GetLevel">
            <summary>
            Get current compression level
            </summary>
            <returns>Returns the current compression level</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.SetStrategy(Pao.Reports.Zip.Compression.DeflateStrategy)">
            <summary>
            Sets the compression strategy. Strategy is one of
            DEFAULT_STRATEGY, HUFFMAN_ONLY and FILTERED.  For the exact
            position where the strategy is changed, the same as for
            SetLevel() applies.
            </summary>
            <param name="strategy">
            The new compression strategy.
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.Deflate(System.Byte[])">
            <summary>
            Deflates the current input block with to the given array.
            </summary>
            <param name="output">
            The buffer where compressed data is stored
            </param>
            <returns>
            The number of compressed bytes added to the output, or 0 if either
            IsNeedingInput() or IsFinished returns true or length is zero.
            </returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.Deflate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Deflates the current input block to the given array.
            </summary>
            <param name="output">
            Buffer to store the compressed data.
            </param>
            <param name="offset">
            Offset into the output array.
            </param>
            <param name="length">
            The maximum number of bytes that may be stored.
            </param>
            <returns>
            The number of compressed bytes added to the output, or 0 if either
            needsInput() or finished() returns true or length is zero.
            </returns>
            <exception cref="T:System.InvalidOperationException">
            If Finish() was previously called.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If offset or length don't match the array length.
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.SetDictionary(System.Byte[])">
            <summary>
            Sets the dictionary which should be used in the deflate process.
            This call is equivalent to <code>setDictionary(dict, 0, dict.Length)</code>.
            </summary>
            <param name="dictionary">
            the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            if SetInput () or Deflate () were already called or another dictionary was already set.
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Deflater.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the dictionary which should be used in the deflate process.
            The dictionary is a byte array containing strings that are
            likely to occur in the data which should be compressed.  The
            dictionary is not stored in the compressed output, only a
            checksum.  To decompress the output you need to supply the same
            dictionary again.
            </summary>
            <param name="dictionary">
            The dictionary data
            </param>
            <param name="index">
            The index where dictionary information commences.
            </param>
            <param name="count">
            The number of bytes in the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            If SetInput () or Deflate() were already called or another dictionary was already set.
            </exception>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Deflater.level">
            <summary>
            Compression level.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Deflater.noZlibHeaderOrFooter">
            <summary>
            If true no Zlib/RFC1950 headers or footers are generated
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Deflater.state">
            <summary>
            The current state.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Deflater.totalOut">
            <summary>
            The total bytes of output written.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Deflater.pending">
            <summary>
            The pending output.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Deflater.engine">
            <summary>
            The deflater engine.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.DeflaterConstants">
            <summary>
            This class contains constants used for deflation.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.DEBUGGING">
            <summary>
            Set to true to enable debugging
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.STORED_BLOCK">
            <summary>
            Written to Zip file to identify a stored block
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.STATIC_TREES">
            <summary>
            Identifies static tree in Zip file
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.DYN_TREES">
            <summary>
            Identifies dynamic tree in Zip file
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.PRESET_DICT">
            <summary>
            Header flag indicating a preset dictionary for deflation
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.DEFAULT_MEM_LEVEL">
            <summary>
            Sets internal buffer sizes for Huffman encoding
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.MAX_MATCH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.MIN_MATCH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.MAX_WBITS">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.WSIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.WMASK">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.HASH_BITS">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.HASH_SIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.HASH_MASK">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.HASH_SHIFT">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.MIN_LOOKAHEAD">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.MAX_DIST">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.PENDING_BUF_SIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.MAX_BLOCK_SIZE">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.DEFLATE_STORED">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.DEFLATE_FAST">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.DEFLATE_SLOW">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.GOOD_LENGTH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.MAX_LAZY">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.NICE_LENGTH">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.MAX_CHAIN">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterConstants.COMPR_FUNC">
            <summary>
            Internal compression engine constant
            </summary>		
        </member>
        <member name="T:Pao.Reports.Zip.Compression.DeflateStrategy">
            <summary>
            Strategies for deflater
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflateStrategy.Default">
            <summary>
            The default strategy
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflateStrategy.Filtered">
            <summary>
            This strategy will only allow longer string repetitions.  It is
            useful for random data with a small character set.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflateStrategy.HuffmanOnly">
            <summary>
            This strategy will not look for string repetitions at all.  It
            only encodes with Huffman trees (which means, that more common
            characters get a smaller encoding.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.DeflaterEngine">
            <summary>
            Low level compression engine for deflate algorithm which uses a 32K sliding window
            with secondary compression from Huffman/Shannon-Fano codes.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterEngine.#ctor(Pao.Reports.Zip.Compression.DeflaterPending)">
            <summary>
            Construct instance with pending buffer
            </summary>
            <param name="pending">
            Pending buffer to use
            </param>>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterEngine.Deflate(System.Boolean,System.Boolean)">
            <summary>
            Deflate drives actual compression of data
            </summary>
            <param name="flush">True to flush input buffers</param>
            <param name="finish">Finish deflation with the current input.</param>
            <returns>Returns true if progress has been made.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterEngine.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets input data to be deflated.  Should only be called when <code>NeedsInput()</code>
            returns true
            </summary>
            <param name="buffer">The buffer containing input data.</param>
            <param name="offset">The offset of the first byte of data.</param>
            <param name="count">The number of bytes of data to use as input.</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterEngine.NeedsInput">
            <summary>
            Determines if more <see cref="M:Pao.Reports.Zip.Compression.DeflaterEngine.SetInput(System.Byte[],System.Int32,System.Int32)">input</see> is needed.
            </summary>		
            <returns>Return true if input is needed via <see cref="M:Pao.Reports.Zip.Compression.DeflaterEngine.SetInput(System.Byte[],System.Int32,System.Int32)">SetInput</see></returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterEngine.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set compression dictionary
            </summary>
            <param name="buffer">The buffer containing the dictionary data</param>
            <param name="offset">The offset in the buffer for the first byte of data</param>
            <param name="length">The length of the dictionary data.</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterEngine.Reset">
            <summary>
            Reset internal state
            </summary>		
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterEngine.ResetAdler">
            <summary>
            Reset Adler checksum
            </summary>		
        </member>
        <member name="P:Pao.Reports.Zip.Compression.DeflaterEngine.Adler">
            <summary>
            Get current value of Adler checksum
            </summary>		
        </member>
        <member name="P:Pao.Reports.Zip.Compression.DeflaterEngine.TotalIn">
            <summary>
            Total data processed
            </summary>		
        </member>
        <member name="P:Pao.Reports.Zip.Compression.DeflaterEngine.Strategy">
            <summary>
            Get/set the <see cref="T:Pao.Reports.Zip.Compression.DeflateStrategy">deflate strategy</see>
            </summary>		
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterEngine.SetLevel(System.Int32)">
            <summary>
            Set the deflate level (0-9)
            </summary>
            <param name="level">The value to set the level to.</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterEngine.FillWindow">
            <summary>
            Fill the window
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterEngine.InsertString">
            <summary>
            Inserts the current string in the head hash and returns the previous
            value for this hash.
            </summary>
            <returns>The previous hash value</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterEngine.FindLongestMatch(System.Int32)">
             <summary>
             Find the best (longest) string in the window matching the 
             string starting at strstart.
            
             Preconditions:
             <code>
             strstart + MAX_MATCH &lt;= window.length.</code>
             </summary>
             <param name="curMatch"></param>
             <returns>True if a match greater than the minimum length is found</returns>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterEngine.head">
            <summary>
            Hashtable, hashing three characters to an index for window, so
            that window[index]..window[index+2] have this hash code.  
            Note that the array should really be unsigned short, so you need
            to and the values with 0xffff.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterEngine.prev">
            <summary>
            <code>prev[index &amp; WMASK]</code> points to the previous index that has the
            same hash code as the string starting at index.  This way 
            entries with the same hash code are in a linked list.
            Note that the array should really be unsigned short, so you need
            to and the values with 0xffff.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterEngine.strstart">
            <summary>
            Points to the current character in the window.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterEngine.lookahead">
            <summary>
            lookahead is the number of characters starting at strstart in
            window that are valid.
            So window[strstart] until window[strstart+lookahead-1] are valid
            characters.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterEngine.window">
            <summary>
            This array contains the part of the uncompressed stream that 
            is of relevance.  The current character is indexed by strstart.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterEngine.compressionFunction">
            <summary>
            The current compression function.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterEngine.inputBuf">
            <summary>
            The input data for compression.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterEngine.totalIn">
            <summary>
            The total bytes of input read.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterEngine.inputOff">
            <summary>
            The offset into inputBuf, where input data starts.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterEngine.inputEnd">
            <summary>
            The end offset of the input data.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterEngine.adler">
            <summary>
            The adler checksum
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.DeflaterHuffman">
            <summary>
            This is the DeflaterHuffman class.
            
            This class is <i>not</i> thread safe.  This is inherent in the API, due
            to the split of Deflate and SetInput.
            
            author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.Tree.Reset">
            <summary>
            Resets the internal state of the tree
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.Tree.CheckEmpty">
            <summary>
            Check that all frequencies are zero
            </summary>
            <exception cref="T:Pao.Reports.PaoReportsBaseException">
            At least one frequency is non-zero
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.Tree.SetStaticCodes(System.Int16[],System.Byte[])">
            <summary>
            Set static codes and length
            </summary>
            <param name="staticCodes">new codes</param>
            <param name="staticLengths">length for new codes</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.Tree.BuildCodes">
            <summary>
            Build dynamic codes and lengths
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.Tree.GetEncodedLength">
            <summary>
            Get encoded length
            </summary>
            <returns>Encoded length, the sum of frequencies * lengths</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.Tree.CalcBLFreq(Pao.Reports.Zip.Compression.DeflaterHuffman.Tree)">
            <summary>
            Scan a literal or distance tree to determine the frequencies of the codes
            in the bit length tree.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.Tree.WriteTree(Pao.Reports.Zip.Compression.DeflaterHuffman.Tree)">
            <summary>
            Write tree values
            </summary>
            <param name="blTree">Tree to write</param>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.DeflaterHuffman.pending">
            <summary>
            Pending buffer to use
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.#ctor(Pao.Reports.Zip.Compression.DeflaterPending)">
            <summary>
            Construct instance with pending buffer
            </summary>
            <param name="pending">Pending buffer to use</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.Reset">
            <summary>
            Reset internal state
            </summary>		
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.SendAllTrees(System.Int32)">
            <summary>
            Write all trees to pending buffer
            </summary>
            <param name="blTreeCodes">The number/rank of treecodes to send.</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.CompressBlock">
            <summary>
            Compress current buffer writing data to pending buffer
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.FlushStoredBlock(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Flush block to output with no compression
            </summary>
            <param name="stored">Data to write</param>
            <param name="storedOffset">Index of first byte to write</param>
            <param name="storedLength">Count of bytes to write</param>
            <param name="lastBlock">True if this is the last block</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.FlushBlock(System.Byte[],System.Int32,System.Int32,System.Boolean)">
            <summary>
            Flush block to output with compression
            </summary>		
            <param name="stored">Data to flush</param>
            <param name="storedOffset">Index of first byte to flush</param>
            <param name="storedLength">Count of bytes to flush</param>
            <param name="lastBlock">True if this is the last block</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.IsFull">
            <summary>
            Get value indicating if internal buffer is full
            </summary>
            <returns>true if buffer is full</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.TallyLit(System.Int32)">
            <summary>
            Add literal to buffer
            </summary>
            <param name="literal">Literal value to add to buffer.</param>
            <returns>Value indicating internal buffer is full</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.TallyDist(System.Int32,System.Int32)">
            <summary>
            Add distance code and length to literal and distance trees
            </summary>
            <param name="distance">Distance code</param>
            <param name="length">Length</param>
            <returns>Value indicating if internal buffer is full</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterHuffman.BitReverse(System.Int32)">
            <summary>
            Reverse the bits of a 16 bit value.
            </summary>
            <param name="toReverse">Value to reverse bits</param>
            <returns>Value with bits reversed</returns>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.DeflaterPending">
            <summary>
            This class stores the pending output of the Deflater.
            
            author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.DeflaterPending.#ctor">
            <summary>
            Construct instance with default buffer size
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.Inflater">
             <summary>
             Inflater is used to decompress data that has been compressed according
             to the "deflate" standard described in rfc1951.
             
             By default Zlib (rfc1950) headers and footers are expected in the input.
             You can use constructor <code> public Inflater(bool noHeader)</code> passing true
             if there is no Zlib header information
            
             The usage is as following.  First you have to set some input with
             <code>SetInput()</code>, then Inflate() it.  If inflate doesn't
             inflate any bytes there may be three reasons:
             <ul>
             <li>IsNeedingInput() returns true because the input buffer is empty.
             You have to provide more input with <code>SetInput()</code>.
             NOTE: IsNeedingInput() also returns true when, the stream is finished.
             </li>
             <li>IsNeedingDictionary() returns true, you have to provide a preset
                dictionary with <code>SetDictionary()</code>.</li>
             <li>IsFinished returns true, the inflater has finished.</li>
             </ul>
             Once the first output byte is produced, a dictionary will not be
             needed at a later stage.
            
             author of the original java version : John Leuner, Jochen Hoenicke
             </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Inflater.CPLENS">
            <summary>
            Copy lengths for literal codes 257..285
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Inflater.CPLEXT">
            <summary>
            Extra bits for literal codes 257..285
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Inflater.CPDIST">
            <summary>
            Copy offsets for distance codes 0..29
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Inflater.CPDEXT">
            <summary>
            Extra bits for distance codes
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Inflater.DECODE_HEADER">
            <summary>
            These are the possible states for an inflater
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Inflater.mode">
            <summary>
            This variable contains the current state.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Inflater.readAdler">
            <summary>
            The adler checksum of the dictionary or of the decompressed
            stream, as it is written in the header resp. footer of the
            compressed stream. 
            Only valid if mode is DECODE_DICT or DECODE_CHKSUM.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Inflater.neededBits">
            <summary>
            The number of bits needed to complete the current state.  This
            is valid, if mode is DECODE_DICT, DECODE_CHKSUM,
            DECODE_HUFFMAN_LENBITS or DECODE_HUFFMAN_DISTBITS.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Inflater.isLastBlock">
            <summary>
            True, if the last block flag was set in the last block of the
            inflated stream.  This means that the stream ends after the
            current block.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Inflater.totalOut">
            <summary>
            The total number of inflated bytes.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Inflater.totalIn">
            <summary>
            The total number of bytes set with setInput().  This is not the
            value returned by the TotalIn property, since this also includes the
            unprocessed input.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Inflater.noHeader">
            <summary>
            This variable stores the noHeader flag that was given to the constructor.
            True means, that the inflated stream doesn't contain a Zlib header or 
            footer.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.#ctor">
            <summary>
            Creates a new inflater or RFC1951 decompressor
            RFC1950/Zlib headers and footers will be expected in the input data
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.#ctor(System.Boolean)">
            <summary>
            Creates a new inflater.
            </summary>
            <param name="noHeader">
            True if no RFC1950/Zlib header and footer fields are expected in the input data
            
            This is used for GZIPed/Zipped input.
            
            For compatibility with
            Sun JDK you should provide one byte of input more than needed in
            this case.
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.Reset">
            <summary>
            Resets the inflater so that a new stream can be decompressed.  All
            pending input and output will be discarded.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.DecodeHeader">
            <summary>
            Decodes a zlib/RFC1950 header.
            </summary>
            <returns>
            False if more input is needed.
            </returns>
            <exception cref="T:Pao.Reports.PaoReportsBaseException">
            The header is invalid.
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.DecodeDict">
            <summary>
            Decodes the dictionary checksum after the deflate header.
            </summary>
            <returns>
            False if more input is needed.
            </returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.DecodeHuffman">
            <summary>
            Decodes the huffman encoded symbols in the input stream.
            </summary>
            <returns>
            false if more input is needed, true if output window is
            full or the current block ends.
            </returns>
            <exception cref="T:Pao.Reports.PaoReportsBaseException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.DecodeChksum">
            <summary>
            Decodes the adler checksum after the deflate stream.
            </summary>
            <returns>
            false if more input is needed.
            </returns>
            <exception cref="T:Pao.Reports.PaoReportsBaseException">
            If checksum doesn't match.
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.Decode">
            <summary>
            Decodes the deflated stream.
            </summary>
            <returns>
            false if more input is needed, or if finished.
            </returns>
            <exception cref="T:Pao.Reports.PaoReportsBaseException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.SetDictionary(System.Byte[])">
            <summary>
            Sets the preset dictionary.  This should only be called, if
            needsDictionary() returns true and it should set the same
            dictionary, that was used for deflating.  The getAdler()
            function returns the checksum of the dictionary needed.
            </summary>
            <param name="buffer">
            The dictionary.
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.SetDictionary(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the preset dictionary.  This should only be called, if
            needsDictionary() returns true and it should set the same
            dictionary, that was used for deflating.  The getAdler()
            function returns the checksum of the dictionary needed.
            </summary>
            <param name="buffer">
            The dictionary.
            </param>
            <param name="index">
            The index into buffer where the dictionary starts.
            </param>
            <param name="count">
            The number of bytes in the dictionary.
            </param>
            <exception cref="T:System.InvalidOperationException">
            No dictionary is needed.
            </exception>
            <exception cref="T:Pao.Reports.PaoReportsBaseException">
            The adler checksum for the buffer is invalid
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.SetInput(System.Byte[])">
            <summary>
            Sets the input.  This should only be called, if needsInput()
            returns true.
            </summary>
            <param name="buffer">
            the input.
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Sets the input.  This should only be called, if needsInput()
            returns true.
            </summary>
            <param name="buffer">
            The source of input data
            </param>
            <param name="index">
            The index into buffer where the input starts.
            </param>
            <param name="count">
            The number of bytes of input to use.
            </param>
            <exception cref="T:System.InvalidOperationException">
            No input is needed.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            The index and/or count are wrong.
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.Inflate(System.Byte[])">
            <summary>
            Inflates the compressed stream to the output buffer.  If this
            returns 0, you should check, whether IsNeedingDictionary(),
            IsNeedingInput() or IsFinished() returns true, to determine why no
            further output is produced.
            </summary>
            <param name="buffer">
            the output buffer.
            </param>
            <returns>
            The number of bytes written to the buffer, 0 if no further
            output can be produced.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if buffer has length 0.
            </exception>
            <exception cref="T:System.FormatException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Inflater.Inflate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Inflates the compressed stream to the output buffer.  If this
            returns 0, you should check, whether needsDictionary(),
            needsInput() or finished() returns true, to determine why no
            further output is produced.
            </summary>
            <param name="buffer">
            the output buffer.
            </param>
            <param name="offset">
            the offset in buffer where storing starts.
            </param>
            <param name="count">
            the maximum number of bytes to output.
            </param>
            <returns>
            the number of bytes written to the buffer, 0 if no further output can be produced.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if count is less than 0.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            if the index and / or count are wrong.
            </exception>
            <exception cref="T:System.FormatException">
            if deflated stream is invalid.
            </exception>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Inflater.IsNeedingInput">
            <summary>
            Returns true, if the input buffer is empty.
            You should then call setInput(). 
            NOTE: This method also returns true when the stream is finished.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Inflater.IsNeedingDictionary">
            <summary>
            Returns true, if a preset dictionary is needed to inflate the input.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Inflater.IsFinished">
            <summary>
            Returns true, if the inflater has finished.  This means, that no
            input is needed and no output can be produced.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Inflater.Adler">
            <summary>
            Gets the adler checksum.  This is either the checksum of all
            uncompressed bytes returned by inflate(), or if needsDictionary()
            returns true (and thus no output was yet produced) this is the
            adler checksum of the expected dictionary.
            </summary>
            <returns>
            the adler checksum.
            </returns>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Inflater.TotalOut">
            <summary>
            Gets the total number of output bytes returned by Inflate().
            </summary>
            <returns>
            the total number of output bytes.
            </returns>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Inflater.TotalIn">
            <summary>
            Gets the total number of processed compressed input bytes.
            </summary>
            <returns>
            The total number of bytes of processed input bytes.
            </returns>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Inflater.RemainingInput">
            <summary>
            Gets the number of unprocessed input bytes.  Useful, if the end of the
            stream is reached and you want to further process the bytes after
            the deflate stream.
            </summary>
            <returns>
            The number of bytes of the input which have not been processed.
            </returns>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.InflaterHuffmanTree">
            <summary>
            Huffman tree used for inflation
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.InflaterHuffmanTree.defLitLenTree">
            <summary>
            Literal length tree
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.InflaterHuffmanTree.defDistTree">
            <summary>
            Distance tree
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.InflaterHuffmanTree.#ctor(System.Byte[])">
            <summary>
            Constructs a Huffman tree from the array of code lengths.
            </summary>
            <param name = "codeLengths">
            the array of code lengths
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.InflaterHuffmanTree.GetSymbol(Pao.Reports.Zip.Compression.Streams.StreamManipulator)">
            <summary>
            Reads the next symbol from input.  The symbol is encoded using the
            huffman tree.
            </summary>
            <param name="input">
            input the input source.
            </param>
            <returns>
            the next symbol, or -1 if not enough input is available.
            </returns>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.PendingBuffer">
            <summary>
            This class is general purpose class for writing data to a buffer.
            
            It allows you to write bits as well as bytes
            Based on DeflaterPending.java
            
            author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.PendingBuffer.buffer_">
            <summary>
            Internal work buffer
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.PendingBuffer.#ctor">
            <summary>
            construct instance using default buffer size of 4096
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.PendingBuffer.#ctor(System.Int32)">
            <summary>
            construct instance using specified buffer size
            </summary>
            <param name="bufferSize">
            size to use for internal buffer
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.PendingBuffer.Reset">
            <summary>
            Clear internal state/buffers
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.PendingBuffer.WriteByte(System.Int32)">
            <summary>
            Write a byte to buffer
            </summary>
            <param name="value">
            The value to write
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.PendingBuffer.WriteShort(System.Int32)">
            <summary>
            Write a short value to buffer LSB first
            </summary>
            <param name="value">
            The value to write.
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.PendingBuffer.WriteInt(System.Int32)">
            <summary>
            write an integer LSB first
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.PendingBuffer.WriteBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Write a block of data to buffer
            </summary>
            <param name="block">data to write</param>
            <param name="offset">offset of first byte to write</param>
            <param name="length">number of bytes to write</param>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.PendingBuffer.BitCount">
            <summary>
            The number of bits written to the buffer
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.PendingBuffer.AlignToByte">
            <summary>
            Align internal buffer on a byte boundary
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.PendingBuffer.WriteBits(System.Int32,System.Int32)">
            <summary>
            Write bits to internal buffer
            </summary>
            <param name="b">source of bits</param>
            <param name="count">number of bits to write</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.PendingBuffer.WriteShortMSB(System.Int32)">
            <summary>
            Write a short value to internal buffer most significant byte first
            </summary>
            <param name="s">value to write</param>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.PendingBuffer.IsFlushed">
            <summary>
            Indicates if buffer has been flushed
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.PendingBuffer.Flush(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Flushes the pending buffer into the given output array.  If the
            output array is to small, only a partial flush is done.
            </summary>
            <param name="output">The output array.</param>
            <param name="offset">The offset into output array.</param>
            <param name="length">The maximum number of bytes to store.</param>
            <returns>The number of bytes flushed.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.PendingBuffer.ToByteArray">
            <summary>
            Convert internal buffer to byte array.
            Buffer is empty on completion
            </summary>
            <returns>
            The internal buffer contents converted to a byte array.
            </returns>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream">
            <summary>
            A special stream deflating or compressing the bytes that are
            written to it.  It uses a Deflater to perform actual deflating.<br/>
            Authors of the original java version : Tom Tromey, Jochen Hoenicke 
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new DeflaterOutputStream with a default Deflater and default buffer size.
            </summary>
            <param name="baseOutputStream">
            the output stream where deflated output should be written.
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.#ctor(System.IO.Stream,Pao.Reports.Zip.Compression.Deflater)">
            <summary>
            Creates a new DeflaterOutputStream with the given Deflater and
            default buffer size.
            </summary>
            <param name="baseOutputStream">
            the output stream where deflated output should be written.
            </param>
            <param name="deflater">
            the underlying deflater.
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.#ctor(System.IO.Stream,Pao.Reports.Zip.Compression.Deflater,System.Int32)">
            <summary>
            Creates a new DeflaterOutputStream with the given Deflater and
            buffer size.
            </summary>
            <param name="baseOutputStream">
            The output stream where deflated output is written.
            </param>
            <param name="deflater">
            The underlying deflater to use
            </param>
            <param name="bufferSize">
            The buffer size to use when deflating
            </param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            bufsize is less than or equal to zero.
            </exception>
            <exception cref="T:System.ArgumentException">
            baseOutputStream does not support writing
            </exception>
            <exception cref="T:System.ArgumentNullException">
            deflater instance is null
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Finish">
            <summary>
            Finishes the stream by calling finish() on the deflater. 
            </summary>
            <exception cref="T:Pao.Reports.PaoReportsBaseException">
            Not all input is deflated
            </exception>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.IsStreamOwner">
            <summary>
            Get/set flag indicating ownership of the underlying stream.
            When the flag is true <see cref="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Close"></see> will close the underlying stream also.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.CanPatchEntries">
            <summary>
            Allows client to determine if an entry can be patched after its added
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Password">
            <summary>
            Get/set the password used for encryption.
            </summary>
            <remarks>When set to null or if the password is empty no encryption is performed</remarks>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.EncryptBlock(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Encrypt a block of data
            </summary>
            <param name="buffer">
            Data to encrypt.  NOTE the original contents of the buffer are lost
            </param>
            <param name="offset">
            Offset of first byte in buffer to encrypt
            </param>
            <param name="length">
            Number of bytes in buffer to encrypt
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.InitializePassword(System.String)">
            <summary>
            Initializes encryption keys based on given <paramref name="password"/>.
            </summary>
            <param name="password">The password.</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Deflate">
            <summary>
            Deflates everything in the input buffers.  This will call
            <code>def.deflate()</code> until all bytes from the input buffers
            are processed.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.CanRead">
            <summary>
            Gets value indicating stream can be read from
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.CanSeek">
            <summary>
            Gets a value indicating if seeking is supported for this stream
            This property always returns false
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.CanWrite">
            <summary>
            Get value indicating if this stream supports writing
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Length">
            <summary>
            Get current length of stream
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Position">
            <summary>
            Gets the current position within the stream.
            </summary>
            <exception cref="T:System.NotSupportedException">Any attempt to set position</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the current position of this stream to the given value. Not supported by this class!
            </summary>
            <param name="offset">The offset relative to the <paramref name="origin"/> to seek.</param>
            <param name="origin">The <see cref="T:System.IO.SeekOrigin"/> to seek from.</param>
            <returns>The new position in the stream.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.SetLength(System.Int64)">
            <summary>
            Sets the length of this stream to the given value. Not supported by this class!
            </summary>
            <param name="value">The new stream length.</param>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.ReadByte">
            <summary>
            Read a byte from stream advancing position by one
            </summary>
            <returns>The byte read cast to an int.  THe value is -1 if at the end of the stream.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read a block of bytes from stream
            </summary>
            <param name="buffer">The buffer to store read data in.</param>
            <param name="offset">The offset to start storing at.</param>
            <param name="count">The maximum number of bytes to read.</param>
            <returns>The actual number of bytes read.  Zero if end of stream is detected.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronous reads are not supported a NotSupportedException is always thrown
            </summary>
            <param name="buffer">The buffer to read into.</param>
            <param name="offset">The offset to start storing data at.</param>
            <param name="count">The number of bytes to read</param>
            <param name="callback">The async callback to use.</param>
            <param name="state">The state to use.</param>
            <returns>Returns an <see cref="T:System.IAsyncResult"/></returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Asynchronous writes arent supported, a NotSupportedException is always thrown
            </summary>
            <param name="buffer">The buffer to write.</param>
            <param name="offset">The offset to begin writing at.</param>
            <param name="count">The number of bytes to write.</param>
            <param name="callback">The <see cref="T:System.AsyncCallback"/> to use.</param>
            <param name="state">The state object.</param>
            <returns>Returns an IAsyncResult.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Flush">
            <summary>
            Flushes the stream by calling <see cref="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Flush">Flush</see> on the deflater and then
            on the underlying stream.  This ensures that all bytes are flushed.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Close">
            <summary>
            Calls <see cref="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Finish"/> and closes the underlying
            stream when <see cref="P:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.IsStreamOwner"></see> is true.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.WriteByte(System.Byte)">
            <summary>
            Writes a single byte to the compressed output stream.
            </summary>
            <param name="value">
            The byte value.
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes bytes from an array to the compressed stream.
            </summary>
            <param name="buffer">
            The byte array
            </param>
            <param name="offset">
            The offset into the byte array where to start.
            </param>
            <param name="count">
            The number of bytes to write.
            </param>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.buffer_">
            <summary>
            This buffer is used temporarily to retrieve the bytes from the
            deflater and write them to the underlying output stream.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.deflater_">
            <summary>
            The deflater which is used to deflate the stream.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Streams.DeflaterOutputStream.baseOutputStream_">
            <summary>
            Base stream the deflater depends on.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer">
            <summary>
            An input buffer customised for use by <see cref="T:Pao.Reports.Zip.Compression.Streams.InflaterInputStream"/>
            </summary>
            <remarks>
            The buffer supports decryption of incoming data.
            </remarks>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.#ctor(System.IO.Stream)">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer"/> with a default buffer size
            </summary>
            <param name="stream">The stream to buffer.</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.#ctor(System.IO.Stream,System.Int32)">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer"/>
            </summary>
            <param name="stream">The stream to buffer.</param>
            <param name="bufferSize">The size to use for the buffer</param>
            <remarks>A minimum buffer size of 1KB is permitted.  Lower sizes are treated as 1KB.</remarks>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.RawLength">
            <summary>
            Get the length of bytes bytes in the <see cref="P:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.RawData"/>
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.RawData">
            <summary>
            Get the contents of the raw data buffer.
            </summary>
            <remarks>This may contain encrypted data.</remarks>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.ClearTextLength">
            <summary>
            Get the number of useable bytes in <see cref="P:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.ClearText"/>
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.ClearText">
            <summary>
            Get the contents of the clear text buffer.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.Available">
            <summary>
            Get/set the number of bytes available
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.SetInflaterInput(Pao.Reports.Zip.Compression.Inflater)">
            <summary>
            Call <see cref="M:Pao.Reports.Zip.Compression.Inflater.SetInput(System.Byte[],System.Int32,System.Int32)"/> passing the current clear text buffer contents.
            </summary>
            <param name="inflater">The inflater to set input for.</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.Fill">
            <summary>
            Fill the buffer from the underlying input stream.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.ReadRawBuffer(System.Byte[])">
            <summary>
            Read a buffer directly from the input stream
            </summary>
            <param name="buffer">The buffer to fill</param>
            <returns>Returns the number of bytes read.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.ReadRawBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read a buffer directly from the input stream
            </summary>
            <param name="outBuffer">The buffer to read into</param>
            <param name="offset">The offset to start reading data into.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>Returns the number of bytes read.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.ReadClearTextBuffer(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Read clear text data from the input stream.
            </summary>
            <param name="outBuffer">The buffer to add data to.</param>
            <param name="offset">The offset to start adding data at.</param>
            <param name="length">The number of bytes to read.</param>
            <returns>Returns the number of bytes actually read.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.ReadLeByte">
            <summary>
            Read a <see cref="T:System.Byte"/> from the input stream.
            </summary>
            <returns>Returns the byte read.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.ReadLeShort">
            <summary>
            Read an <see cref="T:System.Int16"/> in little endian byte order.
            </summary>
            <returns>The short value read case to an int.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.ReadLeInt">
            <summary>
            Read an <see cref="T:System.Int32"/> in little endian byte order.
            </summary>
            <returns>The int value read.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.ReadLeLong">
            <summary>
            Read a <see cref="T:System.Int64"/> in little endian byte order.
            </summary>
            <returns>The long value read.</returns>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer.CryptoTransform">
            <summary>
            Get/set the <see cref="T:System.Security.Cryptography.ICryptoTransform"/> to apply to any data.
            </summary>
            <remarks>Set this value to null to have no transform applied.</remarks>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.Streams.InflaterInputStream">
             <summary>
             This filter stream is used to decompress data compressed using the "deflate"
             format. The "deflate" format is described in RFC 1951.
            
             This stream may form the basis for other decompression filters, such
             as the <see cref="T:Pao.Reports.GZip.GZipInputStream">GZipInputStream</see>.
            
             Author of the original java version : John Leuner.
             </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.#ctor(System.IO.Stream)">
            <summary>
            Create an InflaterInputStream with the default decompressor
            and a default buffer size of 4KB.
            </summary>
            <param name = "baseInputStream">
            The InputStream to read bytes from
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.#ctor(System.IO.Stream,Pao.Reports.Zip.Compression.Inflater)">
            <summary>
            Create an InflaterInputStream with the specified decompressor
            and a default buffer size of 4KB.
            </summary>
            <param name = "baseInputStream">
            The source of input data
            </param>
            <param name = "inf">
            The decompressor used to decompress data read from baseInputStream
            </param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.#ctor(System.IO.Stream,Pao.Reports.Zip.Compression.Inflater,System.Int32)">
            <summary>
            Create an InflaterInputStream with the specified decompressor
            and the specified buffer size.
            </summary>
            <param name = "baseInputStream">
            The InputStream to read bytes from
            </param>
            <param name = "inflater">
            The decompressor to use
            </param>
            <param name = "bufferSize">
            Size of the buffer to use
            </param>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.IsStreamOwner">
            <summary>
            Get/set flag indicating ownership of underlying stream.
            When the flag is true <see cref="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.Close"/> will close the underlying stream also.
            </summary>
            <remarks>
            The default value is true.
            </remarks>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.Skip(System.Int64)">
            <summary>
            Skip specified number of bytes of uncompressed data
            </summary>
            <param name ="count">
            Number of bytes to skip
            </param>
            <returns>
            The number of bytes skipped, zero if the end of 
            stream has been reached
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            <paramref name="count">The number of bytes</paramref> to skip is less than or equal to zero.
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.StopDecrypting">
            <summary>
            Clear any cryptographic state.
            </summary>		
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.Available">
            <summary>
            Returns 0 once the end of the stream (EOF) has been reached.
            Otherwise returns 1.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.Fill">
            <summary>
            Fills the buffer with more data to decompress.
            </summary>
            <exception cref="T:Pao.Reports.PaoReportsBaseException">
            Stream ends early
            </exception>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.CanRead">
            <summary>
            Gets a value indicating whether the current stream supports reading
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.CanSeek">
            <summary>
            Gets a value of false indicating seeking is not supported for this stream.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.CanWrite">
            <summary>
            Gets a value of false indicating that this stream is not writeable.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.Length">
            <summary>
            A value representing the length of the stream in bytes.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.Position">
            <summary>
            The current position within the stream.
            Throws a NotSupportedException when attempting to set the position
            </summary>
            <exception cref="T:System.NotSupportedException">Attempting to set the position</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.Flush">
            <summary>
            Flushes the baseInputStream
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>
            Sets the position within the current stream
            Always throws a NotSupportedException
            </summary>
            <param name="offset">The relative offset to seek to.</param>
            <param name="origin">The <see cref="T:System.IO.SeekOrigin"/> defining where to seek from.</param>
            <returns>The new position in the stream.</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.SetLength(System.Int64)">
            <summary>
            Set the length of the current stream
            Always throws a NotSupportedException
            </summary>
            <param name="value">The new length value for the stream.</param>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes a sequence of bytes to stream and advances the current position
            This method always throws a NotSupportedException
            </summary>
            <param name="buffer">Thew buffer containing data to write.</param>
            <param name="offset">The offset of the first byte to write.</param>
            <param name="count">The number of bytes to write.</param>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.WriteByte(System.Byte)">
            <summary>
            Writes one byte to the current stream and advances the current position
            Always throws a NotSupportedException
            </summary>
            <param name="value">The byte to write.</param>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>
            Entry point to begin an asynchronous write.  Always throws a NotSupportedException.
            </summary>
            <param name="buffer">The buffer to write data from</param>
            <param name="offset">Offset of first byte to write</param>
            <param name="count">The maximum number of bytes to write</param>
            <param name="callback">The method to be called when the asynchronous write operation is completed</param>
            <param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests</param>
            <returns>An <see cref="T:System.IAsyncResult">IAsyncResult</see> that references the asynchronous write</returns>
            <exception cref="T:System.NotSupportedException">Any access</exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.Close">
            <summary>
            Closes the input stream.  When <see cref="P:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.IsStreamOwner"></see>
            is true the underlying stream is also closed.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Reads decompressed data into the provided buffer byte array
            </summary>
            <param name ="buffer">
            The array to read and decompress data into
            </param>
            <param name ="offset">
            The offset indicating where the data should be placed
            </param>
            <param name ="count">
            The number of bytes to decompress
            </param>
            <returns>The number of bytes read.  Zero signals the end of stream</returns>
            <exception cref="T:Pao.Reports.PaoReportsBaseException">
            Inflater needs a dictionary
            </exception>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.inf">
            <summary>
            Decompressor for this stream
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.inputBuffer">
            <summary>
            <see cref="T:Pao.Reports.Zip.Compression.Streams.InflaterInputBuffer">Input buffer</see> for this stream.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.baseInputStream">
            <summary>
            Base stream the inflater reads from.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.csize">
            <summary>
            The compressed size
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.isClosed">
            <summary>
            Flag indicating wether this instance has been closed or not.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.Compression.Streams.InflaterInputStream.isStreamOwner">
            <summary>
            Flag indicating wether this instance is designated the stream owner.
            When closing if this flag is true the underlying stream is closed.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.Streams.OutputWindow">
            <summary>
            Contains the output from the Inflation process.
            We need to have a window so that we can refer backwards into the output stream
            to repeat stuff.<br/>
            Author of the original java version : John Leuner
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.OutputWindow.Write(System.Int32)">
            <summary>
            Write a byte to this output window
            </summary>
            <param name="value">value to write</param>
            <exception cref="T:System.InvalidOperationException">
            if window is full
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.OutputWindow.Repeat(System.Int32,System.Int32)">
            <summary>
            Append a byte pattern already in the window itself
            </summary>
            <param name="length">length of pattern to copy</param>
            <param name="distance">distance from end of window pattern occurs</param>
            <exception cref="T:System.InvalidOperationException">
            If the repeated data overflows the window
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.OutputWindow.CopyStored(Pao.Reports.Zip.Compression.Streams.StreamManipulator,System.Int32)">
            <summary>
            Copy from input manipulator to internal window
            </summary>
            <param name="input">source of data</param>
            <param name="length">length of data to copy</param>
            <returns>the number of bytes copied</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.OutputWindow.CopyDict(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copy dictionary to window
            </summary>
            <param name="dictionary">source dictionary</param>
            <param name="offset">offset of start in source dictionary</param>
            <param name="length">length of dictionary</param>
            <exception cref="T:System.InvalidOperationException">
            If window isnt empty
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.OutputWindow.GetFreeSpace">
            <summary>
            Get remaining unfilled space in window
            </summary>
            <returns>Number of bytes left in window</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.OutputWindow.GetAvailable">
            <summary>
            Get bytes available for output in window
            </summary>
            <returns>Number of bytes filled</returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.OutputWindow.CopyOutput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copy contents of window to output
            </summary>
            <param name="output">buffer to copy to</param>
            <param name="offset">offset to start at</param>
            <param name="len">number of bytes to count</param>
            <returns>The number of bytes copied</returns>
            <exception cref="T:System.InvalidOperationException">
            If a window underflow occurs
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.OutputWindow.Reset">
            <summary>
            Reset by clearing window so <see cref="M:Pao.Reports.Zip.Compression.Streams.OutputWindow.GetAvailable">GetAvailable</see> returns 0
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.Compression.Streams.StreamManipulator">
             <summary>
             This class allows us to retrieve a specified number of bits from
             the input buffer, as well as copy big byte blocks.
            
             It uses an int buffer to store up to 31 bits for direct
             manipulation.  This guarantees that we can get at least 16 bits,
             but we only need at most 15, so this is all safe.
            
             There are some optimizations in this class, for example, you must
             never peek more than 8 bits more than needed, and you must first
             peek bits before you may drop them.  This is not a general purpose
             class but optimized for the behaviour of the Inflater.
            
             authors of the original java version : John Leuner, Jochen Hoenicke
             </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.StreamManipulator.#ctor">
            <summary>
            Constructs a default StreamManipulator with all buffers empty
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.StreamManipulator.PeekBits(System.Int32)">
            <summary>
            Get the next sequence of bits but don't increase input pointer.  bitCount must be
            less or equal 16 and if this call succeeds, you must drop
            at least n - 8 bits in the next call.
            </summary>
            <param name="bitCount">The number of bits to peek.</param>
            <returns>
            the value of the bits, or -1 if not enough bits available.  */
            </returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.StreamManipulator.DropBits(System.Int32)">
            <summary>
            Drops the next n bits from the input.  You should have called PeekBits
            with a bigger or equal n before, to make sure that enough bits are in
            the bit buffer.
            </summary>
            <param name="bitCount">The number of bits to drop.</param>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.StreamManipulator.GetBits(System.Int32)">
            <summary>
            Gets the next n bits and increases input pointer.  This is equivalent
            to <see cref="M:Pao.Reports.Zip.Compression.Streams.StreamManipulator.PeekBits(System.Int32)"/> followed by <see cref="M:Pao.Reports.Zip.Compression.Streams.StreamManipulator.DropBits(System.Int32)"/>, except for correct error handling.
            </summary>
            <param name="bitCount">The number of bits to retrieve.</param>
            <returns>
            the value of the bits, or -1 if not enough bits available.
            </returns>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.StreamManipulator.AvailableBits">
            <summary>
            Gets the number of bits available in the bit buffer.  This must be
            only called when a previous PeekBits() returned -1.
            </summary>
            <returns>
            the number of bits available.
            </returns>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.StreamManipulator.AvailableBytes">
            <summary>
            Gets the number of bytes available.
            </summary>
            <returns>
            The number of bytes available.
            </returns>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.StreamManipulator.SkipToByteBoundary">
            <summary>
            Skips to the next byte boundary.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.Compression.Streams.StreamManipulator.IsNeedingInput">
            <summary>
            Returns true when SetInput can be called
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.StreamManipulator.CopyBytes(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Copies bytes from input buffer to output buffer starting
            at output[offset].  You have to make sure, that the buffer is
            byte aligned.  If not enough bytes are available, copies fewer
            bytes.
            </summary>
            <param name="output">
            The buffer to copy bytes to.
            </param>
            <param name="offset">
            The offset in the buffer at which copying starts
            </param>
            <param name="length">
            The length to copy, 0 is allowed.
            </param>
            <returns>
            The number of bytes copied, 0 if no bytes were available.
            </returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Length is less than zero
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Bit buffer isnt byte aligned
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.StreamManipulator.Reset">
            <summary>
            Resets state and empties internal buffers
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.Compression.Streams.StreamManipulator.SetInput(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Add more input for consumption.
            Only call when IsNeedingInput returns true
            </summary>
            <param name="buffer">data to be input</param>
            <param name="offset">offset of first byte of input</param>
            <param name="count">number of bytes of input to add.</param>
        </member>
        <member name="T:Pao.Reports.Zip.IEntryFactory">
            <summary>
            Defines factory methods for creating new <see cref="T:Pao.Reports.Zip.ZipEntry"></see> values.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.IEntryFactory.NameTransform">
            <summary>
            Get/set the <see cref="T:Pao.Reports.Core.INameTransform"></see> applicable.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.UseZip64">
            <summary>
            Determines how entries are tested to see if they should use Zip64 extensions or not.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.UseZip64.Off">
            <summary>
            Zip64 will not be forced on entries during processing.
            </summary>
            <remarks>An entry can have this overridden if required <see cref="M:Pao.Reports.Zip.ZipEntry.ForceZip64"></see></remarks>
        </member>
        <member name="F:Pao.Reports.Zip.UseZip64.On">
            <summary>
            Zip64 should always be used.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.UseZip64.Dynamic">
            <summary>
            #ZipLib will determine use based on entry values when added to archive.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.CompressionMethod">
            <summary>
            The kind of compression used for an entry in an archive
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.CompressionMethod.Stored">
            <summary>
            A direct copy of the file contents is held in the archive
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.CompressionMethod.Deflated">
            <summary>
            Common Zip compression method using a sliding dictionary 
            of up to 32KB and secondary compression from Huffman/Shannon-Fano trees
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.CompressionMethod.Deflate64">
            <summary>
            An extension to deflate with a 64KB window. Not supported by #Zip currently
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.CompressionMethod.BZip2">
            <summary>
            BZip2 compression. Not supported by #Zip.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.CompressionMethod.WinZipAES">
            <summary>
            WinZip special for AES encryption, Not supported by #Zip.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.EncryptionAlgorithm">
            <summary>
            Identifies the encryption algorithm used for an entry
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.None">
            <summary>
            No encryption has been used.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.PkzipClassic">
            <summary>
            Encrypted using PKZIP 2.0 or 'classic' encryption.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.Des">
            <summary>
            DES encryption has been used.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.RC2">
            <summary>
            RCS encryption has been used for encryption.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.TripleDes168">
            <summary>
            Triple DES encryption with 168 bit keys has been used for this entry.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.TripleDes112">
            <summary>
            Triple DES with 112 bit keys has been used for this entry.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.Aes128">
            <summary>
            AES 128 has been used for encryption.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.Aes192">
            <summary>
            AES 192 has been used for encryption.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.Aes256">
            <summary>
            AES 256 has been used for encryption.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.RC2Corrected">
            <summary>
            RC2 corrected has been used for encryption.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.Blowfish">
            <summary>
            Blowfish has been used for encryption.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.Twofish">
            <summary>
            Twofish has been used for encryption.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.RC4">
            <summary>
            RC4 has been used for encryption.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.EncryptionAlgorithm.Unknown">
            <summary>
            An unknown algorithm has been used for encryption.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.GeneralBitFlags">
            <summary>
            Defines the contents of the general bit flags field for an archive entry.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.Encrypted">
            <summary>
            Bit 0 if set indicates that the file is encrypted
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.Method">
            <summary>
            Bits 1 and 2 - Two bits defining the compression method (only for Method 6 Imploding and 8,9 Deflating)
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.Descriptor">
            <summary>
            Bit 3 if set indicates a trailing data desciptor is appended to the entry data
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.ReservedPKware4">
            <summary>
            Bit 4 is reserved for use with method 8 for enhanced deflation
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.Patched">
            <summary>
            Bit 5 if set indicates the file contains Pkzip compressed patched data.
            Requires version 2.7 or greater.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.StrongEncryption">
            <summary>
            Bit 6 if set strong encryption has been used for this entry.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.Unused7">
            <summary>
            Bit 7 is currently unused
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.Unused8">
            <summary>
            Bit 8 is currently unused
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.Unused9">
            <summary>
            Bit 9 is currently unused
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.Unused10">
            <summary>
            Bit 10 is currently unused
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.UnicodeText">
            <summary>
            Bit 11 if set indicates the filename and 
            comment fields for this file must be encoded using UTF-8.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.EnhancedCompress">
            <summary>
            Bit 12 is documented as being reserved by PKware for enhanced compression.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.HeaderMasked">
            <summary>
            Bit 13 if set indicates that values in the local header are masked to hide
            their actual values, and the central directory is encrypted.
            </summary>
            <remarks>
            Used when encrypting the central directory contents.
            </remarks>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.ReservedPkware14">
            <summary>
            Bit 14 is documented as being reserved for use by PKware
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.GeneralBitFlags.ReservedPkware15">
            <summary>
            Bit 15 is documented as being reserved for use by PKware
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.ZipConstants">
            <summary>
            This class contains constants used for Zip format files
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.VersionMadeBy">
            <summary>
            The version made by field for entries in the central header when created by this library
            </summary>
            <remarks>
            This is also the Zip version for the library when comparing against the version required to extract
            for an entry.  See <see cref="P:Pao.Reports.Zip.ZipEntry.CanDecompress"/>.
            </remarks>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.VERSION_MADE_BY">
            <summary>
            The version made by field for entries in the central header when created by this library
            </summary>
            <remarks>
            This is also the Zip version for the library when comparing against the version required to extract
            </remarks>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.VersionStrongEncryption">
            <summary>
            The minimum version required to support strong encryption
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.VERSION_STRONG_ENCRYPTION">
            <summary>
            The minimum version required to support strong encryption
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.VersionZip64">
            <summary>
            The version required for Zip64 extensions
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.LocalHeaderBaseSize">
            <summary>
            Size of local entry header (excluding variable length fields at end)
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.LOCHDR">
            <summary>
            Size of local entry header (excluding variable length fields at end)
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.Zip64DataDescriptorSize">
            <summary>
            Size of Zip64 data descriptor
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.DataDescriptorSize">
            <summary>
            Size of data descriptor
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.EXTHDR">
            <summary>
            Size of data descriptor
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.CentralHeaderBaseSize">
            <summary>
            Size of central header entry (excluding variable fields)
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.CENHDR">
            <summary>
            Size of central header entry
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.EndOfCentralRecordBaseSize">
            <summary>
            Size of end of central record (excluding variable fields)
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.ENDHDR">
            <summary>
            Size of end of central record (excluding variable fields)
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.CryptoHeaderSize">
            <summary>
            Size of 'classic' cryptographic header stored before any entry data
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.CRYPTO_HEADER_SIZE">
            <summary>
            Size of cryptographic header stored before entry data
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.LocalHeaderSignature">
            <summary>
            Signature for local entry header
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.LOCSIG">
            <summary>
            Signature for local entry header
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.SpanningSignature">
            <summary>
            Signature for spanning entry
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.SPANNINGSIG">
            <summary>
            Signature for spanning entry
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.SpanningTempSignature">
            <summary>
            Signature for temporary spanning entry
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.SPANTEMPSIG">
            <summary>
            Signature for temporary spanning entry
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.DataDescriptorSignature">
            <summary>
            Signature for data descriptor
            </summary>
            <remarks>
            This is only used where the length, Crc, or compressed size isnt known when the
            entry is created and the output stream doesnt support seeking.
            The local entry cannot be 'patched' with the correct values in this case
            so the values are recorded after the data prefixed by this header, as well as in the central directory.
            </remarks>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.EXTSIG">
            <summary>
            Signature for data descriptor
            </summary>
            <remarks>
            This is only used where the length, Crc, or compressed size isnt known when the
            entry is created and the output stream doesnt support seeking.
            The local entry cannot be 'patched' with the correct values in this case
            so the values are recorded after the data prefixed by this header, as well as in the central directory.
            </remarks>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.CENSIG">
            <summary>
            Signature for central header
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.CentralHeaderSignature">
            <summary>
            Signature for central header
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.Zip64CentralFileHeaderSignature">
            <summary>
            Signature for Zip64 central file header
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.CENSIG64">
            <summary>
            Signature for Zip64 central file header
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.Zip64CentralDirLocatorSignature">
            <summary>
            Signature for Zip64 central directory locator
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.ArchiveExtraDataSignature">
            <summary>
            Signature for archive extra data signature (were headers are encrypted).
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.CentralHeaderDigitalSignature">
            <summary>
            Central header digitial signature
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.CENDIGITALSIG">
            <summary>
            Central header digitial signature
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.EndOfCentralDirectorySignature">
            <summary>
            End of central directory record signature
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipConstants.ENDSIG">
            <summary>
            End of central directory record signature
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.ZipConstants.DefaultCodePage">
            <summary>
            Default encoding used for string conversion.  0 gives the default system OEM code page.
            Dont use unicode encodings if you want to be Zip compatible!
            Using the default code page isnt the full solution neccessarily
            there are many variable factors, codepage 850 is often a good choice for
            European users, however be careful about compatability.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipConstants.ConvertToString(System.Byte[],System.Int32)">
            <summary>
            Convert a portion of a byte array to a string.
            </summary>		
            <param name="data">
            Data to convert to string
            </param>
            <param name="count">
            Number of bytes to convert starting from index 0
            </param>
            <returns>
            data[0]..data[length - 1] converted to a string
            </returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipConstants.ConvertToString(System.Byte[])">
            <summary>
            Convert a byte array to string
            </summary>
            <param name="data">
            Byte array to convert
            </param>
            <returns>
            <paramref name="data">data</paramref>converted to a string
            </returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipConstants.ConvertToStringExt(System.Int32,System.Byte[],System.Int32)">
            <summary>
            Convert a byte array to string
            </summary>
            <param name="flags">The applicable general purpose bits flags</param>
            <param name="data">
            Byte array to convert
            </param>
            <param name="count">The number of bytes to convert.</param>
            <returns>
            <paramref name="data">data</paramref>converted to a string
            </returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipConstants.ConvertToStringExt(System.Int32,System.Byte[])">
            <summary>
            Convert a byte array to string
            </summary>
            <param name="data">
            Byte array to convert
            </param>
            <param name="flags">The applicable general purpose bits flags</param>
            <returns>
            <paramref name="data">data</paramref>converted to a string
            </returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipConstants.ConvertToArray(System.String)">
            <summary>
            Convert a string to a byte array
            </summary>
            <param name="str">
            String to convert to an array
            </param>
            <returns>Converted array</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipConstants.ConvertToArray(System.Int32,System.String)">
            <summary>
            Convert a string to a byte array
            </summary>
            <param name="flags">The applicable <see cref="T:Pao.Reports.Zip.GeneralBitFlags">general purpose bits flags</see></param>
            <param name="str">
            String to convert to an array
            </param>
            <returns>Converted array</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipConstants.#ctor">
            <summary>
            Initialise default instance of <see cref="T:Pao.Reports.Zip.ZipConstants">ZipConstants</see>
            </summary>
            <remarks>
            Private to prevent instances being created.
            </remarks>
        </member>
        <member name="T:Pao.Reports.Zip.HostSystemID">
            <summary>
            Defines known values for the <see cref="T:Pao.Reports.Zip.HostSystemID"/> property.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.Msdos">
            <summary>
            Host system = MSDOS
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.Amiga">
            <summary>
            Host system = Amiga
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.OpenVms">
            <summary>
            Host system = Open VMS
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.Unix">
            <summary>
            Host system = Unix
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.VMCms">
            <summary>
            Host system = VMCms
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.AtariST">
            <summary>
            Host system = Atari ST
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.OS2">
            <summary>
            Host system = OS2
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.Macintosh">
            <summary>
            Host system = Macintosh
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.ZSystem">
            <summary>
            Host system = ZSystem
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.Cpm">
            <summary>
            Host system = Cpm
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.WindowsNT">
            <summary>
            Host system = Windows NT
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.MVS">
            <summary>
            Host system = MVS
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.Vse">
            <summary>
            Host system = VSE
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.AcornRisc">
            <summary>
            Host system = Acorn RISC
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.Vfat">
            <summary>
            Host system = VFAT
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.AlternateMvs">
            <summary>
            Host system = Alternate MVS
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.BeOS">
            <summary>
            Host system = BEOS
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.Tandem">
            <summary>
            Host system = Tandem
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.OS400">
            <summary>
            Host system = OS400
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.OSX">
            <summary>
            Host system = OSX
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.HostSystemID.WinZipAES">
            <summary>
            Host system = WinZIP AES
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.ZipEntry">
            <summary>
            This class represents an entry in a zip archive.  This can be a file
            or a directory
            ZipFile and ZipInputStream will give you instances of this class as 
            information about the members in an archive.  ZipOutputStream
            uses an instance of this class when creating an entry in a Zip file.
            <br/>
            <br/>Author of the original java version : Jochen Hoenicke
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.#ctor(System.String)">
            <summary>
            Creates a zip entry with the given name.
            </summary>
            <param name="name">
            The name for this entry. Can include directory components.
            The convention for names is 'unix' style paths with relative names only.
            There are with no device names and path elements are separated by '/' characters.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The name passed is null
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.#ctor(System.String,System.Int32)">
            <summary>
            Creates a zip entry with the given name and version required to extract
            </summary>
            <param name="name">
            The name for this entry. Can include directory components.
            The convention for names is 'unix'  style paths with no device names and 
            path elements separated by '/' characters.  This is not enforced see <see cref="M:Pao.Reports.Zip.ZipEntry.CleanName(System.String)">CleanName</see>
            on how to ensure names are valid if this is desired.
            </param>
            <param name="versionRequiredToExtract">
            The minimum 'feature version' required this entry
            </param>
            <exception cref="T:System.ArgumentNullException">
            The name passed is null
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.#ctor(System.String,System.Int32,System.Int32,Pao.Reports.Zip.CompressionMethod)">
            <summary>
            Initializes an entry with the given name and made by information
            </summary>
            <param name="name">Name for this entry</param>
            <param name="madeByInfo">Version and HostSystem Information</param>
            <param name="versionRequiredToExtract">Minimum required zip feature version required to extract this entry</param>
            <param name="method">Compression method for this entry.</param>
            <exception cref="T:System.ArgumentNullException">
            The name passed is null
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            versionRequiredToExtract should be 0 (auto-calculate) or > 10
            </exception>
            <remarks>
            This constructor is used by the ZipFile class when reading from the central header
            It is not generally useful, use the constructor specifying the name only.
            </remarks>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.#ctor(Pao.Reports.Zip.ZipEntry)">
            <summary>
            Creates a deep copy of the given zip entry.
            </summary>
            <param name="entry">
            The entry to copy.
            </param>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.HasCrc">
            <summary>
            Get a value indicating wether the entry has a CRC value available.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.IsCrypted">
            <summary>
            Get/Set flag indicating if entry is encrypted.
            A simple helper routine to aid interpretation of <see cref="P:Pao.Reports.Zip.ZipEntry.Flags">flags</see>
            </summary>
            <remarks>This is an assistant that interprets the <see cref="P:Pao.Reports.Zip.ZipEntry.Flags">flags</see> property.</remarks>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.IsUnicodeText">
            <summary>
            Get / set a flag indicating wether entry name and comment text are
            encoded in <a href="http://www.unicode.org">unicode UTF8</a>.
            </summary>
            <remarks>This is an assistant that interprets the <see cref="P:Pao.Reports.Zip.ZipEntry.Flags">flags</see> property.</remarks>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.CryptoCheckValue">
            <summary>
            Value used during password checking for PKZIP 2.0 / 'classic' encryption.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.Flags">
            <summary>
            Get/Set general purpose bit flag for entry
            </summary>
            <remarks>
            General purpose bit flag<br/>
            <br/>
            Bit 0: If set, indicates the file is encrypted<br/>
            Bit 1-2 Only used for compression type 6 Imploding, and 8, 9 deflating<br/>
            Imploding:<br/>
            Bit 1 if set indicates an 8K sliding dictionary was used.  If clear a 4k dictionary was used<br/>
            Bit 2 if set indicates 3 Shannon-Fanno trees were used to encode the sliding dictionary, 2 otherwise<br/>
            <br/>
            Deflating:<br/>
              Bit 2    Bit 1<br/>
                0        0       Normal compression was used<br/>
                0        1       Maximum compression was used<br/>
                1        0       Fast compression was used<br/>
                1        1       Super fast compression was used<br/>
            <br/>
            Bit 3: If set, the fields crc-32, compressed size
            and uncompressed size are were not able to be written during zip file creation
            The correct values are held in a data descriptor immediately following the compressed data. <br/>
            Bit 4: Reserved for use by PKZIP for enhanced deflating<br/>
            Bit 5: If set indicates the file contains compressed patch data<br/>
            Bit 6: If set indicates strong encryption was used.<br/>
            Bit 7-10: Unused or reserved<br/>
            Bit 11: If set the name and comments for this entry are in <a href="http://www.unicode.org">unicode</a>.<br/>
            Bit 12-15: Unused or reserved<br/>
            </remarks>
            <seealso cref="P:Pao.Reports.Zip.ZipEntry.IsUnicodeText"></seealso>
            <seealso cref="P:Pao.Reports.Zip.ZipEntry.IsCrypted"></seealso>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.ZipFileIndex">
            <summary>
            Get/Set index of this entry in Zip file
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.Offset">
            <summary>
            Get/set offset for use in central header
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.ExternalFileAttributes">
            <summary>
            Get/Set external file attributes as an integer.
            The values of this are operating system dependant see
            <see cref="P:Pao.Reports.Zip.ZipEntry.HostSystem">HostSystem</see> for details
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.VersionMadeBy">
            <summary>
            Get the version made by for this entry or zero if unknown.
            The value / 10 indicates the major version number, and 
            the value mod 10 is the minor version number
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.IsDOSEntry">
            <summary>
            Get a value indicating this entry is for a DOS/Windows system.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.HasDosAttributes(System.Int32)">
            <summary>
            Test the external attributes for this <see cref="T:Pao.Reports.Zip.ZipEntry"/> to
            see if the external attributes are Dos based (including WINNT and variants)
            and match the values
            </summary>
            <param name="attributes">The attributes to test.</param>
            <returns>Returns true if the external attributes are known to be DOS/Windows 
            based and have the same attributes set as the value passed.</returns>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.HostSystem">
            <summary>
            Gets the compatability information for the <see cref="P:Pao.Reports.Zip.ZipEntry.ExternalFileAttributes">external file attribute</see>
            If the external file attributes are compatible with MS-DOS and can be read
            by PKZIP for DOS version 2.04g then this value will be zero.  Otherwise the value
            will be non-zero and identify the host system on which the attributes are compatible.
            </summary>
            		
            <remarks>
            The values for this as defined in the Zip File format and by others are shown below.  The values are somewhat
            misleading in some cases as they are not all used as shown.  You should consult the relevant documentation
            to obtain up to date and correct information.  The modified appnote by the infozip group is
            particularly helpful as it documents a lot of peculiarities.  The document is however a little dated.
            <list type="table">
            <item>0 - MS-DOS and OS/2 (FAT / VFAT / FAT32 file systems)</item>
            <item>1 - Amiga</item>
            <item>2 - OpenVMS</item>
            <item>3 - Unix</item>
            <item>4 - VM/CMS</item>
            <item>5 - Atari ST</item>
            <item>6 - OS/2 HPFS</item>
            <item>7 - Macintosh</item>
            <item>8 - Z-System</item>
            <item>9 - CP/M</item>
            <item>10 - Windows NTFS</item>
            <item>11 - MVS (OS/390 - Z/OS)</item>
            <item>12 - VSE</item>
            <item>13 - Acorn Risc</item>
            <item>14 - VFAT</item>
            <item>15 - Alternate MVS</item>
            <item>16 - BeOS</item>
            <item>17 - Tandem</item>
            <item>18 - OS/400</item>
            <item>19 - OS/X (Darwin)</item>
            <item>99 - WinZip AES</item>
            <item>remainder - unused</item>
            </list>
            </remarks>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.Version">
            <summary>
            Get minimum Zip feature version required to extract this entry
            </summary>		
            <remarks>
            Minimum features are defined as:<br/>
            1.0 - Default value<br/>
            1.1 - File is a volume label<br/>
            2.0 - File is a folder/directory<br/>
            2.0 - File is compressed using Deflate compression<br/>
            2.0 - File is encrypted using traditional encryption<br/>
            2.1 - File is compressed using Deflate64<br/>
            2.5 - File is compressed using PKWARE DCL Implode<br/>
            2.7 - File is a patch data set<br/>
            4.5 - File uses Zip64 format extensions<br/>
            4.6 - File is compressed using BZIP2 compression<br/>
            5.0 - File is encrypted using DES<br/>
            5.0 - File is encrypted using 3DES<br/>
            5.0 - File is encrypted using original RC2 encryption<br/>
            5.0 - File is encrypted using RC4 encryption<br/>
            5.1 - File is encrypted using AES encryption<br/>
            5.1 - File is encrypted using corrected RC2 encryption<br/>
            5.1 - File is encrypted using corrected RC2-64 encryption<br/>
            6.1 - File is encrypted using non-OAEP key wrapping<br/>
            6.2 - Central directory encryption (not confirmed yet)<br/>
            6.3 - File is compressed using LZMA<br/>
            6.3 - File is compressed using PPMD+<br/>
            6.3 - File is encrypted using Blowfish<br/>
            6.3 - File is encrypted using Twofish<br/>
            </remarks>
            <seealso cref="P:Pao.Reports.Zip.ZipEntry.CanDecompress"></seealso>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.CanDecompress">
            <summary>
            Get a value indicating wether this entry can be decompressed by the library.
            </summary>
            <remarks>This is based on the <see cref="P:Pao.Reports.Zip.ZipEntry.Version"></see> and 
            wether the <see cref="M:Pao.Reports.Zip.ZipEntry.IsCompressionMethodSupported">compression method</see> is supported.</remarks>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.ForceZip64">
            <summary>
            Force this entry to be recorded using Zip64 extensions.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.IsZip64Forced">
            <summary>
            Get a value indicating wether Zip64 extensions were forced.
            </summary>
            <returns>A <see cref="T:System.Boolean"/> value of true if Zip64 extensions have been forced on; false if not.</returns>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.LocalHeaderRequiresZip64">
            <summary>
            Gets a value indicating if the entry requires Zip64 extensions 
            to store the full entry values.
            </summary>
            <value>A <see cref="T:System.Boolean"/> value of true if a local header requires Zip64 extensions; false if not.</value>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.CentralHeaderRequiresZip64">
            <summary>
            Get a value indicating wether the central directory entry requires Zip64 extensions to be stored.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.DosTime">
            <summary>
            Get/Set DosTime value.
            </summary>
            <remarks>
            The MS-DOS date format can only represent dates between 1/1/1980 and 12/31/2107.
            </remarks>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.DateTime">
            <summary>
            Gets/Sets the time of last modification of the entry.
            </summary>
            <remarks>
            The <see cref="P:Pao.Reports.Zip.ZipEntry.DosTime"></see> property is updated to match this as far as possible.
            </remarks>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.Name">
             <summary>
             Returns the entry name.
             </summary>
             <remarks>
             The unix naming convention is followed.
             Path components in the entry should always separated by forward slashes ('/').
             Dos device names like C: should also be removed.
             See the <see cref="T:Pao.Reports.Zip.ZipNameTransform"/> class, or <see cref="M:Pao.Reports.Zip.ZipEntry.CleanName(System.String)"/>
            </remarks>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.Size">
            <summary>
            Gets/Sets the size of the uncompressed data.
            </summary>
            <returns>
            The size or -1 if unknown.
            </returns>
            <remarks>Setting the size before adding an entry to an archive can help
            avoid compatability problems with some archivers which dont understand Zip64 extensions.</remarks>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.CompressedSize">
            <summary>
            Gets/Sets the size of the compressed data.
            </summary>
            <returns>
            The compressed entry size or -1 if unknown.
            </returns>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.Crc">
            <summary>
            Gets/Sets the crc of the uncompressed data.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Crc is not in the range 0..0xffffffffL
            </exception>
            <returns>
            The crc value or -1 if unknown.
            </returns>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.CompressionMethod">
            <summary>
            Gets/Sets the compression method. Only Deflated and Stored are supported.
            </summary>
            <returns>
            The compression method for this entry
            </returns>
            <see cref="F:Pao.Reports.Zip.CompressionMethod.Deflated"/>
            <see cref="F:Pao.Reports.Zip.CompressionMethod.Stored"/>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.ExtraData">
            <summary>
            Gets/Sets the extra data.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Extra data is longer than 64KB (0xffff) bytes.
            </exception>
            <returns>
            Extra data or null if not set.
            </returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.ProcessExtraData(System.Boolean)">
            <summary>
            Process extra data fields updating the entry based on the contents.
            </summary>
            <param name="localHeader">True if the extra data fields should be handled
            for a local header, rather than for a central header.
            </param>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.Comment">
            <summary>
            Gets/Sets the entry comment.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If comment is longer than 0xffff.
            </exception>
            <returns>
            The comment or null if not set.
            </returns>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.IsDirectory">
            <summary>
            Gets a value indicating if the entry is a directory.
            however.
            </summary>
            <remarks>
            A directory is determined by an entry name with a trailing slash '/'.
            The external file attributes can also indicate an entry is for a directory.
            Currently only dos/windows attributes are tested in this manner.
            The trailing slash convention should always be followed.
            </remarks>
        </member>
        <member name="P:Pao.Reports.Zip.ZipEntry.IsFile">
            <summary>
            Get a value of true if the entry appears to be a file; false otherwise
            </summary>
            <remarks>
            This only takes account of DOS/Windows attributes.  Other operating systems are ignored.
            For linux and others the result may be incorrect.
            </remarks>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.IsCompressionMethodSupported">
            <summary>
            Test entry to see if data can be extracted.
            </summary>
            <returns>Returns true if data can be extracted for this entry; false otherwise.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.Clone">
            <summary>
            Creates a copy of this zip entry.
            </summary>
            <returns>An <see cref="T:System.Object"/> that is a copy of the current instance.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.ToString">
            <summary>
            Gets a string representation of this ZipEntry.
            </summary>
            <returns>A readable textual representation of this <see cref="T:Pao.Reports.Zip.ZipEntry"/></returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.IsCompressionMethodSupported(Pao.Reports.Zip.CompressionMethod)">
            <summary>
            Test a <see cref="P:Pao.Reports.Zip.ZipEntry.CompressionMethod">compression method</see> to see if this library
            supports extracting data compressed with that method
            </summary>
            <param name="method">The compression method to test.</param>
            <returns>Returns true if the compression method is supported; false otherwise</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipEntry.CleanName(System.String)">
            <summary>
            Cleans a name making it conform to Zip file conventions.
            Devices names ('c:\') and UNC share names ('\\server\share') are removed
            and forward slashes ('\') are converted to back slashes ('/').
            Names are made relative by trimming leading slashes which is compatible
            with the ZIP naming convention.
            </summary>
            <param name="name">The name to clean</param>
            <returns>The 'cleaned' name.</returns>
            <remarks>
            The <seealso cref="T:Pao.Reports.Zip.ZipNameTransform">Zip name transform</seealso> class is more flexible.
            </remarks>
        </member>
        <member name="T:Pao.Reports.Zip.ZipException">
            <summary>
            Represents exception conditions specific to Zip archive handling
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Deserialization constructor 
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"/> for this constructor</param>
            <param name="context"><see cref="T:System.Runtime.Serialization.StreamingContext"/> for this constructor</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipException.#ctor">
            <summary>
            Initializes a new instance of the ZipException class.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the ZipException class with a specified error message.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipException.#ctor(System.String,System.Exception)">
            <summary>
            Initialise a new instance of ZipException.
            </summary>
            <param name="message">A message describing the error.</param>
            <param name="exception">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Pao.Reports.Zip.ITaggedData">
            <summary>
            ExtraData tagged value interface.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.ITaggedData.TagID">
            <summary>
            Get the ID for this tagged data value.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ITaggedData.SetData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set the contents of this instance from the data passed.
            </summary>
            <param name="data">The data to extract contents from.</param>
            <param name="offset">The offset to begin extracting data from.</param>
            <param name="count">The number of bytes to extract.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ITaggedData.GetData">
            <summary>
            Get the data representing this instance.
            </summary>
            <returns>Returns the data for this instance.</returns>
        </member>
        <member name="T:Pao.Reports.Zip.RawTaggedData">
            <summary>
            A raw binary tagged value
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.RawTaggedData.#ctor(System.Int16)">
            <summary>
            Initialise a new instance.
            </summary>
            <param name="tag">The tag ID.</param>
        </member>
        <member name="P:Pao.Reports.Zip.RawTaggedData.TagID">
            <summary>
            Get the ID for this tagged data value.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.RawTaggedData.SetData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set the data from the raw values provided.
            </summary>
            <param name="data">The raw data to extract values from.</param>
            <param name="offset">The index to start extracting values from.</param>
            <param name="count">The number of bytes available.</param>
        </member>
        <member name="M:Pao.Reports.Zip.RawTaggedData.GetData">
            <summary>
            Get the binary data representing this instance.
            </summary>
            <returns>The raw binary data representing this instance.</returns>
        </member>
        <member name="P:Pao.Reports.Zip.RawTaggedData.Data">
            <summary>
            Get /set the binary data representing this instance.
            </summary>
            <returns>The raw binary data representing this instance.</returns>
        </member>
        <member name="F:Pao.Reports.Zip.RawTaggedData.tag_">
            <summary>
            The tag ID for this instance.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.ExtendedUnixData">
            <summary>
            Class representing extended unix date time values.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.ExtendedUnixData.Flags">
            <summary>
            Flags indicate which values are included in this instance.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ExtendedUnixData.Flags.ModificationTime">
            <summary>
            The modification time is included
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ExtendedUnixData.Flags.AccessTime">
            <summary>
            The access time is included
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ExtendedUnixData.Flags.CreateTime">
            <summary>
            The create time is included.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.ExtendedUnixData.TagID">
            <summary>
            Get the ID
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ExtendedUnixData.SetData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set the data from the raw values provided.
            </summary>
            <param name="data">The raw data to extract values from.</param>
            <param name="index">The index to start extracting values from.</param>
            <param name="count">The number of bytes available.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ExtendedUnixData.GetData">
            <summary>
            Get the binary data representing this instance.
            </summary>
            <returns>The raw binary data representing this instance.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ExtendedUnixData.IsValidValue(System.DateTime)">
            <summary>
            Test a <see cref="T:System.DateTime"> value to see if is valid and can be represented here.</see>
            </summary>
            <param name="value">The <see cref="T:System.DateTime">value</see> to test.</param>
            <returns>Returns true if the value is valid and can be represented; false if not.</returns>
            <remarks>The standard Unix time is a signed integer data type, directly encoding the Unix time number,
            which is the number of seconds since 1970-01-01.
            Being 32 bits means the values here cover a range of about 136 years.
            The minimum representable time is 1901-12-13 20:45:52,
            and the maximum representable time is 2038-01-19 03:14:07.
            </remarks>
        </member>
        <member name="P:Pao.Reports.Zip.ExtendedUnixData.ModificationTime">
            <summary>
            Get /set the Modification Time
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <seealso cref="M:Pao.Reports.Zip.ExtendedUnixData.IsValidValue(System.DateTime)"></seealso>
        </member>
        <member name="P:Pao.Reports.Zip.ExtendedUnixData.AccessTime">
            <summary>
            Get / set the Access Time
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <seealso cref="M:Pao.Reports.Zip.ExtendedUnixData.IsValidValue(System.DateTime)"></seealso>
        </member>
        <member name="P:Pao.Reports.Zip.ExtendedUnixData.CreateTime">
            <summary>
            Get / Set the Create Time
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
            <seealso cref="M:Pao.Reports.Zip.ExtendedUnixData.IsValidValue(System.DateTime)"></seealso>
        </member>
        <member name="P:Pao.Reports.Zip.ExtendedUnixData.Include">
            <summary>
            Get/set the <see cref="T:Pao.Reports.Zip.ExtendedUnixData.Flags">values</see> to include.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.NTTaggedData">
            <summary>
            Class handling NT date time values.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.NTTaggedData.TagID">
            <summary>
            Get the ID for this tagged data value.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.NTTaggedData.SetData(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Set the data from the raw values provided.
            </summary>
            <param name="data">The raw data to extract values from.</param>
            <param name="index">The index to start extracting values from.</param>
            <param name="count">The number of bytes available.</param>
        </member>
        <member name="M:Pao.Reports.Zip.NTTaggedData.GetData">
            <summary>
            Get the binary data representing this instance.
            </summary>
            <returns>The raw binary data representing this instance.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.NTTaggedData.IsValidValue(System.DateTime)">
            <summary>
            Test a <see cref="T:System.DateTime"> valuie to see if is valid and can be represented here.</see>
            </summary>
            <param name="value">The <see cref="T:System.DateTime">value</see> to test.</param>
            <returns>Returns true if the value is valid and can be represented; false if not.</returns>
            <remarks>
            NTFS filetimes are 64-bit unsigned integers, stored in Intel
            (least significant byte first) byte order. They determine the
            number of 1.0E-07 seconds (1/10th microseconds!) past WinNT "epoch",
            which is "01-Jan-1601 00:00:00 UTC". 28 May 60056 is the upper limit
            </remarks>
        </member>
        <member name="P:Pao.Reports.Zip.NTTaggedData.LastModificationTime">
            <summary>
            Get/set the <see cref="T:System.DateTime">last modification time</see>.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.NTTaggedData.CreateTime">
            <summary>
            Get /set the <see cref="T:System.DateTime">create time</see>
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.NTTaggedData.LastAccessTime">
            <summary>
            Get /set the <see cref="T:System.DateTime">last access time</see>.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.ITaggedDataFactory">
            <summary>
            A factory that creates <see cref="T:Pao.Reports.Zip.ITaggedData">tagged data</see> instances.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ITaggedDataFactory.Create(System.Int16,System.Byte[],System.Int32,System.Int32)">
            <summary>
            Get data for a specific tag value.
            </summary>
            <param name="tag">The tag ID to find.</param>
            <param name="data">The data to search.</param>
            <param name="offset">The offset to begin extracting data from.</param>
            <param name="count">The number of bytes to extract.</param>
            <returns>The located <see cref="T:Pao.Reports.Zip.ITaggedData">value found</see>, or null if not found.</returns>
        </member>
        <member name="T:Pao.Reports.Zip.ZipExtraData">
            
            <summary>
            A class to handle the extra data field for Zip entries
            </summary>
            <remarks>
            Extra data contains 0 or more values each prefixed by a header tag and length.
            They contain zero or more bytes of actual data.
            The data is held internally using a copy on write strategy.  This is more efficient but
            means that for extra data created by passing in data can have the values modified by the caller
            in some circumstances.
            </remarks>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.#ctor">
            <summary>
            Initialise a default instance.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.#ctor(System.Byte[])">
            <summary>
            Initialise with known extra data.
            </summary>
            <param name="data">The extra data.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.GetEntryData">
            <summary>
            Get the raw extra data value
            </summary>
            <returns>Returns the raw byte[] extra data this instance represents.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.Clear">
            <summary>
            Clear the stored data.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.ZipExtraData.Length">
            <summary>
            Gets the current extra data length.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.GetStreamForTag(System.Int32)">
            <summary>
            Get a read-only <see cref="T:System.IO.Stream"/> for the associated tag.
            </summary>
            <param name="tag">The tag to locate data for.</param>
            <returns>Returns a <see cref="T:System.IO.Stream"/> containing tag data or null if no tag was found.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.GetData(System.Int16)">
            <summary>
            Get the <see cref="T:Pao.Reports.Zip.ITaggedData">tagged data</see> for a tag.
            </summary>
            <param name="tag">The tag to search for.</param>
            <returns>Returns a <see cref="T:Pao.Reports.Zip.ITaggedData">tagged value</see> or null if none found.</returns>
        </member>
        <member name="P:Pao.Reports.Zip.ZipExtraData.ValueLength">
            <summary>
            Get the length of the last value found by <see cref="M:Pao.Reports.Zip.ZipExtraData.Find(System.Int32)"/>
            </summary>
            <remarks>This is only valid if <see cref="M:Pao.Reports.Zip.ZipExtraData.Find(System.Int32)"/> has previously returned true.</remarks>
        </member>
        <member name="P:Pao.Reports.Zip.ZipExtraData.CurrentReadIndex">
            <summary>
            Get the index for the current read value.
            </summary>
            <remarks>This is only valid if <see cref="M:Pao.Reports.Zip.ZipExtraData.Find(System.Int32)"/> has previously returned true.
            Initially the result will be the index of the first byte of actual data.  The value is updated after calls to
            <see cref="M:Pao.Reports.Zip.ZipExtraData.ReadInt"/>, <see cref="M:Pao.Reports.Zip.ZipExtraData.ReadShort"/> and <see cref="M:Pao.Reports.Zip.ZipExtraData.ReadLong"/>. </remarks>
        </member>
        <member name="P:Pao.Reports.Zip.ZipExtraData.UnreadCount">
            <summary>
            Get the number of bytes remaining to be read for the current value;
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.Find(System.Int32)">
            <summary>
            Find an extra data value
            </summary>
            <param name="headerID">The identifier for the value to find.</param>
            <returns>Returns true if the value was found; false otherwise.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.AddEntry(Pao.Reports.Zip.ITaggedData)">
            <summary>
            Add a new entry to extra data.
            </summary>
            <param name="taggedData">The <see cref="T:Pao.Reports.Zip.ITaggedData"/> value to add.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.AddEntry(System.Int32,System.Byte[])">
            <summary>
            Add a new entry to extra data
            </summary>
            <param name="headerID">The ID for this entry.</param>
            <param name="fieldData">The data to add.</param>
            <remarks>If the ID already exists its contents are replaced.</remarks>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.StartNewEntry">
            <summary>
            Start adding a new entry.
            </summary>
            <remarks>Add data using <see cref="M:Pao.Reports.Zip.ZipExtraData.AddData(System.Byte[])"/>, <see cref="M:Pao.Reports.Zip.ZipExtraData.AddLeShort(System.Int32)"/>, <see cref="M:Pao.Reports.Zip.ZipExtraData.AddLeInt(System.Int32)"/>, or <see cref="M:Pao.Reports.Zip.ZipExtraData.AddLeLong(System.Int64)"/>.
            The new entry is completed and actually added by calling <see cref="M:Pao.Reports.Zip.ZipExtraData.AddNewEntry(System.Int32)"/></remarks>
            <seealso cref="M:Pao.Reports.Zip.ZipExtraData.AddEntry(Pao.Reports.Zip.ITaggedData)"/>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.AddNewEntry(System.Int32)">
            <summary>
            Add entry data added since <see cref="M:Pao.Reports.Zip.ZipExtraData.StartNewEntry"/> using the ID passed.
            </summary>
            <param name="headerID">The identifier to use for this entry.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.AddData(System.Byte)">
            <summary>
            Add a byte of data to the pending new entry.
            </summary>
            <param name="data">The byte to add.</param>
            <seealso cref="M:Pao.Reports.Zip.ZipExtraData.StartNewEntry"/>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.AddData(System.Byte[])">
            <summary>
            Add data to a pending new entry.
            </summary>
            <param name="data">The data to add.</param>
            <seealso cref="M:Pao.Reports.Zip.ZipExtraData.StartNewEntry"/>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.AddLeShort(System.Int32)">
            <summary>
            Add a short value in little endian order to the pending new entry.
            </summary>
            <param name="toAdd">The data to add.</param>
            <seealso cref="M:Pao.Reports.Zip.ZipExtraData.StartNewEntry"/>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.AddLeInt(System.Int32)">
            <summary>
            Add an integer value in little endian order to the pending new entry.
            </summary>
            <param name="toAdd">The data to add.</param>
            <seealso cref="M:Pao.Reports.Zip.ZipExtraData.StartNewEntry"/>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.AddLeLong(System.Int64)">
            <summary>
            Add a long value in little endian order to the pending new entry.
            </summary>
            <param name="toAdd">The data to add.</param>
            <seealso cref="M:Pao.Reports.Zip.ZipExtraData.StartNewEntry"/>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.Delete(System.Int32)">
            <summary>
            Delete an extra data field.
            </summary>
            <param name="headerID">The identifier of the field to delete.</param>
            <returns>Returns true if the field was found and deleted.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.ReadLong">
            <summary>
            Read a long in little endian form from the last <see cref="M:Pao.Reports.Zip.ZipExtraData.Find(System.Int32)">found</see> data value
            </summary>
            <returns>Returns the long value read.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.ReadInt">
            <summary>
            Read an integer in little endian form from the last <see cref="M:Pao.Reports.Zip.ZipExtraData.Find(System.Int32)">found</see> data value.
            </summary>
            <returns>Returns the integer read.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.ReadShort">
            <summary>
            Read a short value in little endian form from the last <see cref="M:Pao.Reports.Zip.ZipExtraData.Find(System.Int32)">found</see> data value.
            </summary>
            <returns>Returns the short value read.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.ReadByte">
            <summary>
            Read a byte from an extra data
            </summary>
            <returns>The byte value read or -1 if the end of data has been reached.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.Skip(System.Int32)">
            <summary>
            Skip data during reading.
            </summary>
            <param name="amount">The number of bytes to skip.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.ReadShortInternal">
            <summary>
            Internal form of <see cref="M:Pao.Reports.Zip.ZipExtraData.ReadShort"/> that reads data at any location.
            </summary>
            <returns>Returns the short value read.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipExtraData.Dispose">
            <summary>
            Dispose of this instance.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.DescriptorData">
            <summary>
            Holds data pertinent to a data descriptor.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.DescriptorData.CompressedSize">
            <summary>
            Get /set the compressed size of data.
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.DescriptorData.Size">
            <summary>
            Get / set the uncompressed size of data
            </summary>
        </member>
        <member name="P:Pao.Reports.Zip.DescriptorData.Crc">
            <summary>
            Get /set the crc value.
            </summary>
        </member>
        <member name="T:Pao.Reports.Zip.ZipHelperStream">
            <summary>
            This class assists with writing/reading from Zip files.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.#ctor(System.String)">
            <summary>
            Initialise an instance of this class.
            </summary>
            <param name="name">The name of the file to open.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.#ctor(System.IO.Stream)">
            <summary>
            Initialise a new instance of <see cref="T:Pao.Reports.Zip.ZipHelperStream"/>.
            </summary>
            <param name="stream">The stream to use.</param>
        </member>
        <member name="P:Pao.Reports.Zip.ZipHelperStream.IsStreamOwner">
            <summary>
            Get / set a value indicating wether the the underlying stream is owned or not.
            </summary>
            <remarks>If the stream is owned it is closed when this instance is closed.</remarks>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.Close">
            <summary>
            Close the stream.
            </summary>
            <remarks>
            The underlying stream is closed only if <see cref="P:Pao.Reports.Zip.ZipHelperStream.IsStreamOwner"/> is true.
            </remarks>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.LocateBlockWithSignature(System.Int32,System.Int64,System.Int32,System.Int32)">
            <summary>
            Locates a block with the desired <paramref name="signature"/>.
            </summary>
            <param name="signature">The signature to find.</param>
            <param name="endLocation">Location, marking the end of block.</param>
            <param name="minimumBlockSize">Minimum size of the block.</param>
            <param name="maximumVariableData">The maximum variable data.</param>
            <returns>Eeturns the offset of the first byte after the signature; -1 if not found</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.WriteZip64EndOfCentralDirectory(System.Int64,System.Int64,System.Int64)">
            <summary>
            Write Zip64 end of central directory records (File header and locator).
            </summary>
            <param name="noOfEntries">The number of entries in the central directory.</param>
            <param name="sizeEntries">The size of entries in the central directory.</param>
            <param name="centralDirOffset">The offset of the dentral directory.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.WriteEndOfCentralDirectory(System.Int64,System.Int64,System.Int64,System.Byte[])">
            <summary>
            Write the required records to end the central directory.
            </summary>
            <param name="noOfEntries">The number of entries in the directory.</param>
            <param name="sizeEntries">The size of the entries in the directory.</param>
            <param name="startOfCentralDirectory">The start of the central directory.</param>
            <param name="comment">The archive comment.  (This can be null).</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.ReadLEShort">
            <summary>
            Read an unsigned short in little endian byte order.
            </summary>
            <returns>Returns the value read.</returns>
            <exception cref="T:System.IO.IOException">
            An i/o error occurs.
            </exception>
            <exception cref="T:System.IO.EndOfStreamException">
            The file ends prematurely
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.ReadLEInt">
            <summary>
            Read an int in little endian byte order.
            </summary>
            <returns>Returns the value read.</returns>
            <exception cref="T:System.IO.IOException">
            An i/o error occurs.
            </exception>
            <exception cref="T:System.IO.EndOfStreamException">
            The file ends prematurely
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.ReadLELong">
            <summary>
            Read a long in little endian byte order.
            </summary>
            <returns>The value read.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.WriteLEShort(System.Int32)">
            <summary>
            Write an unsigned short in little endian byte order.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.WriteLEUshort(System.UInt16)">
            <summary>
            Write a ushort in little endian byte order.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.WriteLEInt(System.Int32)">
            <summary>
            Write an int in little endian byte order.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.WriteLEUint(System.UInt32)">
            <summary>
            Write a uint in little endian byte order.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.WriteLELong(System.Int64)">
            <summary>
            Write a long in little endian byte order.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.WriteLEUlong(System.UInt64)">
            <summary>
            Write a ulong in little endian byte order.
            </summary>
            <param name="value">The value to write.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.WriteDataDescriptor(Pao.Reports.Zip.ZipEntry)">
            <summary>
            Write a data descriptor.
            </summary>
            <param name="entry">The entry to write a descriptor for.</param>
            <returns>Returns the number of descriptor bytes written.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipHelperStream.ReadDataDescriptor(System.Boolean,Pao.Reports.Zip.DescriptorData)">
            <summary>
            Read data descriptor at the end of compressed data.
            </summary>
            <param name="zip64">if set to <c>true</c> [zip64].</param>
            <param name="data">The data to fill in.</param>
            <returns>Returns the number of bytes read in the descriptor.</returns>
        </member>
        <member name="T:Pao.Reports.Zip.ZipNameTransform">
            <summary>
            ZipNameTransform transforms names as per the Zip file naming convention.
            </summary>
            <remarks>The use of absolute names is supported although its use is not valid 
            according to Zip naming conventions, and should not be used if maximum compatability is desired.</remarks>
        </member>
        <member name="M:Pao.Reports.Zip.ZipNameTransform.#ctor">
            <summary>
            Initialize a new instance of <see cref="T:Pao.Reports.Zip.ZipNameTransform"></see>
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipNameTransform.#ctor(System.String)">
            <summary>
            Initialize a new instance of <see cref="T:Pao.Reports.Zip.ZipNameTransform"></see>
            </summary>
            <param name="trimPrefix">The string to trim from the front of paths if found.</param>
        </member>
        <member name="M:Pao.Reports.Zip.ZipNameTransform.#cctor">
            <summary>
            Static constructor.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipNameTransform.TransformDirectory(System.String)">
            <summary>
            Transform a windows directory name according to the Zip file naming conventions.
            </summary>
            <param name="name">The directory name to transform.</param>
            <returns>The transformed name.</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipNameTransform.TransformFile(System.String)">
            <summary>
            Transform a windows file name according to the Zip file naming conventions.
            </summary>
            <param name="name">The file name to transform.</param>
            <returns>The transformed name.</returns>
        </member>
        <member name="P:Pao.Reports.Zip.ZipNameTransform.TrimPrefix">
            <summary>
            Get/set the path prefix to be trimmed from paths if present.
            </summary>
            <remarks>The prefix is trimmed before any conversion from
            a windows path is done.</remarks>
        </member>
        <member name="M:Pao.Reports.Zip.ZipNameTransform.MakeValidName(System.String,System.Char)">
            <summary>
            Force a name to be valid by replacing invalid characters with a fixed value
            </summary>
            <param name="name">The name to force valid</param>
            <param name="replacement">The replacement character to use.</param>
            <returns>Returns a valid name</returns>
        </member>
        <member name="M:Pao.Reports.Zip.ZipNameTransform.IsValidName(System.String,System.Boolean)">
            <summary>
            Test a name to see if it is a valid name for a zip entry.
            </summary>
            <param name="name">The name to test.</param>
            <param name="relaxed">If true checking is relaxed about windows file names and absolute paths.</param>
            <returns>Returns true if the name is a valid zip name; false otherwise.</returns>
            <remarks>Zip path names are actually in Unix format, and should only contain relative paths.
            This means that any path stored should not contain a drive or
            device letter, or a leading slash.  All slashes should forward slashes '/'.
            An empty name is valid for a file where the input comes from standard input.
            A null name is not considered valid.
            </remarks>
        </member>
        <member name="M:Pao.Reports.Zip.ZipNameTransform.IsValidName(System.String)">
            <summary>
            Test a name to see if it is a valid name for a zip entry.
            </summary>
            <param name="name">The name to test.</param>
            <returns>Returns true if the name is a valid zip name; false otherwise.</returns>
            <remarks>Zip path names are actually in unix format,
            and should only contain relative paths if a path is present.
            This means that the path stored should not contain a drive or
            device letter, or a leading slash.  All slashes should forward slashes '/'.
            An empty name is valid where the input comes from standard input.
            A null name is not considered valid.
            </remarks>
        </member>
        <member name="T:Pao.Reports.Zip.ZipOutputStream">
             <summary>
             This is a DeflaterOutputStream that writes the files into a zip
             archive one after another.  It has a special method to start a new
             zip entry.  The zip entries contains information about the file name
             size, compressed size, CRC, etc.
             
             It includes support for Stored and Deflated entries.
             This class is not thread safe.
             <br/>
             <br/>Author of the original java version : Jochen Hoenicke
             </summary>
             <example> This sample shows how to create a zip file
             <code>
             using System;
             using System.IO;
             
             using Pao.Reports.Core;
             using Pao.Reports.Zip;
             
             class MainClass
             {
             	public static void Main(string[] args)
             	{
             		string[] filenames = Directory.GetFiles(args[0]);
             		byte[] buffer = new byte[4096];
             		
             		using ( ZipOutputStream s = new ZipOutputStream(File.Create(args[1])) ) {
             		
             			s.SetLevel(9); // 0 - store only to 9 - means best compression
             		
             			foreach (string file in filenames) {
             				ZipEntry entry = new ZipEntry(file);
             				s.PutNextEntry(entry);
            
             				using (FileStream fs = File.OpenRead(file)) {
            						StreamUtils.Copy(fs, s, buffer);
             				}
             			}
             		}
             	}
             }	
             </code>
             </example>
        </member>
        <member name="M:Pao.Reports.Zip.ZipOutputStream.#ctor(System.IO.Stream)">
            <summary>
            Creates a new Zip output stream, writing a zip archive.
            </summary>
            <param name="baseOutputStream">
            The output stream to which the archive contents are written.
            </param>
        </member>
        <member name="P:Pao.Reports.Zip.ZipOutputStream.IsFinished">
            <summary>
            Gets a flag value of true if the central header has been added for this archive; false if it has not been added.
            </summary>
            <remarks>No further entries can be added once this has been done.</remarks>
        </member>
        <member name="M:Pao.Reports.Zip.ZipOutputStream.SetComment(System.String)">
            <summary>
            Set the zip file comment.
            </summary>
            <param name="comment">
            The comment text for the entire archive.
            </param>
            <exception name ="ArgumentOutOfRangeException">
            The converted comment is longer than 0xffff bytes.
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.ZipOutputStream.SetLevel(System.Int32)">
            <summary>
            Sets the compression level.  The new level will be activated
            immediately.
            </summary>
            <param name="level">The new compression level (1 to 9).</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Level specified is not supported.
            </exception>
            <see cref="T:Pao.Reports.Zip.Compression.Deflater"/>
        </member>
        <member name="M:Pao.Reports.Zip.ZipOutputStream.GetLevel">
            <summary>
            Get the current deflater compression level
            </summary>
            <returns>The current compression level</returns>
        </member>
        <member name="P:Pao.Reports.Zip.ZipOutputStream.UseZip64">
            <summary>
            Get / set a value indicating how Zip64 Extension usage is determined when adding entries.
            </summary>
            <remarks>Older archivers may not understand Zip64 extensions.
            If backwards compatability is an issue be careful when adding <see cref="P:Pao.Reports.Zip.ZipEntry.Size">entries</see> to an archive.
            Setting this property to off is workable but less desirable as in those circumstances adding a file
            larger then 4GB will fail.</remarks>
        </member>
        <member name="M:Pao.Reports.Zip.ZipOutputStream.WriteLeShort(System.Int32)">
            <summary>
            Write an unsigned short in little endian byte order.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipOutputStream.WriteLeInt(System.Int32)">
            <summary>
            Write an int in little endian byte order.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipOutputStream.WriteLeLong(System.Int64)">
            <summary>
            Write an int in little endian byte order.
            </summary>
        </member>
        <member name="M:Pao.Reports.Zip.ZipOutputStream.PutNextEntry(Pao.Reports.Zip.ZipEntry)">
            <summary>
            Starts a new Zip entry. It automatically closes the previous
            entry if present.
            All entry elements bar name are optional, but must be correct if present.
            If the compression method is stored and the output is not patchable
            the compression for that entry is automatically changed to deflate level 0
            </summary>
            <param name="entry">
            the entry.
            </param>
            <exception cref="T:System.ArgumentNullException">
            if entry passed is null.
            </exception>
            <exception cref="T:System.IO.IOException">
            if an I/O error occured.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            if stream was finished
            </exception>
            <exception cref="T:Pao.Reports.Zip.ZipException">
            Too many entries in the Zip file<br/>
            Entry name is too long<br/>
            Finish has already been called<br/>
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.ZipOutputStream.CloseEntry">
            <summary>
            Closes the current entry, updating header and footer information as required
            </summary>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            No entry is active.
            </exception>
        </member>
        <member name="M:Pao.Reports.Zip.ZipOutputStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Writes the given buffer to the current entry.
            </summary>
            <param name="buffer">The buffer containing data to write.</param>
            <param name="offset">The offset of the first byte to write.</param>
            <param name="count">The number of bytes to write.</param>
            <exception cref="T:Pao.Reports.Zip.ZipException">Archive size is invalid</exception>
            <exception cref="T:System.InvalidOperationException">No entry is active.</exception>
        </member>
        <member name="M:Pao.Reports.Zip.ZipOutputStream.Finish">
            <summary>
            Finishes the stream.  This will write the central directory at the
            end of the zip file and flush the stream.
            </summary>
            <remarks>
            This is automatically called when the stream is closed.
            </remarks>
            <exception cref="T:System.IO.IOException">
            An I/O error occurs.
            </exception>
            <exception cref="T:Pao.Reports.Zip.ZipException">
            Comment exceeds the maximum length<br/>
            Entry name exceeds the maximum length
            </exception>
        </member>
        <member name="F:Pao.Reports.Zip.ZipOutputStream.entries">
            <summary>
            The entries for the archive.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipOutputStream.crc">
            <summary>
            Used to track the crc of data added to entries.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipOutputStream.curEntry">
            <summary>
            The current entry being added.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipOutputStream.size">
            <summary>
            Used to track the size of data for an entry during writing.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipOutputStream.offset">
            <summary>
            Offset to be recorded for each entry in the central header.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipOutputStream.zipComment">
            <summary>
            Comment for the entire archive recorded in central header.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipOutputStream.patchEntryHeader">
            <summary>
            Flag indicating that header patching is required for the current entry.
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipOutputStream.crcPatchPos">
            <summary>
            Position to patch crc
            </summary>
        </member>
        <member name="F:Pao.Reports.Zip.ZipOutputStream.sizePatchPos">
            <summary>
            Position to patch size.
            </summary>
        </member>
        <member name="T:Pao.Reports.IObjects">
            <summary>
            デザインオブジェクト インタフェース
            </summary>
        </member>
        <member name="M:Pao.Reports.IObjects.SetObject(System.String)">
            <summary>
            オブジェクト設定
            </summary>
            <param name="objName">オブジェクト名</param>
            <returns>true:成功 / false:失敗</returns>
        </member>
        <member name="M:Pao.Reports.IObjects.SetObject(System.String,System.Int32)">
            <summary>
            オブジェクト設定
            </summary>
            <param name="objName">オブジェクト名</param>
            <param name="index">オブジェクト行番号</param>
            <returns>true:成功 / false:失敗</returns>
        </member>
        <member name="P:Pao.Reports.IObjects.z_Text">
            <summary>
            文字列オブジェクト用プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.IObjects.z_Square">
            <summary>
            四角形オブジェクト用プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.IObjects.z_Circle">
            <summary>
            円オブジェクト用プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.IObjects.z_Line">
            <summary>
            罫線xxxオブジェクト用プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.IObjects.z_Image">
            <summary>
            画像オブジェクト用プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.IObjects.z_ArtText">
            <summary>
            装飾文字オブジェクト用プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.IObjects.z_Barcode">
            <summary>
            バーコードオブジェクト用プロパティ
            </summary>
        </member>
        <member name="M:Pao.Reports.IObjects.Clone">
            <summary>
            Copy Object (don't touch)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.IObjects2">
            <summary>
            デザインオブジェクト インタフェース
            </summary>
        </member>
        <member name="P:Pao.Reports.IObjects2.admin">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pao.Reports.IObjects2.SetObject_FromXML(System.String,System.String,System.Int32,System.Int32,System.String,Pao.Reports.PmDefObject)">
            <summary>
            
            </summary>
            <param name="objKind"></param>
            <param name="objName"></param>
            <param name="pageNo"></param>
            <param name="index"></param>
            <param name="hashIndex"></param>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="T:Pao.Reports.IAdmin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.IAdmin.z_flgDy">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.IAdmin.zobjs_in_page">
            <summary>
            (don't touch)
            </summary>
        </member>
        <member name="P:Pao.Reports.IAdmin.hpm_Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.IAdmin.hpm_Line">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.IAdmin.hpm_Square">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.IAdmin.hpm_Circle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.IAdmin.hpm_Image">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.IAdmin.hpm_Barcode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.IAdmin.hpm_ArtText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.IAdmin.cur_page">
            <summary>
            
            </summary>
        </member>
        <member name="T:Pao.Reports.Admin">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Admin.z_flgDy">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Admin.zobjs_in_page">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Admin.hpm_Text">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Admin.hpm_Line">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Admin.hpm_Square">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Admin.hpm_Circle">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Admin.hpm_Image">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Admin.hpm_Barcode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Admin.hpm_ArtText">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.Admin.cur_page">
            <summary>
            
            </summary>
        </member>
        <member name="T:Pao.Reports.ZObjects">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.Reports.ZObjects.z_HashObjects">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pao.Reports.ZObjects.Clone">
            <summary>
            オブジェクトの行番号
            </summary>
        </member>
        <member name="M:Pao.Reports.ZObjects.SetObject(System.String)">
            <summary>
            オブジェクト設定
            </summary>
            <param name="objName">オブジェクト名</param>
            <returns>true:成功 / false:失敗</returns>
        </member>
        <member name="M:Pao.Reports.ZObjects.SetObject(System.String,System.Int32)">
            <summary>
            オブジェクト設定
            </summary>
            <param name="objName">オブジェクト名</param>
            <param name="index">行番号</param>
            <returns>true:成功 / false:失敗</returns>
        </member>
        <member name="M:Pao.Reports.ZObjects.pSetObject(System.String,System.Int32)">
            <summary>
            オブジェクト設定
            </summary>
            <param name="objName">オブジェクト名</param>
            <param name="index">行番号</param>
            <returns>true:成功 / false:失敗</returns>
        </member>
        <member name="M:Pao.Reports.ZObjects.SetObject_FromXML(System.String,System.String,System.Int32,System.Int32,System.String,Pao.Reports.PmDefObject)">
            <summary>
            オブジェクト設定
            </summary>
            <param name="objKind">オブジェクト種類</param>
            <param name="objName">オブジェクト名</param>
            <param name="pageNo">頁番号</param>
            <param name="index">インデックス(行番号)</param>
            <param name="hashIndex">ハッシュのキー</param>
            <param name="obj">属性オブジェクト</param>
            <returns></returns>
        </member>
        <member name="P:Pao.Reports.ZObjects.z_Text">
            <summary>
            文字列オブジェクト専用プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObjects.z_Square">
            <summary>
            四角形オブジェクト専用プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObjects.z_Circle">
            <summary>
            円オブジェクト専用プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObjects.z_Line">
            <summary>
            罫線オブジェクト専用プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObjects.z_Image">
            <summary>
            画像オブジェクト専用プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObjects.z_ArtText">
            <summary>
            装飾文字オブジェクト専用プロパティ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObjects.z_Barcode">
            <summary>
            バーコードオブジェクト専用プロパティ
            </summary>
        </member>
        <member name="T:Pao.Reports.ZFontAttr">
            <summary>
            フォント属性クラス
            </summary>
        </member>
        <member name="P:Pao.Reports.ZFontAttr.Name">
            <summary>
            フォント名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZFontAttr.Size">
            <summary>
            フォントサイズ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZFontAttr.Italic">
            <summary>
            イタリックの場合にtrue
            </summary>
        </member>
        <member name="P:Pao.Reports.ZFontAttr.Bold">
            <summary>
            ボールドの場合にtrue
            </summary>
        </member>
        <member name="P:Pao.Reports.ZFontAttr.Color">
            <summary>
            文字色
            </summary>
        </member>
        <member name="P:Pao.Reports.ZFontAttr.UnderLine">
            <summary>
            アンダーライン
            </summary>
        </member>
        <member name="P:Pao.Reports.ZFontAttr.Strikeout">
            <summary>
            取消線
            </summary>
        </member>
        <member name="P:Pao.Reports.ZFontAttr.Unit">
            <summary>
            フォントの高さの単位
            </summary>
        </member>
        <member name="T:Pao.Reports.ZLineAttr">
            <summary>
            罫線属性クラス
            </summary>
        </member>
        <member name="F:Pao.Reports.ZLineAttr.width_">
            <summary>
            罫線幅
            </summary>
        </member>
        <member name="F:Pao.Reports.ZLineAttr.color_">
            <summary>
            罫線色
            </summary>
        </member>
        <member name="F:Pao.Reports.ZLineAttr.style_">
            <summary>
            罫線種
            </summary>
        </member>
        <member name="F:Pao.Reports.ZLineAttr.type_">
            <summary>
            タイプ
            </summary>
        </member>
        <member name="F:Pao.Reports.ZLineAttr.dashPattern_">
            <summary>
            ダッシュパターン
            </summary>
        </member>
        <member name="P:Pao.Reports.ZLineAttr.Width">
            <summary>
            罫線幅
            </summary>
        </member>
        <member name="P:Pao.Reports.ZLineAttr.Color">
            <summary>
            罫線色
            </summary>
        </member>
        <member name="P:Pao.Reports.ZLineAttr.Style">
            <summary>
            罫線種
            </summary>
        </member>
        <member name="P:Pao.Reports.ZLineAttr.Type">
            <summary>
            タイプ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZLineAttr.DashLine">
            <summary>
            ダッシュの罫線の長さ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZLineAttr.DashSpace">
            <summary>
            ダッシュの空白の長さ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZLineAttr.DashPattern">
            <summary>
            ダッシュパターン
            </summary>
        </member>
        <member name="T:Pao.Reports.IObject">
            <summary>
            全てのオブジェクトのプロパティインタフェイス
            </summary>
        </member>
        <member name="P:Pao.Reports.IObject.X">
            <summary>
            オブジェクトのX座標
            </summary>
        </member>
        <member name="P:Pao.Reports.IObject.Y">
            <summary>
            オブジェクトのY座標
            </summary>
        </member>
        <member name="P:Pao.Reports.IObject.IntervalX">
            <summary>
            描画間隔（X座標に対して）
            </summary>
        </member>
        <member name="P:Pao.Reports.IObject.IntervalY">
            <summary>
            描画間隔（Y座標に対して）
            </summary>
        </member>
        <member name="P:Pao.Reports.IObject.RepeatXYBoth">
            <summary>
            両方向へ繰り返し
            </summary>
        </member>
        <member name="P:Pao.Reports.IObject.Repeat">
            <summary>
            繰り返し回数
            </summary>
        </member>
        <member name="P:Pao.Reports.IObject.z_LineAttr">
            <summary>
            罫線属性
            </summary>
        </member>
        <member name="T:Pao.Reports.ZObject">
            <summary>
            全てのオブジェクトのプロパティクラス
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObject.X">
            <summary>
            始点（左上）のX座標
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObject.Y">
            <summary>
            始点（左上）のY座標
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObject.IntervalX">
            <summary>
            描画間隔（X座標に対して）
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObject.IntervalY">
            <summary>
            描画間隔（Y座標に対して）
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObject.RepeatXYBoth">
            <summary>
            両方向へ繰り返し
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObject.Repeat">
            <summary>
            繰り返し回数
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObject.z_FontAttr">
            <summary>
            フォント属性
            </summary>
        </member>
        <member name="P:Pao.Reports.ZObject.z_LineAttr">
            <summary>
            罫線属性
            </summary>
        </member>
        <member name="T:Pao.Reports.IRect">
            <summary>
            罫線以外のオブジェクトのプロパティインタフェイス
            </summary>
        </member>
        <member name="P:Pao.Reports.IRect.Width">
            <summary>
            描画範囲（幅）
            </summary>
        </member>
        <member name="P:Pao.Reports.IRect.Height">
            <summary>
            描画範囲（高さ）
            </summary>
        </member>
        <member name="P:Pao.Reports.IRect.Angle">
            <summary>
            回転角度
            </summary>
        </member>
        <member name="T:Pao.Reports.ZRect">
            <summary>
            罫線以外のオブジェクトのプロパティクラス
            </summary>
        </member>
        <member name="P:Pao.Reports.ZRect.Width">
            <summary>
            描画範囲（幅）
            </summary>
        </member>
        <member name="P:Pao.Reports.ZRect.Height">
            <summary>
            描画範囲（高さ）
            </summary>
        </member>
        <member name="P:Pao.Reports.ZRect.Angle">
            <summary>
            回転角度
            </summary>
        </member>
        <member name="T:Pao.Reports.IText">
            <summary>
            文字列オブジェクトインタフェイス
            </summary>
        </member>
        <member name="P:Pao.Reports.IText.TextAlign">
            <summary>
            表示横位置
            </summary>
        </member>
        <member name="P:Pao.Reports.IText.TextVAlign">
            <summary>
            表示縦位置
            </summary>
        </member>
        <member name="P:Pao.Reports.IText.Text">
            <summary>
            表示文字列
            </summary>
        </member>
        <member name="P:Pao.Reports.IText.BackColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:Pao.Reports.IText.IsVertical">
            <summary>
            縦書き
            </summary>
        </member>
        <member name="P:Pao.Reports.IText.IsElastic">
            <summary>
            伸縮自在
            </summary>
        </member>
        <member name="P:Pao.Reports.IText.FixingFontHeight">
            <summary>
            フォント高さ固定
            </summary>
        </member>
        <member name="P:Pao.Reports.IText.OutLineWidth">
            <summary>
            アウトライン幅
            </summary>
        </member>
        <member name="P:Pao.Reports.IText.OutLineColor">
            <summary>
            アウトライン色
            </summary>
        </member>
        <member name="T:Pao.Reports.ZText">
            <summary>
            文字列オブジェクトクラス
            </summary>
        </member>
        <member name="M:Pao.Reports.ZText.#ctor(Pao.Reports.PmDefText,Pao.Reports.ZLineAttr,Pao.Reports.ZFontAttr)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.TextAlign">
            <summary>
            表示横位置
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.TextVAlign">
            <summary>
            表示縦位置
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.Text">
            <summary>
            表示文字列
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.BackColor">
            <summary>
            背景色(文字列・画像用)
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.IsVertical">
            <summary>
            縦書き
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.IsElastic">
            <summary>
            伸縮自在
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.FixingFontHeight">
            <summary>
            フォント高さ固定
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.IsKintou">
            <summary>
            IsKintou
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.IsKintou_Hankaku">
            <summary>
            IsKintou_Hankaku
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.IsKintou_Hankaku_Kana">
            <summary>
            IsKintou_Hankaku_Kana
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.Char_OutOfKintou">
            <summary>
            Char_OutOfKintou
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.IsKintouFrontBack">
            <summary>
            IsKintouFrontBack
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.NumOfSpaceFrontBack">
            <summary>
            NumOfSpaceFrontBack
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.OutLineWidth">
            <summary>
            アウトライン幅
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText.OutLineColor">
            <summary>
            アウトライン色
            </summary>
        </member>
        <member name="T:Pao.Reports.ZText_Index">
            <summary>
            文字列オブジェクトクラス
            </summary>
        </member>
        <member name="M:Pao.Reports.ZText_Index.#ctor(Pao.Reports.PmDefText,Pao.Reports.ZLineAttr,Pao.Reports.ZFontAttr)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText_Index.TextAlign">
            <summary>
            表示横位置
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText_Index.TextVAlign">
            <summary>
            表示縦位置
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText_Index.Text">
            <summary>
            表示文字列
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText_Index.BackColor">
            <summary>
            背景色(文字列・画像用)
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText_Index.IsVertical">
            <summary>
            縦書き
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText_Index.IsElastic">
            <summary>
            伸縮自在
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText_Index.FixingFontHeight">
            <summary>
            フォント高さ固定
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText_Index.OutLineWidth">
            <summary>
            アウトライン幅
            </summary>
        </member>
        <member name="P:Pao.Reports.ZText_Index.OutLineColor">
            <summary>
            アウトライン色
            </summary>
        </member>
        <member name="T:Pao.Reports.ISquare">
            <summary>
            四角形オブジェクトインタフェイス
            </summary>
        </member>
        <member name="P:Pao.Reports.ISquare.PaintColor">
            <summary>
            塗り潰す色
            </summary>
        </member>
        <member name="P:Pao.Reports.ISquare.HatchDensity">
            <summary>
            網掛け濃度(%)
            </summary>
        </member>
        <member name="P:Pao.Reports.ISquare.R">
            <summary>
            四角形の角の丸さを表す値
            </summary>
        </member>
        <member name="P:Pao.Reports.ISquare.CornerType">
            <summary>
            四角形の角の状態
            </summary>
        </member>
        <member name="T:Pao.Reports.ZSquare">
            <summary>
            四角形オブジェクトクラス
            </summary>
        </member>
        <member name="M:Pao.Reports.ZSquare.#ctor(Pao.Reports.PmDefSquare,Pao.Reports.PmDefine,Pao.Reports.ZCornerType,Pao.Reports.ZLineAttr,Pao.Reports.ZFontAttr)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZSquare.PaintColor">
            <summary>
            塗り潰す色
            </summary>
        </member>
        <member name="P:Pao.Reports.ZSquare.HatchDensity">
            <summary>
            網掛け濃度(%)
            </summary>
        </member>
        <member name="P:Pao.Reports.ZSquare.R">
            <summary>
            四角の角の丸さを表す値
            </summary>
        </member>
        <member name="P:Pao.Reports.ZSquare.CornerType">
            <summary>
            四角形の角の状態
            </summary>
        </member>
        <member name="T:Pao.Reports.ICircle">
            <summary>
            円オブジェクトインタフェイス
            </summary>
        </member>
        <member name="P:Pao.Reports.ICircle.PaintColor">
            <summary>
            塗り潰す色
            </summary>
        </member>
        <member name="P:Pao.Reports.ICircle.HatchDensity">
            <summary>
            網掛け濃度(%)
            </summary>
        </member>
        <member name="T:Pao.Reports.ZCircle">
            <summary>
            円オブジェクトクラス
            </summary>
        </member>
        <member name="M:Pao.Reports.ZCircle.#ctor(Pao.Reports.PmDefCircle,Pao.Reports.PmDefine,Pao.Reports.ZLineAttr,Pao.Reports.ZFontAttr)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZCircle.PaintColor">
            <summary>
            塗り潰す色
            </summary>
        </member>
        <member name="P:Pao.Reports.ZCircle.HatchDensity">
            <summary>
            網掛け濃度(%)
            </summary>
        </member>
        <member name="T:Pao.Reports.ILine">
            <summary>
            罫線オブジェクトインタフェイス
            </summary>
        </member>
        <member name="P:Pao.Reports.ILine.EndX">
            <summary>
            罫線の終点のX座標
            </summary>
        </member>
        <member name="P:Pao.Reports.ILine.EndY">
            <summary>
            罫線の終点のY座標
            </summary>
        </member>
        <member name="P:Pao.Reports.ILine.Thick">
            <summary>
            罫線の円弧の厚み
            </summary>
        </member>
        <member name="T:Pao.Reports.ZLine">
            <summary>
            罫線オブジェクトクラス
            </summary>
        </member>
        <member name="M:Pao.Reports.ZLine.#ctor(Pao.Reports.PmDefLine,Pao.Reports.ZLineAttr,Pao.Reports.ZFontAttr)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZLine.EndX">
            <summary>
            罫線の終点のX座標
            </summary>
        </member>
        <member name="P:Pao.Reports.ZLine.EndY">
            <summary>
            罫線の終点のY座標
            </summary>
        </member>
        <member name="P:Pao.Reports.ZLine.Thick">
            <summary>
            罫線の円弧の厚み
            </summary>
        </member>
        <member name="T:Pao.Reports.IImage">
            <summary>
            画像オブジェクトインタフェイス
            </summary>
        </member>
        <member name="P:Pao.Reports.IImage.ImageData">
            <summary>
            イメージファイルのパス又はデータ
            </summary>
        </member>
        <member name="P:Pao.Reports.IImage.ImageAlign">
            <summary>
            イメージ位置
            </summary>
        </member>
        <member name="P:Pao.Reports.IImage.ImageRev">
            <summary>
            イメージ反転
            </summary>
        </member>
        <member name="T:Pao.Reports.ZImage">
            <summary>
            画像オブジェクトクラス
            </summary>
        </member>
        <member name="M:Pao.Reports.ZImage.#ctor(Pao.Reports.PmDefImage,Pao.Reports.ZLineAttr,Pao.Reports.ZFontAttr)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZImage.BackColor">
            <summary>
            背景色(文字列・画像用)
            </summary>
        </member>
        <member name="P:Pao.Reports.ZImage.ImageData">
            <summary>
            イメージファイルのパス又はデータ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZImage.ImageAlign">
            <summary>
            イメージ位置
            </summary>
        </member>
        <member name="P:Pao.Reports.ZImage.ImageRev">
            <summary>
            イメージ反転
            </summary>
        </member>
        <member name="T:Pao.Reports.IArtText">
            <summary>
            装飾文字オブジェクトインタフェイス
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.BackColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.Text">
            <summary>
            表示文字列
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.OutLineWidth">
            <summary>
            アウトライン幅
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.OutLineColor">
            <summary>
            アウトライン色
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.RevText">
            <summary>
            逆転
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.WriteVertically">
            <summary>
            縦書き
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.FontName">
            <summary>
            フォント名
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.FontBold">
            <summary>
            フォント太字
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.Color">
            <summary>
            文字色
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.CharAngle">
            <summary>
            文字回転角度
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.DelimiterProcess">
            <summary>
            桁区切り重ね処理
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.DelimiterString">
            <summary>
            桁区切り対象文字
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.DelimiterPileRatef">
            <summary>
            桁区切り重ね率＿前
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.DelimiterPileRater">
            <summary>
            桁区切り重ね率＿後
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.ShearX">
            <summary>
            斜体＿横
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.ShearY">
            <summary>
            斜体＿縦
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.ShearStretch">
            <summary>
            斜体による伸縮
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.PileRate">
            <summary>
            重ね率
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.PileOrderLeftFront">
            <summary>
            重ね左前
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.ProjectionX">
            <summary>
            上下反転
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.ProjectionY">
            <summary>
            左右反転
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.ShadowX">
            <summary>
            影X位置
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.ShadowY">
            <summary>
            影Y位置
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.ShadowColor">
            <summary>
            影文字色
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.ShadowLineColor">
            <summary>
            影枠線色
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.ShadowLineWidth">
            <summary>
            影枠線幅
            </summary>
        </member>
        <member name="P:Pao.Reports.IArtText.ShadowStretch">
            <summary>
            影付による伸縮
            </summary>
        </member>
        <member name="T:Pao.Reports.ZArtText">
            <summary>
            装飾文字オブジェクトクラス
            </summary>
        </member>
        <member name="M:Pao.Reports.ZArtText.#ctor(Pao.Reports.PmDefArtText,Pao.Reports.ZLineAttr,Pao.Reports.ZFontAttr)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.BackColor">
            <summary>
            背景色
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.Text">
            <summary>
            表示文字列
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.OutLineWidth">
            <summary>
            アウトライン幅
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.OutLineColor">
            <summary>
            アウトライン色
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.RevText">
            <summary>
            逆転
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.WriteVertically">
            <summary>
            縦書き
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.FontName">
            <summary>
            フォント名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.FontBold">
            <summary>
            フォント太字
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.Color">
            <summary>
            文字色
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.CharAngle">
            <summary>
            文字回転角度
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.DelimiterProcess">
            <summary>
            桁区切り重ね処理
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.DelimiterString">
            <summary>
            桁区切り対象文字
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.DelimiterPileRatef">
            <summary>
            桁区切り重ね率＿前
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.DelimiterPileRater">
            <summary>
            桁区切り重ね率＿後
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.ShearX">
            <summary>
            斜体＿横
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.ShearY">
            <summary>
            斜体＿縦
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.ShearStretch">
            <summary>
            斜体による伸縮
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.PileRate">
            <summary>
            重ね率
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.PileOrderLeftFront">
            <summary>
            重ね左前
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.ProjectionX">
            <summary>
            上下反転
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.ProjectionY">
            <summary>
            左右反転
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.ShadowX">
            <summary>
            影X位置
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.ShadowY">
            <summary>
            影Y位置
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.ShadowColor">
            <summary>
            影文字色
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.ShadowLineColor">
            <summary>
            影枠線色
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.ShadowLineWidth">
            <summary>
            影枠線幅
            </summary>
        </member>
        <member name="P:Pao.Reports.ZArtText.ShadowStretch">
            <summary>
            影付による伸縮
            </summary>
        </member>
        <member name="T:Pao.Reports.IBarcode">
            <summary>
            バーコードオブジェクトインタフェイス
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.Kind">
            <summary>
            バーコードの種類
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.Code">
            <summary>
            コード
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.Soeji">
            <summary>
            添え字を表示するかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.Kintou">
            <summary>
            添え字を均等割付するかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.DispStartStop">
            <summary>
            スタート・ストップコードを表示するかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.KuroBar">
            <summary>
            ドット単位で黒バーの幅を調整
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.ShiroBar">
            <summary>
            ドット単位で白バーの幅を調整
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.IsWriteDirect">
            <summary>
            直接描画するかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.Point">
            <summary>
            郵便カスタマバーコードのポイント
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.QrVersion">
            <summary>
            QRコードのバージョン(1～40)
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.QrErrCorrect">
            <summary>
            QRコードのエラー訂正レベル(L/M/Q/H)
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.StringEncoding">
            <summary>
            全角文字コード(二次元バーコード)
            Encoding.GetEncoding()の引数は受け付けます。
            例："utf-8" / "shift-jis" / "932" ...等...
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.PDF417_SizeKind">
            <summary>
            データ列数・行数決定方法
            <c>AUTO</c> 自動サイズ(アスペクト比より決定)
            <c>COLUMNS</c> 指定列数に従う
            <c>ROWS</c> 指定行数に従う
            <c>COLUMNS_AND_LOWS</c> 指定列数・行数両方に従う(長方形の最小値)
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.PDF417_CodeRows">
            <summary>
            出力行数指定
            <c>3～90</c>
            SizeKindが出力行数指定の場合＝(自動サイズでない・列数指定でない場合)有効
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.PDF417_CodeColumns">
            <summary>
            出力データカラム数指定
            <c>1～30</c>
            SizeKindが出力列数指定の場合＝(自動サイズでない・行数指定でない場合)有効
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.PDF417_ErrorLevel">
            <summary>
            エラー訂正レベル
            <c>0～8</c>
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.PDF417_UseAutoErrorLevel">
            <summary>
            自動でエラー訂正レベルを決定(する・しない)
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.PDF417_AspectRatio">
            <summary>
            縦横アクセプト比
            </summary>
        </member>
        <member name="P:Pao.Reports.IBarcode.DataMatrix_CodeSize">
            <summary>
            シンボル コード サイズ
            </summary>
        </member>
        <member name="T:Pao.Reports.ZBarcode">
            <summary>
            バーコードオブジェクトクラス
            </summary>
        </member>
        <member name="M:Pao.Reports.ZBarcode.#ctor(Pao.Reports.PmDefBarcode,Pao.Reports.ZLineAttr,Pao.Reports.ZFontAttr)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.Kind">
            <summary>
            バーコードの種類
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.Code">
            <summary>
            コード
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.Soeji">
            <summary>
            添え字を表示するかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.Kintou">
            <summary>
            添え字を均等割付するかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.DispStartStop">
            <summary>
            スタート・ストップコードを表示するかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.CodeSetABC">
            <summary>
            CODE128のコードセット (自動=0, A=1, B=2, C=3)
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.KuroBar">
            <summary>
            ドット単位で黒バーの幅を調整
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.ShiroBar">
            <summary>
            ドット単位で白バーの幅を調整
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.IsWriteDirect">
            <summary>
            直接描画するかどうか
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.Point">
            <summary>
            郵便カスタマバーコードのポイント
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.QrVersion">
            <summary>
            QRコードのバージョン(1～40)
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.QrErrCorrect">
            <summary>
            QRコードのエラー訂正レベル(L/M/Q/H)
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.StringEncoding">
            <summary>
            全角文字コード(二次元バーコード)
            Encoding.GetEncoding()の引数は受け付けます。
            例："utf-8" / "shift-jis" / "932" ...等...
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.PDF417_SizeKind">
            <summary>
            データ列数・行数決定方法
            <c>AUTO</c> 自動サイズ(アスペクト比より決定)
            <c>COLUMNS</c> 指定列数に従う
            <c>ROWS</c> 指定行数に従う
            <c>COLUMNS_AND_LOWS</c> 指定列数・行数両方に従う(長方形の最小値)
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.PDF417_CodeRows">
            <summary>
            出力行数指定
            <c>3～90</c>
            SizeKindが出力行数指定の場合＝(自動サイズでない・列数指定でない場合)有効
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.PDF417_CodeColumns">
            <summary>
            出力データカラム数指定
            <c>1～30</c>
            SizeKindが出力列数指定の場合＝(自動サイズでない・行数指定でない場合)有効
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.PDF417_ErrorLevel">
            <summary>
            エラー訂正レベル
            <c>0～8</c>
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.PDF417_UseAutoErrorLevel">
            <summary>
            自動でエラー訂正レベルを決定(する・しない)
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.PDF417_AspectRatio">
            <summary>
            縦横アクセプト比
            </summary>
        </member>
        <member name="P:Pao.Reports.ZBarcode.DataMatrix_CodeSize">
            <summary>
            シンボル コード サイズ
            </summary>
        </member>
        <member name="T:Pao.Reports.ICornerType">
            <summary>
            四角形の角の状態
            </summary>
        </member>
        <member name="P:Pao.Reports.ICornerType.TopLeft">
            <summary>
            左上の角の状態
            </summary>
        </member>
        <member name="P:Pao.Reports.ICornerType.TopRight">
            <summary>
            右上の角の状態
            </summary>
        </member>
        <member name="P:Pao.Reports.ICornerType.BottomLeft">
            <summary>
            左下の角の状態
            </summary>
        </member>
        <member name="P:Pao.Reports.ICornerType.BottomRight">
            <summary>
            右下の角の状態
            </summary>
        </member>
        <member name="T:Pao.Reports.ZCornerType">
            <summary>
            四角形の角の状態
            </summary>
        </member>
        <member name="M:Pao.Reports.ZCornerType.#ctor(Pao.Reports.PmDefSquare)">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZCornerType.TopLeft">
            <summary>
            左上の角の状態
            </summary>
        </member>
        <member name="P:Pao.Reports.ZCornerType.TopRight">
            <summary>
            右上の角の状態
            </summary>
        </member>
        <member name="P:Pao.Reports.ZCornerType.BottomLeft">
            <summary>
            左下の角の状態
            </summary>
        </member>
        <member name="P:Pao.Reports.ZCornerType.BottomRight">
            <summary>
            右下の角の状態
            </summary>
        </member>
        <member name="T:Pao.Reports.IPreviewWindow">
            <summary>
            プレビュー画面インタフェース
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_TitleText">
            <summary>
            プレビュー画面タイトル
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_Icon">
            <summary>
            プレビュー画面アイコン
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_Top">
            <summary>
            プレビュー画面上位置(Y座標)
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_Left">
            <summary>
            プレビュー画面左位置(X座標)
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_Width">
            <summary>
            プレビュー画面幅
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_Height">
            <summary>
            プレビュー画面高さ
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_Maximum">
            <summary>
            プレビューウィンドウの最大化表示
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_SavePdfPath">
            <summary>
            PDF保存先
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_DeviceName">
            <summary>
            プレビューするスクリーンのデバイス名
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_SaveXmlPath">
            <summary>
            印刷データ保存先
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_VisibleOpenButton">
            <summary>
            プレビュー画面 開くボタン表示
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_VisibleSaveButton">
            <summary>
            プレビュー画面 保存ボタン表示
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_VisiblePrintButton">
            <summary>
            プレビュー画面 印刷ボタン表示
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_VisibleMenu">
            <summary>
            プレビュー画面 メニュー表示
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_VersionWindow">
            <summary>
            バージョンウィンドウ
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_Zoom">
            <summary>
            プレビュー表示倍率
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_SmallToolbarIcon">
            <summary>
            プレビュー画面のツールバーに小さいアイコンを表示する場合、true を指定。
            既定値： false (大きいアイコン)
            </summary>
        </member>
        <member name="P:Pao.Reports.IPreviewWindow.z_DispToolbarText">
            <summary>
            プレビュー画面のツールバーに、テキストを表示する場合、true。
            アイコンのみ出力して、テキストを表示しない場合、false。
            既定値： true (テキストを表示)
            </summary>
        </member>
        <member name="T:Pao.Reports.ZPreviewWindow">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_TitleText">
            <summary>
            プレビュー画面タイトル
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_Icon">
            <summary>
            プレビュー画面アイコン
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_Top">
            <summary>
            プレビュー画面上位置(Y座標)
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_Left">
            <summary>
            プレビュー画面左位置(X座標)
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_Width">
            <summary>
            プレビュー画面幅
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_Height">
            <summary>
            プレビュー画面高さ
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_Maximum">
            <summary>
            プレビューウィンドウの最大化
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_DeviceName">
            <summary>
            プレビューするスクリーンのデバイス名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_SavePdfPath">
            <summary>
            PDF保存先
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_SaveXmlPath">
            <summary>
            印刷データ保存先
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_VisibleOpenButton">
            <summary>
            プレビュー画面 開くボタン表示
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_VisibleSaveButton">
            <summary>
            プレビュー画面 保存ボタン表示
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_VisiblePrintButton">
            <summary>
            プレビュー画面 印刷ボタン表示
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_VisibleMenu">
            <summary>
            プレビュー画面 メニュー表示
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_Zoom">
            <summary>
            プレビュー表示倍率
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_SmallToolbarIcon">
            <summary>
            プレビュー画面のツールバーに小さいアイコンを表示する場合、true を指定。
            既定値： false (大きいアイコン)
            </summary>
        </member>
        <member name="P:Pao.Reports.ZPreviewWindow.z_DispToolbarText">
            <summary>
            プレビュー画面のツールバーに、テキストを表示する場合、true。
            アイコンのみ出力して、テキストを表示しない場合、false。
            既定値： true (テキストを表示)
            </summary>
        </member>
        <member name="T:Pao.Reports.IVersionWindow">
            <summary>
            プレビュー画面インタフェース
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.FormVersion">
            <summary>
            バージョンフォーム
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductImage">
            <summary>
            製品画像
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductName">
            <summary>
            製品名
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductVersion">
            <summary>
            製品バージョン
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.CopyRight">
            <summary>
            著作権
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.CompanyName">
            <summary>
            会社名
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductImage_Top">
            <summary>
            Top座標 - 製品画像
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductName_Top">
            <summary>
            Top座標 - 製品名
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductVersion_Top">
            <summary>
            Top座標 - 製品バージョン
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.CopyRight_Top">
            <summary>
            Top座標 - 著作権
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.CompanyName_Top">
            <summary>
            Top座標 - 会社名
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.Url_Top">
            <summary>
            Top座標 - URL
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductImage_Left">
            <summary>
            Left座標 - 製品画像
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductName_Left">
            <summary>
            Left座標 - 製品名
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductVersion_Left">
            <summary>
            Left座標 - 製品バージョン
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.CopyRight_Left">
            <summary>
            Left座標 - 著作権
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.CompanyName_Left">
            <summary>
            Left座標 - 会社名
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.Url_Left">
            <summary>
            Left座標 - URL
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductImage_Size">
            <summary>
            製品画像サイズ
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductName_Font">
            <summary>
            製品名 フォント
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductVersion_Font">
            <summary>
            製品バージョン フォント
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.CopyRight_Font">
            <summary>
            著作権 フォント
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.Url_Font">
            <summary>
            URL フォント
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductName_ForeColor">
            <summary>
            製品名 文字色
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.ProductVersion_ForeColor">
            <summary>
            製品バージョン 文字色
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.CopyRight_ForeColor">
            <summary>
            著作権 文字色
            </summary>
        </member>
        <member name="P:Pao.Reports.IVersionWindow.Url_ForeColor">
            <summary>
            URL 文字色
            </summary>
        </member>
        <member name="T:Pao.Reports.ZVersionWindow">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.FormVersion">
            <summary>
            バージョンフォーム
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductImage">
            <summary>
            製品画像
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductName">
            <summary>
            製品名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductVersion">
            <summary>
            製品バージョン
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.CopyRight">
            <summary>
            著作権
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.CompanyName">
            <summary>
            会社名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.Url">
            <summary>
            URL
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductImage_Top">
            <summary>
            Top座標 - 製品画像
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductName_Top">
            <summary>
            Top座標 - 製品名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductVersion_Top">
            <summary>
            Top座標 - 製品バージョン
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.CopyRight_Top">
            <summary>
            Top座標 - 著作権
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.CompanyName_Top">
            <summary>
            Top座標 - 会社名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.Url_Top">
            <summary>
            Top座標 - URL
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductImage_Left">
            <summary>
            Left座標 - 製品画像
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductName_Left">
            <summary>
            Left座標 - 製品名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductVersion_Left">
            <summary>
            Left座標 - 製品バージョン
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.CopyRight_Left">
            <summary>
            Left座標 - 著作権
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.CompanyName_Left">
            <summary>
            Left座標 - 会社名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.Url_Left">
            <summary>
            Left座標 - URL
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductImage_Size">
            <summary>
            Size - 製品画像
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductName_Font">
            <summary>
            Font - 製品名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductVersion_Font">
            <summary>
            Font - 製品バージョン
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.CopyRight_Font">
            <summary>
            Font - 著作権
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.CompanyName_Font">
            <summary>
            Font - 会社名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.Url_Font">
            <summary>
            Font - URL
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductName_ForeColor">
            <summary>
            文字色 - 製品名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.ProductVersion_ForeColor">
            <summary>
            文字色 - 製品バージョン
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.CopyRight_ForeColor">
            <summary>
            文字色 - 著作権
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.CompanyName_ForeColor">
            <summary>
            文字色 - 会社名
            </summary>
        </member>
        <member name="P:Pao.Reports.ZVersionWindow.Url_ForeColor">
            <summary>
            文字色 - URL
            </summary>
        </member>
        <member name="T:Pao.Reports.ReportPreviewWpf">
            <summary>
            ReportPreviewWpf
            </summary>
        </member>
        <member name="M:Pao.Reports.ReportPreviewWpf.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="F:Pao.Util.clsDBType.Sys">
            <summary>
            System Database
            </summary>
        </member>
        <member name="F:Pao.Util.clsDBType.App">
            <summary>
            Application Database
            </summary>
        </member>
        <member name="F:Pao.Util.clsDBType.Temp">
            <summary>
            Temp Database
            </summary>
        </member>
        <member name="F:Pao.Util.clsDBType.Com">
            <summary>
            共通データベース
            </summary>
        </member>
        <member name="F:Pao.Util.clsDBType.Trn">
            <summary>
            非同期更新用データベース
            </summary>
        </member>
        <member name="F:Pao.Util.clsNumericEditChar.N1">
            <summary>
            0
            </summary>
        </member>
        <member name="F:Pao.Util.clsNumericEditChar.N2">
            <summary>
            00
            </summary>
        </member>
        <member name="F:Pao.Util.clsNumericEditChar.N3">
            <summary>
            000
            </summary>
        </member>
        <member name="F:Pao.Util.clsNumericEditChar.N4">
            <summary>
            0000
            </summary>
        </member>
        <member name="F:Pao.Util.clsNumericEditChar.N5">
            <summary>
            00000
            </summary>
        </member>
        <member name="F:Pao.Util.clsNumericEditChar.N6">
            <summary>
            000000
            </summary>
        </member>
        <member name="F:Pao.Util.clsNumericEditChar.K0">
            <summary>
            #,##0
            </summary>
        </member>
        <member name="F:Pao.Util.clsNumericEditChar.K2">
            <summary>
            #,##0.00
            </summary>
        </member>
        <member name="F:Pao.Util.clsNumericEditChar.K3">
            <summary>
            #,##0.000
            </summary>
        </member>
        <member name="M:Pao.Util.clsCrypt.xGetPublicKey">
            <summary>
            公開鍵取得処理
            </summary>
            <returns>公開鍵</returns>
        </member>
        <member name="M:Pao.Util.clsCrypt.xEncrypt(System.String,System.String)">
            <summary>
            公開鍵による文字列暗号化処理
            </summary>
            <param name="Text">暗号化する文字列</param>
            <param name="PublicKey">暗号化に使用する公開鍵(XML形式)</param>
            <returns>暗号化された文字列</returns>
        </member>
        <member name="M:Pao.Util.clsCrypt.xDecrypt(System.String)">
            <summary>
            秘密鍵による文字列復号化処理
            </summary>
            <param name="Text">暗号化された文字列</param>
            <returns>復号化された文字列</returns>
        </member>
        <member name="T:Pao.Util.clsLicenseHandler">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.#ctor(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="LicenseID"></param>
            <param name="flg"></param>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="LicenseID"></param>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.xライセンス判定_ライセンスファイル有無">
            <summary>
            ライセンスファイルの有無を返します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.xライセンス判定_使用端末判定">
            <summary>
            使用端末の妥当性を返します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.xライセンス判定_登録状態">
            <summary>
            ライセンス登録状態を返します。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.xライセンス判定_リース期間判定">
            <summary>
            ライセンスが期間的に有効か否かを返します。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Pao.Util.clsLicenseHandler.xライセンス登録状態">
            <summary>
            ライセンス登録状態を取得・設定します。
            </summary>
        </member>
        <member name="P:Pao.Util.clsLicenseHandler.xライセンスID">
            <summary>
            ライセンスIDを取得・設定します。
            </summary>
        </member>
        <member name="P:Pao.Util.clsLicenseHandler.xライセンス番号">
            <summary>
            ライセンス番号を取得・設定します。
            </summary>
        </member>
        <member name="P:Pao.Util.clsLicenseHandler.xリース開始年月日">
            <summary>
            リース開始年月日を取得・設定します。
            </summary>
        </member>
        <member name="P:Pao.Util.clsLicenseHandler.xリース終了年月日">
            <summary>
            リース終了年月日を取得・設定します。
            </summary>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.xRegist(System.String)">
            <summary>
            ライセンス番号を取得
            </summary>
            <param name="ライセンス番号"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.xRegist(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="ライセンス番号"></param>
            <param name="有効月数"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.xGetItem(System.String)">
            <summary>
            
            </summary>
            <param name="Item"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.xSetItem(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="Item"></param>
            <param name="Value"></param>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.xSave">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.xSave(System.String)">
            <summary>
            
            </summary>
            <param name="SaveFileName"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.Util.clsLicenseHandler.xCreate">
            <summary>
            
            </summary>
        </member>
        <member name="T:Pao.Util.clsProductInfoBase">
            <summary>
            プロダクト管理クラス(Base)。直接使用することはできません。
            </summary>
        </member>
        <member name="T:Pao.Util.clsSystemInfo">
            <summary>
            Staticなシステム情報です。xCreateを行ってから使用してください。
            </summary>
        </member>
        <member name="M:Pao.Util.clsSystemInfo.xCreate(System.String,Pao.Util.clsProductInfoBase)">
            <summary>
            システム情報を初期化します。
            </summary>
            <param name="法人ID">法人ID</param>
            <param name="ProductInfo">使用するProductInfo</param>
        </member>
        <member name="T:Pao.BarCode.CheckDigit">
            <summary>
            各種チェックデジットの算出を行うライブラリーです。
            </summary>
        </member>
        <member name="M:Pao.BarCode.CheckDigit.#ctor">
            <summary>
            コンストラクタ
            </summary>
        </member>
        <member name="M:Pao.BarCode.CheckDigit.Modulus10W3_UPC_E(System.String)">
            <summary>
            UPC-E用 モジュラス10 ウエイト3 のチェックデジットの計算
            </summary>
            <param name="code">チェックデジットを除いた文字列</param>
            <returns>チェックデジット</returns>
        </member>
        <member name="M:Pao.BarCode.CheckDigit.Modulus10W3(System.String)">
            <summary>
            モジュラス10 ウエイト3 のチェックデジットの計算
            </summary>
            <param name="code">チェックデジットを除いた文字列</param>
            <returns>チェックデジット</returns>
        </member>
        <member name="M:Pao.BarCode.CheckDigit.Modulus103W1(System.String,Pao.BarCode.CodeSet128)">
            <summary>
            モジュラス103 ウエイト1 のチェックデジットの計算
            </summary>
            <param name="code">チェックデジットを除いた文字列</param>
            <param name="codeABC">コードセット(AUTO/A/B/C)</param>
            <returns>チェックデジット</returns>
        </member>
        <member name="M:Pao.BarCode.CheckDigit.Modulus103W1_EAN128(System.String,Pao.BarCode.CodeSet128)">
            <summary>
            モジュラス103 ウエイト1(UCC/EAN128用) のチェックデジットの計算
            </summary>
            <param name="code">チェックデジットを除いた文字列</param>
            <param name="codeABC">コードセット(AUTO/A/B/C)</param>
            <returns>チェックデジット</returns>
        </member>
        <member name="M:Pao.BarCode.CheckDigit.GetModulus43(System.String)">
            <summary>  
            モジュラス43　計算  
            CODE39  
            </summary>  
        </member>
        <member name="M:Pao.BarCode.CheckDigit.GetModulus10Weight3(System.String)">
            <summary>  
            モジュラス10/ウェイト3　計算  
            JAN8 JAN13 ISBN13 ITF NW-7  
            </summary>  
        </member>
        <member name="M:Pao.BarCode.CheckDigit.GetModulus47(System.String,System.Int32)">
            <summary>  
            モジュラス47　計算  
            CODE93  
            </summary>  
        </member>
        <member name="T:Pao.BarCode.CodeSet128">
            <summary>
            CODE128のコードセット(AUTO, A, B, C)
            </summary>
        </member>
        <member name="F:Pao.BarCode.CodeSet128.AUTO">
            <summary>
            AUTO
            </summary>
        </member>
        <member name="F:Pao.BarCode.CodeSet128.CODE_A">
            <summary>
            CODE-A
            </summary>
        </member>
        <member name="F:Pao.BarCode.CodeSet128.CODE_B">
            <summary>
            CODE-A
            </summary>
        </member>
        <member name="F:Pao.BarCode.CodeSet128.CODE_C">
            <summary>
            CODE-A
            </summary>
        </member>
        <member name="T:Pao.BarCode.Common">
            <summary>
            Common の概要の説明です。
            </summary>
        </member>
        <member name="T:Pao.BarCode.DataMatrix">
            <summary>
            DataMatrixを生成するのに用いられるクラスです。
            </summary>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.#ctor(System.Drawing.Graphics)">
            <summary>
            コンストラクタ　DataMatrix
            </summary>
            <param name="g">バーコードの描画を行うGraphicsを指定します。</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.#ctor(System.String,System.Drawing.Imaging.ImageFormat)">
            <summary>
            コンストラクタ
            ミリやインチ等の単位で幅・高さを指定し、かつ、dpiを指定して
            バーコードをファイルに書き込むときに使用する
            </summary>
            <param name="imgFilePath">画像ファイルパス</param>
            <param name="imgFormat">画像フォーマット</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.#ctor(System.Drawing.Imaging.ImageFormat)">
            <summary>
            コンストラクタ
            指定した画像形式に従い
            メモリストリーム・Base64エンコードデータとして
            バーコード画像を作成
            </summary>
            <param name="imgFormat">画像フォーマット</param>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.BackColor">
            <summary>
            画像データ保存時のみ有効
            直接描画する場合、背景色は透明になります。
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.ForeColor">
            <summary>
            バーの色とテキストの色 (ある場合)
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.KuroBarChousei">
            <summary>
            [非推奨] このプロパティは 'BlackBarAdjusterByDot' に置き換えられました。
            下位互換性のために残されています。
            ドットベースの精密調整には 'BlackBarAdjusterByDot' の使用を検討してください。
            このプロパティの元の機能:
            描画する黒バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。このプロパティに-1 を指定すると、
            バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            この機能は DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効です。
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.BlackBarAdjusterByDot">
            <summary>
            描画する黒バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。
            例えば、このプロパティに-1 を指定すると、バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            プリンタにより、調整が必要な場合にこの機能を使用してください。
            ※この機能は。DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効ですのでご注意ください。
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.StringEncoding">
            <summary>
            全角文字コード
            Encoding.GetEncoding()の引数は受け付けます。
            規定値："utf-8"
            例："shift-jis" / "932" ...等...
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.EncodeScheme">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.CodeSize">
            <summary>
            シンボル コード サイズ
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.RotateAngle">
            <summary>
            回転角度を数値で指定(左下を軸に右回転して描画を行う)
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.JustWidthInDrawDirect">
            <summary>
            DrawDirectメソッドで指定した幅にぴったり合わせるために、小数ピクセル値を使用するかどうかを示す値を取得または設定します。
            trueの場合：
            小数値ピクセルの計算を許可し、指定した幅ぴったりにバーコードを描画します。
            falseの場合：
            除算後の整数ピクセル値のみを使用し、これによりバーコードの精度は向上しますが、指定した幅に完全には合わない場合があります。
            その結果、指定した幅以内で最大のサイズのバーコードが描画されます。
            既定値はfalseです。
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.DrawScale">
            <summary>
            表示倍率を指定(Reports.netで使用)
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.ImgDrawUnit">
            <summary>
            画像描画単位 (画像ファイル出力用)
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.ImageStream">
            <summary>
            メモリストリームとしてのバーコードイメージデータを取得します。
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.ImageBase64">
            <summary>
            Base64エンコードされたバーコードイメージデータを取得します。
            </summary>
        </member>
        <member name="P:Pao.BarCode.DataMatrix.ImgDpi">
            <summary>
            画像DPI (画像ファイル出力用)
            </summary>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.Draw(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            バーコードの描画を行う
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.Draw(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            バーコードを描画する
            コンストラクタでImageFormat指定時、画像ファイルに描画する。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
            <param name="imgFilePath">画像ファイルパス</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.Draw(System.Byte[],System.Single,System.Single,System.Single,System.Single)">
            <summary>
            バーコードの描画を行う
            </summary>
            <param name="data">描画を行うバーコードのコードをバイト配列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.Draw(System.Byte[],System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            バーコードを描画する
            コンストラクタでImageFormat指定時、画像ファイルに描画する。
            </summary>
            <param name="data">描画を行うバーコードのコードをバイト配列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
            <param name="imgFilePath">画像ファイルパス</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.DrawDelicate(System.String,System.Single,System.Single,System.Single)">
            <summary>
            バーコードの描画を行う(バイナリ格納)
            </summary>
            <param name="code">バーコードに格納するデータを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="minLinePitch">バーコードを描画する間隔の最小幅の値を指定</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.DrawDelicate(System.String,System.Single,System.Single,System.Single,System.String)">
            <summary>
            バーコードの描画を行います。Draw メソッドとの違いは、バーコード全体の幅を指定するのではなく、バーを描画する一番細い線の幅を指定します。
            コンストラクタでImageFormat指定時、画像ファイルに描画する。
            (バイナリ格納)
            </summary>
            <param name="code">バーコードに格納するデータを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="minLinePitch">バーコードを描画するバーの最小ピッチの値を指定</param>
            <param name="imgFilePath">画像ファイルパス</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.DrawDelicate(System.Byte[],System.Single,System.Single,System.Single)">
            <summary>
            バーコードの描画を行う
            </summary>
            <param name="data">描画を行うバーコードのコードをバイト配列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="minLinePitch">バーコードを描画する間隔の最小幅の値を指定</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.DrawDelicate(System.Byte[],System.Single,System.Single,System.Single,System.String)">
            <summary>
            バーコードの描画を行います。Draw メソッドとの違いは、バーコード全体の幅を指定するのではなく、バーを描画する一番細い線の幅を指定します。
            コンストラクタでImageFormat指定時、画像ファイルに描画する。
            </summary>
            <param name="data">描画を行うバーコードのコードをバイト配列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="minLinePitch">バーコードを描画するバーの最小ピッチの値を指定</param>
            <param name="imgFilePath">画像ファイルパス</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.DrawDirect(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            バーコードを指定した幅以内にピクセル単位でダイレクトに描画します。
            幅が固定でありませんが、通常のDrawメソッドより精度・描画速度がよいです。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.DrawDirect(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            バーコードを指定した幅以内にピクセル単位でダイレクトに描画します。
            幅が固定でありませんが、通常のDrawメソッドより精度・描画速度がよいです。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
            <param name="imgFilePath">画像ファイルパス</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.DrawDirect(System.Byte[],System.Single,System.Single,System.Single,System.Single)">
            <summary>
            バーコードを指定した幅以内にピクセル単位でダイレクトに描画します。
            幅が固定でありませんが、通常のDrawメソッドより精度・描画速度がよいです。
            (バイナリ格納)
            </summary>
            <param name="data">バーコードに格納するデータをバイト配列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.DrawDirect(System.Byte[],System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            バーコードを指定した幅以内にピクセル単位でダイレクトに描画します。
            幅が固定でありませんが、通常のDrawメソッドより精度・描画速度がよいです。
            (バイナリ格納)
            </summary>
            <param name="data">バーコードに格納するデータをバイト配列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
            <param name="imgFilePath">画像ファイルパス</param>
        </member>
        <member name="M:Pao.BarCode.DataMatrix.WriteSVG(System.String,System.Single,System.Single,System.Single,System.String)">
            <summary>
            SVGファイルへのバーコードの出力を行います。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="minLinePitch">バーコードを描画する間隔の最小幅の値を指定</param>
            <param name="filePath">SVGファイルのファイル名をフルパスで指定</param>
        </member>
        <member name="T:Pao.BarCode.DxCodeSize">
            <summary>
            シンボルコードサイズ
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSzRectAuto">
            <summary>
            Rect Auto (-3)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSzAuto">
            <summary>
            Auto (-2) : 既定値
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSzShapeAuto">
            <summary>
            Shape Auto (-1)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz10x10">
            <summary>
            10 x 10 (0)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz12x12">
            <summary>
            12 x 12 (1)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz14x14">
            <summary>
            14 x 14 (2)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz16x16">
            <summary>
            16 x 16 (3)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz18x18">
            <summary>
            18 x 18 (4)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz20x20">
            <summary>
            20 x 20 (5)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz22x22">
            <summary>
            22 x 22 (6)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz24x24">
            <summary>
            24 x 24 (7)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz26x26">
            <summary>
            26 x 26 (8)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz32x32">
            <summary>
            32 x 32 (9)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz36x36">
            <summary>
            36 x 36 (10)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz40x40">
            <summary>
            40 x 40 (11)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz44x44">
            <summary>
            44 x 44 (12)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz48x48">
            <summary>
            48 x 48 (13)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz52x52">
            <summary>
            52 x 52 (14)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz64x64">
            <summary>
            64 x 64 (15)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz72x72">
            <summary>
            72 x 72 (16)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz80x80">
            <summary>
            80 x 80 (17)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz88x88">
            <summary>
            88 x 88 (18)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz96x96">
            <summary>
            96 x 96 (19)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz104x104">
            <summary>
            104 x 104 (20)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz120x120">
            <summary>
            120 x 120 (21)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz132x132">
            <summary>
            132 x 132 (22)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz144x144">
            <summary>
            144 x 144 (23)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz8x18">
            <summary>
            8 x 18 (24)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz8x32">
            <summary>
            8 x 32 (25)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz12x26">
            <summary>
            12 x 26 (26)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz12x36">
            <summary>
            12 x 36 (27)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz16x36">
            <summary>
            16 x 36 (28)
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxCodeSize.DxSz16x48">
            <summary>
            16 x 48 (29)
            </summary>
        </member>
        <member name="T:Pao.BarCode.DxScheme">
            <summary>
            Encode Scheme
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxScheme.DxSchemeAutoFast">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxScheme.DxSchemeAutoBest">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxScheme.DxSchemeAscii">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxScheme.DxSchemeC40">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxScheme.DxSchemeText">
             <summary>
            
             </summary>
        </member>
        <member name="F:Pao.BarCode.DxScheme.DxSchemeX12">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxScheme.DxSchemeEdifact">
             <summary>
            
             </summary>
        </member>
        <member name="F:Pao.BarCode.DxScheme.DxSchemeBase256">
            <summary>
            
            </summary>
        </member>
        <member name="F:Pao.BarCode.DxScheme.DxSchemeAsciiGS1">
            <summary>
            
            </summary>
        </member>
        <member name="T:Pao.BarCode.DxQuadruplet">
            @struct DxQuadruplet
            @brief DxQuadruplet
        </member>
        <member name="M:Pao.BarCode.DxMatrix3.#ctor(Pao.BarCode.DxMatrix3)">
            <summary>
            copy constructor
            </summary>
            <param name="src">the matrix to copy</param>
        </member>
        <member name="M:Pao.BarCode.DxMatrix3.Identity">
            <summary>
            creates a 3x3 identitiy matrix:<para />
            1 0 0<para />
            0 1 0<para />
            0 0 1
            </summary>
        </member>
        <member name="M:Pao.BarCode.DxMatrix3.Translate(System.Double,System.Double)">
            <summary>
            generates a 3x3 translate transformation matrix
            1 0 0<para />
            0 1 0<para />
            tx ty 1
            </summary>
            <param name="tx"></param>
            <param name="ty"></param>
        </member>
        <member name="M:Pao.BarCode.DxMatrix3.Rotate(System.Double)">
            <summary>
            generates a 3x3 rotate transformation matrix
            cos(angle) sin(angle) 0<para />
            -sin(angle) cos(angle) 0<para />
            0 0 1
            </summary>
            <param name="angle"></param>
        </member>
        <member name="M:Pao.BarCode.DxMatrix3.Scale(System.Double,System.Double)">
            <summary>
            generates a 3x3 scale transformation matrix
            sx 0 0<para />
            0 sy 0<para />
            0 0 1
            </summary>
            <param name="sx"></param>
            <param name="sy"></param>
            <returns></returns>
        </member>
        <member name="M:Pao.BarCode.DxMatrix3.Shear(System.Double,System.Double)">
            <summary>
            generates a 3x3 shear transformation matrix
            0 shx 0<para />
            shy 0 0<para />
            0 0 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.BarCode.DxMatrix3.LineSkewTop(System.Double,System.Double,System.Double)">
            <summary>
            generates a 3x3 top line skew transformation matrix
            b1/b0 0 (b1-b0)/(sz * b0)<para />
            0 sz/b0 0<para />
            0 0 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.BarCode.DxMatrix3.LineSkewTopInv(System.Double,System.Double,System.Double)">
            <summary>
            generates a 3x3 top line skew transformation matrix (inverse)
            b0/b1 0 (b0-b1)/(sz * b1)<para />
            0 b0/sz 0<para />
            0 0 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.BarCode.DxMatrix3.LineSkewSide(System.Double,System.Double,System.Double)">
            <summary>
            generates a 3x3 side line skew transformation matrix (inverse)
            sz/b0 0 0<para />
            0 b1/b0 (b1-b0)/(sz*b0)<para />
            0 0 1
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pao.BarCode.DxMatrix3.LineSkewSideInv(System.Double,System.Double,System.Double)">
            <summary>
            generates a 3x3 side line skew transformation matrix (inverse)
            b0/sz 0 0<para />
            0 b0/b1 (b0 - b1) / (sz * b1)<para />
            0 0 1
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pao.BarCode.errCode39BadChar">
            <summary>
            Error の概要の説明です。
            </summary>
        </member>
        <member name="T:Pao.BarCode.errCode128BadChar">
            <summary>
            Error の概要の説明です。
            </summary>
        </member>
        <member name="T:Pao.BarCode.errCode93BadChar">
            <summary>
            Error の概要の説明です。
            </summary>
        </member>
        <member name="T:Pao.BarCode.GS1_DataBar_14">
            <summary>
            GS1 Databar 標準型 (GS1 RSS 14)を生成するのに用いられるクラスです。
            </summary>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_14.#ctor(Pao.Reports.Linux.Graphics)">
            <summary>
            コンストラクタ　GS1-DATABAR RSS 14
            </summary>
            <param name="g">バーコードの描画を行うGraphicsを指定します。</param>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.BackColor">
            <summary>
            画像データ保存時のみ有効
            直接描画する場合、背景色は透明になります。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.ForeColor">
            <summary>
            バーの色とテキストの色 (ある場合)
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.TextWrite">
            <summary>
            バーコードの下のテキストを出力する・しない
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.TextKintou">
            <summary>
            描画位置設定(バーコード全体の幅に均等割付)プロパティ
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.TextFont">
            <summary>
            添字のフォントプロパティ
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.RotateAngle">
            <summary>
            回転角度を数値で指定(左下を軸に右回転して描画を行う)
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.JustWidthInDrawDirect">
            <summary>
            DrawDirectメソッドで指定した幅にぴったり合わせるために、小数ピクセル値を使用するかどうかを示す値を取得または設定します。
            trueの場合：
            小数値ピクセルの計算を許可し、指定した幅ぴったりにバーコードを描画します。
            falseの場合：
            除算後の整数ピクセル値のみを使用し、これによりバーコードの精度は向上しますが、指定した幅に完全には合わない場合があります。
            その結果、指定した幅以内で最大のサイズのバーコードが描画されます。
            既定値はfalseです。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.DrawScale">
            <summary>
            表示倍率を指定(Reports.netで使用)
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.DispStartStopCode">
            <summary>
            スタート／ストップコードの描画プロパティ
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.KuroBarChousei">
            <summary>
            [非推奨] このプロパティは 'BlackBarAdjusterByDot' に置き換えられました。
            下位互換性のために残されています。
            ドットベースの精密調整には 'BlackBarAdjusterByDot' の使用を検討してください。
            このプロパティの元の機能:
            描画する黒バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。このプロパティに-1 を指定すると、
            バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            この機能は DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効です。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.BlackBarAdjusterByDot">
            <summary>
            描画する黒バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。
            例えば、このプロパティに-1 を指定すると、バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            プリンタにより、調整が必要な場合にこの機能を使用してください。
            ※この機能は。DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効ですのでご注意ください。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.ShiroBarChousei">
            <summary>
            [非推奨] このプロパティは 'WhiteBarAdjusterByDot' に置き換えられました。
            下位互換性のために残されています。
            ドットベースの精密調整には 'WhiteBarAdjusterByDot' の使用を検討してください。
            このプロパティの元の機能:
            描画する白バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。このプロパティに-1 を指定すると、
            バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            この機能は DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効です。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.WhiteBarAdjusterByDot">
            <summary>
            描画する黒バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。
            例えば、このプロパティに-1 を指定すると、バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            プリンタにより、調整が必要な場合にこの機能を使用してください。
            ※この機能は。DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効ですのでご注意ください。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.ImgDrawUnit">
            <summary>
            画像描画単位 (画像ファイル出力用)
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.ImageStream">
            <summary>
            メモリストリームとしてのバーコードイメージデータを取得します。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.ImageBase64">
            <summary>
            Base64エンコードされたバーコードイメージデータを取得します。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_14.ImgDpi">
            <summary>
            画像DPI (GDI+は画像ファイル出力用)
            </summary>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_14.Draw(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            バーコードの描画を行う
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_14.Draw(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            バーコードを描画する
            コンストラクタでImageFormat指定時、画像ファイルに描画する。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
            <param name="imgFilePath">画像ファイルパス</param>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_14.DrawDelicate(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            バーコードの描画を行います。Draw メソッドとの違いは、バーコード全体の幅を指定するのではなく、バーを描画する一番細い線の幅を指定します。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="minLineWidth">バーコードを描画するバーの最小幅の値を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_14.DrawDelicate(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            バーコードの描画を行います。Draw メソッドとの違いは、バーコード全体の幅を指定するのではなく、バーを描画する一番細い線の幅を指定します。
            コンストラクタでImageFormat指定時、画像ファイルに描画する。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="minLineWidth">バーコードを描画するバーの最小幅の値を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
            <param name="imgFilePath">画像ファイルパス</param>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_14.DrawDirect(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            バーコードを指定した幅以内にピクセル単位でダイレクトに描画します。
            幅が固定でありませんが、通常のDrawメソッドより精度・描画速度がよいです。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_14.DrawDirect(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            バーコードを指定した幅以内にピクセル単位でダイレクトに描画します。
            幅が固定でありませんが、通常のDrawメソッドより精度・描画速度がよいです。
            ※コンストラクタでImageFormat指定時、画像ファイルに描画する。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
            <param name="imgFilePath">画像ファイルパス</param>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_14.WriteSVG(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            SVGファイルへのバーコードの出力を行います。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
            <param name="filePath">SVGファイルのファイル名をフルパスで指定</param>
        </member>
        <member name="T:Pao.BarCode.GS1_DataBar_14.DatabarType">
            <summary>
            GS1 Databa RSS 14 のタイプ
            </summary>
        </member>
        <member name="F:Pao.BarCode.GS1_DataBar_14.DatabarType.OMNIDIRECTIONAL">
            <summary>
            標準型
            </summary>
        </member>
        <member name="F:Pao.BarCode.GS1_DataBar_14.DatabarType.STACKED">
            <summary>
            二層型
            </summary>
        </member>
        <member name="F:Pao.BarCode.GS1_DataBar_14.DatabarType.STACKED_OMNIDIRECTIONAL">
            <summary>
            標準二層型
            </summary>
        </member>
        <member name="F:Pao.BarCode.GS1_DataBar_14.SymbolType">
            <summary>
            GS1 Databa RSS 14 のタイプ
            </summary>
        </member>
        <member name="T:Pao.BarCode.GS1_DataBar_Expanded">
            <summary>
            GS1 Databar 拡張型 (GS1 RSS Expanded)を生成するのに用いられるクラスです。
            </summary>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_Expanded.#ctor(Pao.Reports.Linux.Graphics)">
            <summary>
            コンストラクタ　GS1-DATABAR Expanded
            </summary>
            <param name="g">バーコードの描画を行うGraphicsを指定します。</param>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.BackColor">
            <summary>
            画像データ保存時のみ有効
            直接描画する場合、背景色は透明になります。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.ForeColor">
            <summary>
            バーの色とテキストの色 (ある場合)
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.TextWrite">
            <summary>
            バーコードの下のテキストを出力する・しない
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.TextKintou">
            <summary>
            描画位置設定(バーコード全体の幅に均等割付)プロパティ
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.TextFont">
            <summary>
            添字のフォントプロパティ
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.RotateAngle">
            <summary>
            回転角度を数値で指定(左下を軸に右回転して描画を行う)
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.JustWidthInDrawDirect">
            <summary>
            DrawDirectメソッドで指定した幅にぴったり合わせるために、小数ピクセル値を使用するかどうかを示す値を取得または設定します。
            trueの場合：
            小数値ピクセルの計算を許可し、指定した幅ぴったりにバーコードを描画します。
            falseの場合：
            除算後の整数ピクセル値のみを使用し、これによりバーコードの精度は向上しますが、指定した幅に完全には合わない場合があります。
            その結果、指定した幅以内で最大のサイズのバーコードが描画されます。
            既定値はfalseです。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.DrawScale">
            <summary>
            表示倍率を指定(Reports.netで使用)
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.DispStartStopCode">
            <summary>
            スタート／ストップコードの描画プロパティ
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.KuroBarChousei">
            <summary>
            [非推奨] このプロパティは 'BlackBarAdjusterByDot' に置き換えられました。
            下位互換性のために残されています。
            ドットベースの精密調整には 'BlackBarAdjusterByDot' の使用を検討してください。
            このプロパティの元の機能:
            描画する黒バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。このプロパティに-1 を指定すると、
            バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            この機能は DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効です。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.BlackBarAdjusterByDot">
            <summary>
            描画する黒バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。
            例えば、このプロパティに-1 を指定すると、バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            プリンタにより、調整が必要な場合にこの機能を使用してください。
            ※この機能は。DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効ですのでご注意ください。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.ShiroBarChousei">
            <summary>
            [非推奨] このプロパティは 'WhiteBarAdjusterByDot' に置き換えられました。
            下位互換性のために残されています。
            ドットベースの精密調整には 'WhiteBarAdjusterByDot' の使用を検討してください。
            このプロパティの元の機能:
            描画する白バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。このプロパティに-1 を指定すると、
            バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            この機能は DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効です。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.WhiteBarAdjusterByDot">
            <summary>
            描画する黒バー幅をドット単位で微細調整できます。
            既定値は、0 ドットです。
            例えば、このプロパティに-1 を指定すると、バーコード内全ての黒バーの幅が1ドットずつ細くなります。
            プリンタにより、調整が必要な場合にこの機能を使用してください。
            ※この機能は。DrawDirect / DrawDelicate メソッドには有効ですが、
            Draw メソッドには無効ですのでご注意ください。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.ImgDrawUnit">
            <summary>
            画像描画単位 (画像ファイル出力用)
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.ImageStream">
            <summary>
            メモリストリームとしてのバーコードイメージデータを取得します。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.ImageBase64">
            <summary>
            Base64エンコードされたバーコードイメージデータを取得します。
            </summary>
        </member>
        <member name="P:Pao.BarCode.GS1_DataBar_Expanded.ImgDpi">
            <summary>
            画像DPI (GDI+は画像ファイル出力用)
            </summary>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_Expanded.Draw(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            バーコードの描画を行う
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_Expanded.Draw(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            バーコードを描画する
            コンストラクタでImageFormat指定時、画像ファイルに描画する。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
            <param name="imgFilePath">画像ファイルパス</param>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_Expanded.DrawDelicate(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            バーコードの描画を行います。Draw メソッドとの違いは、バーコード全体の幅を指定するのではなく、バーを描画する一番細い線の幅を指定します。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="minLineWidth">バーコードを描画するバーの最小幅の値を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_Expanded.DrawDelicate(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            バーコードの描画を行います。Draw メソッドとの違いは、バーコード全体の幅を指定するのではなく、バーを描画する一番細い線の幅を指定します。
            コンストラクタでImageFormat指定時、画像ファイルに描画する。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="minLineWidth">バーコードを描画するバーの最小幅の値を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
            <param name="imgFilePath">画像ファイルパス</param>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_Expanded.DrawDirect(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            バーコードを指定した幅以内にピクセル単位でダイレクトに描画します。
            幅が固定でありませんが、通常のDrawメソッドより精度・描画速度がよいです。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_Expanded.DrawDirect(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            バーコードを指定した幅以内にピクセル単位でダイレクトに描画します。
            幅が固定でありませんが、通常のDrawメソッドより精度・描画速度がよいです。
            ※コンストラクタでImageFormat指定時、画像ファイルに描画する。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
            <param name="imgFilePath">画像ファイルパス</param>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_Expanded.WriteSVG(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            SVGファイルへのバーコードの出力を行います。
            </summary>
            <param name="code">描画を行うバーコードのコードを文字列で指定</param>
            <param name="x">描画位置の始点(左上)のX座標を指定</param>
            <param name="y">描画位置の始点(左上)のY座標を指定</param>
            <param name="width">バーコードの全体の幅を指定</param>
            <param name="height">バーコードのバーの高さを指定</param>
            <param name="filePath">SVGファイルのファイル名をフルパスで指定</param>
        </member>
        <member name="T:Pao.BarCode.GS1_DataBar_Expanded.DatabarType">
            <summary>
            GS1 Databa RSS Expanded のタイプ
            </summary>
        </member>
        <member name="F:Pao.BarCode.GS1_DataBar_Expanded.DatabarType.UNSTACKED">
            <summary>
            標準型
            </summary>
        </member>
        <member name="F:Pao.BarCode.GS1_DataBar_Expanded.DatabarType.STACKED">
            <summary>
            二層型
            </summary>
        </member>
        <member name="F:Pao.BarCode.GS1_DataBar_Expanded.SymbolType">
            <summary>
            GS1 Databa RSS Expanded のタイプ
            </summary>
        </member>
        <member name="M:Pao.BarCode.GS1_DataBar_Expanded.setNoOfColumns(System.Int32)">
            Set the width of a stacked symbol by selecting the number
            of "columns" or symbol segments in each row of data.
            @param columns Number of segments in each row
        </member>
        <member name="T:Pao.BarCode.IBarCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pao.BarCode.IBarCode.TextWrite">
            <summary>
            true if text will be generated along with the barcode
            </summary>
        </member>
        <member name="P:Pao.BarCode.IBarCode.TextKintou">
            <summary>
            drawing position drawing position (to fit a barcode to set width).
            true: Draw barcode within an overall width by equal spacing, false: Draw barcode at a bar meaning a code (default)
            </summary>
        </member>
        <member name="P:Pao.BarCode.IBarCode.TextFont">
            <summary>
            the font used in writing text
            </summary>
        </member>
        <member name="P:Pao.BarCode.IBarCode.RotateAngle">
            <summary>
            barcode angle
            </summary>
        </member>
        <member name="P:Pao.BarCode.IBarCode.KuroBarChousei">
            <summary>
            number of dot for fine adjustment of black bars.(The defined value of dot is 0.)
            </summary>
        </member>
        <member name="P:Pao.BarCode.IBarCode.ShiroBarChousei">
            <summary>
            number of dot for fine adjustment of white bars.(The defined value of dot is 0.)
            </summary>
        </member>
        <member name="P:Pao.BarCode.IBarCode.ImgDrawUnit">
            <summary>
            Image Draw Unit (use draw to image file)
            </summary>
        </member>
        <member name="M:Pao.BarCode.IBarCode.Draw(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draw a barcode
            </summary>
            <param name="code">Set barcode codes by character strings.</param>
            <param name="x">Set x-coordinate of the drawing start point at upper left.</param>
            <param name="y">Set y-coordinate of the drawing start point at upper left.</param>
            <param name="width">Set overall width of the barcode.</param>
            <param name="height">Set height of the barcode.</param>
        </member>
        <member name="M:Pao.BarCode.IBarCode.Draw(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Draw a barcode
            draw barcode to image file, when specifying ImageFormat in constructor.
            </summary>
            <param name="code">Set barcode codes by character strings.</param>
            <param name="x">Set x-coordinate of the drawing start point at upper left.</param>
            <param name="y">Set y-coordinate of the drawing start point at upper left.</param>
            <param name="width">Set overall width of the barcode.</param>
            <param name="height">Set height of the barcode.</param>
            <param name="imageFilePath">image file path</param>
        </member>
        <member name="M:Pao.BarCode.IBarCode.DrawDelicate(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            This is to draw a barcode. The difference from Draw methods is that this method is not used to set overall width but the thinnest bar width of barcode.
            </summary>
            <param name="code">Set barcode codes by character strings.</param>
            <param name="x">Set x-coordinate of the drawing start point at upper left.</param>
            <param name="y">Set y-coordinate of the drawing start point at upper left.</param>
            <param name="minLineWidth">Set the thinnest bar width of barcode to be drawn.</param>
            <param name="height">Set height of the barcode.</param>
        </member>
        <member name="M:Pao.BarCode.IBarCode.DrawDelicate(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            This is to draw a barcode. The difference from Draw methods is that this method is not used to set overall width but the thinnest bar width of barcode.
            draw barcode to image file, when specifying ImageFormat in constructor.
            </summary>
            <param name="code">Set barcode codes by character strings.</param>
            <param name="x">Set x-coordinate of the drawing start point at upper left.</param>
            <param name="y">Set y-coordinate of the drawing start point at upper left.</param>
            <param name="minLineWidth">Set the thinnest bar width of barcode to be drawn.</param>
            <param name="height">Set height of the barcode.</param>
            <param name="imageFilePath">image file path</param>
        </member>
        <member name="M:Pao.BarCode.IBarCode.DrawDirect(System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Barcode is directly drawn within the width set in pixel.
            Accuracy and speed are better than Draw method, although the width cannot be fixed.
            </summary>
            <param name="code">Set barcode codes by character strings.</param>
            <param name="x">Set x-coordinate of the drawing start point at upper left.</param>
            <param name="y">Set y-coordinate of the drawing start point at upper left.</param>
            <param name="width">Set overall width of the barcode.</param>
            <param name="height">Set height of the barcode.</param>
        </member>
        <member name="M:Pao.BarCode.IBarCode.DrawDirect(System.String,System.Single,System.Single,System.Single,System.Single,System.String)">
            <summary>
            Barcode is directly drawn within the width set in pixel.
            Accuracy and speed are better than Draw method, although the width cannot be fixed.
            draw barcode to image file, when specifying ImageFormat in constructor.
            </summary>
            <param name="code">Set barcode codes by character strings.</param>
            <param name="x">Set x-coordinate of the drawing start point at upper left.</param>
            <param name="y">Set y-coordinate of the drawing start point at upper left.</param>
            <param name="width">Set overall width of the barcode.</param>
            <param name="height">Set height of the barcode.</param>
            <param name="imageFilePath">image file path</param>
        </member>
        <member name="T:Pao.BarCode.PmSvgAttr">
            <summary>
            Reportで使用するXML属性名を宣言する
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.ObjectName">
            <summary>
            名称を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.SizeW">
            <summary>
            サイズを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.StartX">
            <summary>
            X座標を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.StartY">
            <summary>
            Y座標を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.EndX">
            <summary>
            X座標を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.EndY">
            <summary>
            Y座標を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Color">
            <summary>
            色を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Style">
            <summary>
            線種を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.X">
            <summary>
            X座標を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Y">
            <summary>
            Y座標を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Width">
            <summary>
            幅を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Height">
            <summary>
            高さを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Angle">
            <summary>
            回転角度を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.BackColor">
            <summary>
            背景色を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.PaintColor">
            <summary>
            塗り潰し色を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Density">
            <summary>
            網掛けを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Text">
            <summary>
            文字列を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Elastic">
            <summary>
            伸縮自在を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.OutLineWidth">
            <summary>
            アウトライン幅を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.OutLineColor">
            <summary>
            アウトライン色を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Align">
            <summary>
            四角形の中の位置を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Reverse">
            <summary>
            四角形の中の位置を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.R">
            <summary>
            丸さを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.TL">
            <summary>
            左上角を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.TR">
            <summary>
            右上角を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.BL">
            <summary>
            左下角を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.BR">
            <summary>
            右下角を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Thick">
            <summary>
            円弧の厚みを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Kind">
            <summary>
            バーコード種類を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Code">
            <summary>
            コードを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Soeji">
            <summary>
            添字表示を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Kintou">
            <summary>
            均等割付を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.StartStop">
            <summary>
            スタート・ストップコード付加を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.CodeSetABC">
            <summary>
            CODE128のコードセットを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Point">
            <summary>
            郵便カスタマバーコードのポイントを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.QrVersion">
            <summary>
            QRコードのバージョンを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.QrErrCorrect">
            <summary>
            QRコードのエラー訂正レベルを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.StringEncoding">
            <summary>
            全角文字コード(二次元バーコード)
            Encoding.GetEncoding()の引数は受け付けます。
            例："utf-8" / "shift-jis" / "932" ...等...
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.PDF417_SizeKind">
            <summary>
            データ列数・行数決定方法
            <c>AUTO</c> 自動サイズ(アスペクト比より決定)
            <c>COLUMNS</c> 指定列数に従う
            <c>ROWS</c> 指定行数に従う
            <c>COLUMNS_AND_LOWS</c> 指定列数・行数両方に従う(長方形の最小値)
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.PDF417_CodeRows">
            <summary>
            出力行数指定
            <c>3～90</c>
            SizeKindが出力行数指定の場合＝(自動サイズでない・列数指定でない場合)有効
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.PDF417_CodeColumns">
            <summary>
            出力データカラム数指定
            <c>1～30</c>
            SizeKindが出力列数指定の場合＝(自動サイズでない・行数指定でない場合)有効
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.PDF417_ErrorLevel">
            <summary>
            エラー訂正レベル
            <c>0～8</c>
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.PDF417_UseAutoErrorLevel">
            <summary>
            自動でエラー訂正レベルを決定(する・しない)
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.PDF417_AspectRatio">
            <summary>
            縦横アクセプト比
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.DataMatrix_CodeSize">
            <summary>
            シンボル コード サイズ
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.ImageSizeType">
            <summary>
            画像の拡大・縮小を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Agree">
            <summary>
            Yes/Noを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.IntervalX">
            <summary>
            X座標の間隔を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.IntervalY">
            <summary>
            Y座標の間隔を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Italic">
            <summary>
            イタリックを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Bold">
            <summary>
            ボールドを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Underline">
            <summary>
            アンダーラインを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.FontName">
            <summary>
            フォント名を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.FontSize">
            <summary>
            フォントサイズを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Strikeout">
            <summary>
            取り消し線を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Unit">
            <summary>
            高さの単位を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Index">
            <summary>
            Indexを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.AttrName">
            <summary>
            属性名を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Pos">
            <summary>
            位置を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Pattern">
            <summary>
            パターンを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.FontAttr">
            <summary>
            フォントを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.LineAttr">
            <summary>
            罫線を表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.HatchAttr">
            <summary>
            網掛けを表す属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Drawing">
            <summary>
            描画属性
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.Repeat">
            <summary>
            繰返し回数
            </summary>
        </member>
        <member name="F:Pao.BarCode.PmSvgAttr.name_">
            <summary>
            XML属性名
            </summary>
        </member>
        <member name="P:Pao.BarCode.PmSvgAttr.Name">
            <summary>
            属性名を取得する
            </summary>
        </member>
        <member name="M:Pao.BarCode.PmSvgAttr.#ctor(System.String)">
            <summary>
            指定された属性名を持つPmSvgAttrオブジェクトを構築する
            </summary>
            <param name="name">属性名</param>
        </member>
        <member name="M:Pao.BarCode.QR.ByteToString(System.Byte)">
            <summary>
            Converts a single byte to a string in a manner similar to 
            Microsoft.VisualBasic.CompilerServices.Conversions.ToString(byte)
            </summary>
            <param name="b">The byte to convert</param>
            <returns>A string representation of the byte</returns>
        </member>
        <member name="M:Pao.BarCode.QR.BytesToString(System.Byte[])">
            <summary>
            Converts a byte array to a string in a manner similar to 
            Microsoft.VisualBasic.CompilerServices.Conversions.ToString(byte[])
            </summary>
            <param name="bytes">The byte array to convert</param>
            <returns>A string representation of the byte array</returns>
        </member>
        <member name="M:Pao.BarCode.QR.CompareString(System.String,System.String,System.Boolean)">
            <summary>
            Compares two specified strings and returns an integer that indicates their relative position in the sort order.
            Similar to Microsoft.VisualBasic.CompilerServices.CompareString.
            </summary>
            <param name="string1">The first string to compare.</param>
            <param name="string2">The second string to compare.</param>
            <param name="ignoreCase">true to ignore case during the comparison; otherwise, false.</param>
            <returns>
            A signed integer that indicates the relative values of string1 and string2, as follows:
            Less than zero: string1 is less than string2.
            Zero: string1 equals string2.
            Greater than zero: string1 is greater than string2.
            </returns>
        </member>
        <member name="M:Pao.BarCode.QR.CompareString(System.String,System.String)">
            <summary>
            Overload that defaults to case-sensitive comparison
            </summary>
            <param name="string1">The first string to compare.</param>
            <param name="string2">The second string to compare.</param>
            <returns>
            A signed integer that indicates the relative values of string1 and string2.
            </returns>
        </member>
        <member name="M:Pao.BarCode.Conversions.ToDouble(System.Object)">
            <summary>
            Converts a value to a Double data type.
            Similar to Microsoft.VisualBasic.CompilerServices.Conversions.ToDouble
            </summary>
            <param name="value">The value to convert to Double.</param>
            <returns>A Double that represents the converted value.</returns>
            <exception cref="T:System.InvalidCastException">The conversion is not valid.</exception>
        </member>
        <member name="M:Pao.BarCode.Conversions.ToString(System.Object)">
            <summary>
            Converts a value to a String data type.
            Similar to Microsoft.VisualBasic.CompilerServices.Conversions.ToString
            </summary>
            <param name="value">The value to convert to String.</param>
            <returns>A String that represents the converted value.</returns>
        </member>
        <member name="M:Pao.BarCode.Conversions.Int(System.Double)">
            <summary>
            Returns the integer portion of a number.
            Similar to Microsoft.VisualBasic.Conversions.Int
            </summary>
            <param name="number">The number to convert.</param>
            <returns>
            The integer portion of the number (truncated, not rounded).
            If number is negative, Int returns the first negative integer less than or equal to number.
            </returns>
        </member>
        <member name="M:Pao.BarCode.Conversions.Int(System.Decimal)">
            <summary>
            Overload for decimal input
            </summary>
        </member>
        <member name="M:Pao.BarCode.Conversions.Int(System.Single)">
            <summary>
            Overload for float input
            </summary>
        </member>
        <member name="M:Pao.BarCode.Conversions.Int(System.String)">
            <summary>
            Overload that accepts string input and converts to double first
            </summary>
        </member>
        <member name="M:Pao.BarCode.Conversions.Int(System.Object)">
            <summary>
            Overload for general object input
            </summary>
        </member>
        <member name="T:ExtStrings">
            -----------------------------------------------------------------------------
                Microsoft.VisualBasic.Strings をカバーした静的クラスです。
            -----------------------------------------------------------------------------
        </member>
        <member name="T:Trads.Lambda.clsRet">
            <summary>
            
            </summary>
        </member>
        <member name="M:Trads.Lambda.clsRet.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Trads.Lambda.clsRet.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="P:Trads.Lambda.clsRet.xIsError">
            <summary>
            エラー判定処理
            </summary>
        </member>
        <member name="M:Trads.Lambda.clsRet.xSetMessage(System.String)">
            <summary>
            
            </summary>
            <param name="Message"></param>
        </member>
        <member name="M:Trads.Lambda.clsRet.xSetError(System.String)">
            <summary>
            エラーメッセージ設定処理
            </summary>
            <param name="ErrorMessage"></param>
        </member>
        <member name="M:Trads.Lambda.clsRet.xGetMessage">
            <summary>
            メッセージ取得処理
            </summary>
            <returns></returns>
        </member>
        <member name="M:Trads.Lambda.clsRet.xAddDataTable(System.Data.DataTable)">
            <summary>
            テーブル追加処理
            </summary>
            <param name="DataTable"></param>
            <returns></returns>
        </member>
        <member name="M:Trads.Lambda.clsRet.xGetDataTable(System.String)">
            <summary>
            テーブル取得処理
            </summary>
            <param name="TableName"></param>
            <returns></returns>
        </member>
        <member name="M:Trads.Lambda.clsRet.xGetDataTable(System.Int32)">
            <summary>
            テーブル取得処理（１）
            </summary>
            <param name="TableIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Trads.Lambda.clsRet.xSetStartTime">
            <summary>
            開始時刻設定処理
            </summary>
        </member>
        <member name="M:Trads.Lambda.clsRet.xSetEndTime">
            <summary>
            終了時刻設定処理
            </summary>
        </member>
        <member name="M:Trads.Lambda.clsRet.xSetReturn(System.String,System.String)">
            <summary>
            戻り値設定処理
            </summary>
            <param name="ITEM"></param>
            <param name="VALUE"></param>
        </member>
        <member name="M:Trads.Lambda.clsRet.xGetReturn(System.String)">
            <summary>
            戻り値取得処理
            </summary>
            <param name="ITEM"></param>
            <returns></returns>
        </member>
        <member name="P:Trads.Lambda.clsRet.xDownloadFile">
            <summary>
            
            </summary>
        </member>
        <member name="P:Trads.Lambda.clsRet.xDownloadFileName">
            <summary>
            
            </summary>
        </member>
    </members>
</doc>
